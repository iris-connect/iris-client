/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.PrescriptionReferenceDto;
import iris.sormas.client.model.TherapyReferenceDto;
import iris.sormas.client.model.TreatmentRoute;
import iris.sormas.client.model.TreatmentType;
import iris.sormas.client.model.TypeOfDrug;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * TreatmentDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class TreatmentDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("therapy")
  private TherapyReferenceDto therapy = null;

  @JsonProperty("treatmentDateTime")
  private Instant treatmentDateTime = null;

  @JsonProperty("executingClinician")
  private String executingClinician = null;

  @JsonProperty("treatmentType")
  private TreatmentType treatmentType = null;

  @JsonProperty("treatmentDetails")
  private String treatmentDetails = null;

  @JsonProperty("typeOfDrug")
  private TypeOfDrug typeOfDrug = null;

  @JsonProperty("dose")
  private String dose = null;

  @JsonProperty("route")
  private TreatmentRoute route = null;

  @JsonProperty("routeDetails")
  private String routeDetails = null;

  @JsonProperty("additionalNotes")
  private String additionalNotes = null;

  @JsonProperty("prescription")
  private PrescriptionReferenceDto prescription = null;

  public TreatmentDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public TreatmentDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public TreatmentDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public TreatmentDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public TreatmentDto therapy(TherapyReferenceDto therapy) {
    this.therapy = therapy;
    return this;
  }

   /**
   * Get therapy
   * @return therapy
  **/
  @Schema(description = "")
  public TherapyReferenceDto getTherapy() {
    return therapy;
  }

  public void setTherapy(TherapyReferenceDto therapy) {
    this.therapy = therapy;
  }

  public TreatmentDto treatmentDateTime(Instant treatmentDateTime) {
    this.treatmentDateTime = treatmentDateTime;
    return this;
  }

   /**
   * Get treatmentDateTime
   * @return treatmentDateTime
  **/
  @Schema(description = "")
  public Instant getTreatmentDateTime() {
    return treatmentDateTime;
  }

  public void setTreatmentDateTime(Instant treatmentDateTime) {
    this.treatmentDateTime = treatmentDateTime;
  }

  public TreatmentDto executingClinician(String executingClinician) {
    this.executingClinician = executingClinician;
    return this;
  }

   /**
   * Get executingClinician
   * @return executingClinician
  **/
  @Schema(description = "")
  public String getExecutingClinician() {
    return executingClinician;
  }

  public void setExecutingClinician(String executingClinician) {
    this.executingClinician = executingClinician;
  }

  public TreatmentDto treatmentType(TreatmentType treatmentType) {
    this.treatmentType = treatmentType;
    return this;
  }

   /**
   * Get treatmentType
   * @return treatmentType
  **/
  @Schema(description = "")
  public TreatmentType getTreatmentType() {
    return treatmentType;
  }

  public void setTreatmentType(TreatmentType treatmentType) {
    this.treatmentType = treatmentType;
  }

  public TreatmentDto treatmentDetails(String treatmentDetails) {
    this.treatmentDetails = treatmentDetails;
    return this;
  }

   /**
   * Get treatmentDetails
   * @return treatmentDetails
  **/
  @Schema(description = "")
  public String getTreatmentDetails() {
    return treatmentDetails;
  }

  public void setTreatmentDetails(String treatmentDetails) {
    this.treatmentDetails = treatmentDetails;
  }

  public TreatmentDto typeOfDrug(TypeOfDrug typeOfDrug) {
    this.typeOfDrug = typeOfDrug;
    return this;
  }

   /**
   * Get typeOfDrug
   * @return typeOfDrug
  **/
  @Schema(description = "")
  public TypeOfDrug getTypeOfDrug() {
    return typeOfDrug;
  }

  public void setTypeOfDrug(TypeOfDrug typeOfDrug) {
    this.typeOfDrug = typeOfDrug;
  }

  public TreatmentDto dose(String dose) {
    this.dose = dose;
    return this;
  }

   /**
   * Get dose
   * @return dose
  **/
  @Schema(description = "")
  public String getDose() {
    return dose;
  }

  public void setDose(String dose) {
    this.dose = dose;
  }

  public TreatmentDto route(TreatmentRoute route) {
    this.route = route;
    return this;
  }

   /**
   * Get route
   * @return route
  **/
  @Schema(description = "")
  public TreatmentRoute getRoute() {
    return route;
  }

  public void setRoute(TreatmentRoute route) {
    this.route = route;
  }

  public TreatmentDto routeDetails(String routeDetails) {
    this.routeDetails = routeDetails;
    return this;
  }

   /**
   * Get routeDetails
   * @return routeDetails
  **/
  @Schema(description = "")
  public String getRouteDetails() {
    return routeDetails;
  }

  public void setRouteDetails(String routeDetails) {
    this.routeDetails = routeDetails;
  }

  public TreatmentDto additionalNotes(String additionalNotes) {
    this.additionalNotes = additionalNotes;
    return this;
  }

   /**
   * Get additionalNotes
   * @return additionalNotes
  **/
  @Schema(description = "")
  public String getAdditionalNotes() {
    return additionalNotes;
  }

  public void setAdditionalNotes(String additionalNotes) {
    this.additionalNotes = additionalNotes;
  }

  public TreatmentDto prescription(PrescriptionReferenceDto prescription) {
    this.prescription = prescription;
    return this;
  }

   /**
   * Get prescription
   * @return prescription
  **/
  @Schema(description = "")
  public PrescriptionReferenceDto getPrescription() {
    return prescription;
  }

  public void setPrescription(PrescriptionReferenceDto prescription) {
    this.prescription = prescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TreatmentDto treatmentDto = (TreatmentDto) o;
    return Objects.equals(this.creationDate, treatmentDto.creationDate) &&
        Objects.equals(this.changeDate, treatmentDto.changeDate) &&
        Objects.equals(this.uuid, treatmentDto.uuid) &&
        Objects.equals(this.pseudonymized, treatmentDto.pseudonymized) &&
        Objects.equals(this.therapy, treatmentDto.therapy) &&
        Objects.equals(this.treatmentDateTime, treatmentDto.treatmentDateTime) &&
        Objects.equals(this.executingClinician, treatmentDto.executingClinician) &&
        Objects.equals(this.treatmentType, treatmentDto.treatmentType) &&
        Objects.equals(this.treatmentDetails, treatmentDto.treatmentDetails) &&
        Objects.equals(this.typeOfDrug, treatmentDto.typeOfDrug) &&
        Objects.equals(this.dose, treatmentDto.dose) &&
        Objects.equals(this.route, treatmentDto.route) &&
        Objects.equals(this.routeDetails, treatmentDto.routeDetails) &&
        Objects.equals(this.additionalNotes, treatmentDto.additionalNotes) &&
        Objects.equals(this.prescription, treatmentDto.prescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, pseudonymized, therapy, treatmentDateTime, executingClinician, treatmentType, treatmentDetails, typeOfDrug, dose, route, routeDetails, additionalNotes, prescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TreatmentDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    therapy: ").append(toIndentedString(therapy)).append("\n");
    sb.append("    treatmentDateTime: ").append(toIndentedString(treatmentDateTime)).append("\n");
    sb.append("    executingClinician: ").append(toIndentedString(executingClinician)).append("\n");
    sb.append("    treatmentType: ").append(toIndentedString(treatmentType)).append("\n");
    sb.append("    treatmentDetails: ").append(toIndentedString(treatmentDetails)).append("\n");
    sb.append("    typeOfDrug: ").append(toIndentedString(typeOfDrug)).append("\n");
    sb.append("    dose: ").append(toIndentedString(dose)).append("\n");
    sb.append("    route: ").append(toIndentedString(route)).append("\n");
    sb.append("    routeDetails: ").append(toIndentedString(routeDetails)).append("\n");
    sb.append("    additionalNotes: ").append(toIndentedString(additionalNotes)).append("\n");
    sb.append("    prescription: ").append(toIndentedString(prescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
