/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.AreaType;
import iris.sormas.client.model.CommunityReferenceDto;
import iris.sormas.client.model.ContinentReferenceDto;
import iris.sormas.client.model.CountryReferenceDto;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.FacilityType;
import iris.sormas.client.model.PersonAddressType;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.SubcontinentReferenceDto;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * LocationDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class LocationDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("continent")
  private ContinentReferenceDto continent = null;

  @JsonProperty("subcontinent")
  private SubcontinentReferenceDto subcontinent = null;

  @JsonProperty("country")
  private CountryReferenceDto country = null;

  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("community")
  private CommunityReferenceDto community = null;

  @JsonProperty("details")
  private String details = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("areaType")
  private AreaType areaType = null;

  @JsonProperty("latitude")
  private Double latitude = null;

  @JsonProperty("longitude")
  private Double longitude = null;

  @JsonProperty("latLonAccuracy")
  private Float latLonAccuracy = null;

  @JsonProperty("postalCode")
  private String postalCode = null;

  @JsonProperty("street")
  private String street = null;

  @JsonProperty("houseNumber")
  private String houseNumber = null;

  @JsonProperty("additionalInformation")
  private String additionalInformation = null;

  @JsonProperty("addressType")
  private PersonAddressType addressType = null;

  @JsonProperty("addressTypeDetails")
  private String addressTypeDetails = null;

  @JsonProperty("facilityType")
  private FacilityType facilityType = null;

  @JsonProperty("facility")
  private FacilityReferenceDto facility = null;

  @JsonProperty("facilityDetails")
  private String facilityDetails = null;

  @JsonProperty("contactPersonFirstName")
  private String contactPersonFirstName = null;

  @JsonProperty("contactPersonLastName")
  private String contactPersonLastName = null;

  @JsonProperty("contactPersonPhone")
  private String contactPersonPhone = null;

  @JsonProperty("contactPersonEmail")
  private String contactPersonEmail = null;

  public LocationDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public LocationDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public LocationDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public LocationDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public LocationDto continent(ContinentReferenceDto continent) {
    this.continent = continent;
    return this;
  }

   /**
   * Get continent
   * @return continent
  **/
  @Schema(description = "")
  public ContinentReferenceDto getContinent() {
    return continent;
  }

  public void setContinent(ContinentReferenceDto continent) {
    this.continent = continent;
  }

  public LocationDto subcontinent(SubcontinentReferenceDto subcontinent) {
    this.subcontinent = subcontinent;
    return this;
  }

   /**
   * Get subcontinent
   * @return subcontinent
  **/
  @Schema(description = "")
  public SubcontinentReferenceDto getSubcontinent() {
    return subcontinent;
  }

  public void setSubcontinent(SubcontinentReferenceDto subcontinent) {
    this.subcontinent = subcontinent;
  }

  public LocationDto country(CountryReferenceDto country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @Schema(description = "")
  public CountryReferenceDto getCountry() {
    return country;
  }

  public void setCountry(CountryReferenceDto country) {
    this.country = country;
  }

  public LocationDto region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public LocationDto district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public LocationDto community(CommunityReferenceDto community) {
    this.community = community;
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @Schema(description = "")
  public CommunityReferenceDto getCommunity() {
    return community;
  }

  public void setCommunity(CommunityReferenceDto community) {
    this.community = community;
  }

  public LocationDto details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @Schema(description = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public LocationDto city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @Schema(description = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public LocationDto areaType(AreaType areaType) {
    this.areaType = areaType;
    return this;
  }

   /**
   * Get areaType
   * @return areaType
  **/
  @Schema(description = "")
  public AreaType getAreaType() {
    return areaType;
  }

  public void setAreaType(AreaType areaType) {
    this.areaType = areaType;
  }

  public LocationDto latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @Schema(description = "")
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public LocationDto longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @Schema(description = "")
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public LocationDto latLonAccuracy(Float latLonAccuracy) {
    this.latLonAccuracy = latLonAccuracy;
    return this;
  }

   /**
   * Get latLonAccuracy
   * @return latLonAccuracy
  **/
  @Schema(description = "")
  public Float getLatLonAccuracy() {
    return latLonAccuracy;
  }

  public void setLatLonAccuracy(Float latLonAccuracy) {
    this.latLonAccuracy = latLonAccuracy;
  }

  public LocationDto postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @Schema(description = "")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public LocationDto street(String street) {
    this.street = street;
    return this;
  }

   /**
   * Get street
   * @return street
  **/
  @Schema(description = "")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public LocationDto houseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
    return this;
  }

   /**
   * Get houseNumber
   * @return houseNumber
  **/
  @Schema(description = "")
  public String getHouseNumber() {
    return houseNumber;
  }

  public void setHouseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
  }

  public LocationDto additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Get additionalInformation
   * @return additionalInformation
  **/
  @Schema(description = "")
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  public LocationDto addressType(PersonAddressType addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @Schema(description = "")
  public PersonAddressType getAddressType() {
    return addressType;
  }

  public void setAddressType(PersonAddressType addressType) {
    this.addressType = addressType;
  }

  public LocationDto addressTypeDetails(String addressTypeDetails) {
    this.addressTypeDetails = addressTypeDetails;
    return this;
  }

   /**
   * Get addressTypeDetails
   * @return addressTypeDetails
  **/
  @Schema(description = "")
  public String getAddressTypeDetails() {
    return addressTypeDetails;
  }

  public void setAddressTypeDetails(String addressTypeDetails) {
    this.addressTypeDetails = addressTypeDetails;
  }

  public LocationDto facilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
    return this;
  }

   /**
   * Get facilityType
   * @return facilityType
  **/
  @Schema(description = "")
  public FacilityType getFacilityType() {
    return facilityType;
  }

  public void setFacilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
  }

  public LocationDto facility(FacilityReferenceDto facility) {
    this.facility = facility;
    return this;
  }

   /**
   * Get facility
   * @return facility
  **/
  @Schema(description = "")
  public FacilityReferenceDto getFacility() {
    return facility;
  }

  public void setFacility(FacilityReferenceDto facility) {
    this.facility = facility;
  }

  public LocationDto facilityDetails(String facilityDetails) {
    this.facilityDetails = facilityDetails;
    return this;
  }

   /**
   * Get facilityDetails
   * @return facilityDetails
  **/
  @Schema(description = "")
  public String getFacilityDetails() {
    return facilityDetails;
  }

  public void setFacilityDetails(String facilityDetails) {
    this.facilityDetails = facilityDetails;
  }

  public LocationDto contactPersonFirstName(String contactPersonFirstName) {
    this.contactPersonFirstName = contactPersonFirstName;
    return this;
  }

   /**
   * Get contactPersonFirstName
   * @return contactPersonFirstName
  **/
  @Schema(description = "")
  public String getContactPersonFirstName() {
    return contactPersonFirstName;
  }

  public void setContactPersonFirstName(String contactPersonFirstName) {
    this.contactPersonFirstName = contactPersonFirstName;
  }

  public LocationDto contactPersonLastName(String contactPersonLastName) {
    this.contactPersonLastName = contactPersonLastName;
    return this;
  }

   /**
   * Get contactPersonLastName
   * @return contactPersonLastName
  **/
  @Schema(description = "")
  public String getContactPersonLastName() {
    return contactPersonLastName;
  }

  public void setContactPersonLastName(String contactPersonLastName) {
    this.contactPersonLastName = contactPersonLastName;
  }

  public LocationDto contactPersonPhone(String contactPersonPhone) {
    this.contactPersonPhone = contactPersonPhone;
    return this;
  }

   /**
   * Get contactPersonPhone
   * @return contactPersonPhone
  **/
  @Schema(description = "")
  public String getContactPersonPhone() {
    return contactPersonPhone;
  }

  public void setContactPersonPhone(String contactPersonPhone) {
    this.contactPersonPhone = contactPersonPhone;
  }

  public LocationDto contactPersonEmail(String contactPersonEmail) {
    this.contactPersonEmail = contactPersonEmail;
    return this;
  }

   /**
   * Get contactPersonEmail
   * @return contactPersonEmail
  **/
  @Schema(description = "")
  public String getContactPersonEmail() {
    return contactPersonEmail;
  }

  public void setContactPersonEmail(String contactPersonEmail) {
    this.contactPersonEmail = contactPersonEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationDto locationDto = (LocationDto) o;
    return Objects.equals(this.creationDate, locationDto.creationDate) &&
        Objects.equals(this.changeDate, locationDto.changeDate) &&
        Objects.equals(this.uuid, locationDto.uuid) &&
        Objects.equals(this.pseudonymized, locationDto.pseudonymized) &&
        Objects.equals(this.continent, locationDto.continent) &&
        Objects.equals(this.subcontinent, locationDto.subcontinent) &&
        Objects.equals(this.country, locationDto.country) &&
        Objects.equals(this.region, locationDto.region) &&
        Objects.equals(this.district, locationDto.district) &&
        Objects.equals(this.community, locationDto.community) &&
        Objects.equals(this.details, locationDto.details) &&
        Objects.equals(this.city, locationDto.city) &&
        Objects.equals(this.areaType, locationDto.areaType) &&
        Objects.equals(this.latitude, locationDto.latitude) &&
        Objects.equals(this.longitude, locationDto.longitude) &&
        Objects.equals(this.latLonAccuracy, locationDto.latLonAccuracy) &&
        Objects.equals(this.postalCode, locationDto.postalCode) &&
        Objects.equals(this.street, locationDto.street) &&
        Objects.equals(this.houseNumber, locationDto.houseNumber) &&
        Objects.equals(this.additionalInformation, locationDto.additionalInformation) &&
        Objects.equals(this.addressType, locationDto.addressType) &&
        Objects.equals(this.addressTypeDetails, locationDto.addressTypeDetails) &&
        Objects.equals(this.facilityType, locationDto.facilityType) &&
        Objects.equals(this.facility, locationDto.facility) &&
        Objects.equals(this.facilityDetails, locationDto.facilityDetails) &&
        Objects.equals(this.contactPersonFirstName, locationDto.contactPersonFirstName) &&
        Objects.equals(this.contactPersonLastName, locationDto.contactPersonLastName) &&
        Objects.equals(this.contactPersonPhone, locationDto.contactPersonPhone) &&
        Objects.equals(this.contactPersonEmail, locationDto.contactPersonEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, pseudonymized, continent, subcontinent, country, region, district, community, details, city, areaType, latitude, longitude, latLonAccuracy, postalCode, street, houseNumber, additionalInformation, addressType, addressTypeDetails, facilityType, facility, facilityDetails, contactPersonFirstName, contactPersonLastName, contactPersonPhone, contactPersonEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    continent: ").append(toIndentedString(continent)).append("\n");
    sb.append("    subcontinent: ").append(toIndentedString(subcontinent)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    areaType: ").append(toIndentedString(areaType)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    latLonAccuracy: ").append(toIndentedString(latLonAccuracy)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    addressTypeDetails: ").append(toIndentedString(addressTypeDetails)).append("\n");
    sb.append("    facilityType: ").append(toIndentedString(facilityType)).append("\n");
    sb.append("    facility: ").append(toIndentedString(facility)).append("\n");
    sb.append("    facilityDetails: ").append(toIndentedString(facilityDetails)).append("\n");
    sb.append("    contactPersonFirstName: ").append(toIndentedString(contactPersonFirstName)).append("\n");
    sb.append("    contactPersonLastName: ").append(toIndentedString(contactPersonLastName)).append("\n");
    sb.append("    contactPersonPhone: ").append(toIndentedString(contactPersonPhone)).append("\n");
    sb.append("    contactPersonEmail: ").append(toIndentedString(contactPersonEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
