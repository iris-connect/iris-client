/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CaseClassification;
import iris.sormas.client.model.CaseOrigin;
import iris.sormas.client.model.CaseOutcome;
import iris.sormas.client.model.CommunityReferenceDto;
import iris.sormas.client.model.CriteriaDateType;
import iris.sormas.client.model.DateFilterOption;
import iris.sormas.client.model.Disease;
import iris.sormas.client.model.DiseaseVariant;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.EntityRelevanceStatus;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.FacilityType;
import iris.sormas.client.model.FacilityTypeGroup;
import iris.sormas.client.model.FollowUpStatus;
import iris.sormas.client.model.InvestigationStatus;
import iris.sormas.client.model.PersonReferenceDto;
import iris.sormas.client.model.PointOfEntryReferenceDto;
import iris.sormas.client.model.PresentCondition;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.SymptomJournalStatus;
import iris.sormas.client.model.UserReferenceDto;
import iris.sormas.client.model.UserRole;
import iris.sormas.client.model.Vaccination;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * CaseCriteria
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class CaseCriteria {
  @JsonProperty("reportingUserRole")
  private UserRole reportingUserRole = null;

  @JsonProperty("disease")
  private Disease disease = null;

  @JsonProperty("diseaseVariant")
  private DiseaseVariant diseaseVariant = null;

  @JsonProperty("outcome")
  private CaseOutcome outcome = null;

  @JsonProperty("caseClassification")
  private CaseClassification caseClassification = null;

  @JsonProperty("investigationStatus")
  private InvestigationStatus investigationStatus = null;

  @JsonProperty("presentCondition")
  private PresentCondition presentCondition = null;

  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("community")
  private CommunityReferenceDto community = null;

  @JsonProperty("healthFacility")
  private FacilityReferenceDto healthFacility = null;

  @JsonProperty("pointOfEntry")
  private PointOfEntryReferenceDto pointOfEntry = null;

  @JsonProperty("surveillanceOfficer")
  private UserReferenceDto surveillanceOfficer = null;

  @JsonProperty("newCaseDateFrom")
  private Instant newCaseDateFrom = null;

  @JsonProperty("newCaseDateTo")
  private Instant newCaseDateTo = null;

  @JsonProperty("creationDateFrom")
  private Instant creationDateFrom = null;

  @JsonProperty("creationDateTo")
  private Instant creationDateTo = null;

  @JsonProperty("newCaseDateType")
  private CriteriaDateType newCaseDateType = null;

  @JsonProperty("dateFilterOption")
  private DateFilterOption dateFilterOption = null;

  @JsonProperty("person")
  private PersonReferenceDto person = null;

  @JsonProperty("mustHaveNoGeoCoordinates")
  private Boolean mustHaveNoGeoCoordinates = null;

  @JsonProperty("mustBePortHealthCaseWithoutFacility")
  private Boolean mustBePortHealthCaseWithoutFacility = null;

  @JsonProperty("mustHaveCaseManagementData")
  private Boolean mustHaveCaseManagementData = null;

  @JsonProperty("withoutResponsibleOfficer")
  private Boolean withoutResponsibleOfficer = null;

  @JsonProperty("withExtendedQuarantine")
  private Boolean withExtendedQuarantine = null;

  @JsonProperty("withReducedQuarantine")
  private Boolean withReducedQuarantine = null;

  @JsonProperty("deleted")
  private Boolean deleted = null;

  @JsonProperty("nameUuidEpidNumberLike")
  private String nameUuidEpidNumberLike = null;

  @JsonProperty("eventLike")
  private String eventLike = null;

  @JsonProperty("onlyCasesWithEvents")
  private Boolean onlyCasesWithEvents = null;

  @JsonProperty("reportingUserLike")
  private String reportingUserLike = null;

  @JsonProperty("caseOrigin")
  private CaseOrigin caseOrigin = null;

  @JsonProperty("relevanceStatus")
  private EntityRelevanceStatus relevanceStatus = null;

  @JsonProperty("sourceCaseInfoLike")
  private String sourceCaseInfoLike = null;

  @JsonProperty("quarantineTo")
  private Instant quarantineTo = null;

  @JsonProperty("birthdateYYYY")
  private Integer birthdateYYYY = null;

  @JsonProperty("birthdateMM")
  private Integer birthdateMM = null;

  @JsonProperty("birthdateDD")
  private Integer birthdateDD = null;

  @JsonProperty("followUpStatus")
  private FollowUpStatus followUpStatus = null;

  @JsonProperty("followUpUntilTo")
  private Instant followUpUntilTo = null;

  @JsonProperty("followUpUntilFrom")
  private Instant followUpUntilFrom = null;

  @JsonProperty("symptomJournalStatus")
  private SymptomJournalStatus symptomJournalStatus = null;

  @JsonProperty("vaccination")
  private Vaccination vaccination = null;

  @JsonProperty("reportDateTo")
  private Instant reportDateTo = null;

  @JsonProperty("facilityTypeGroup")
  private FacilityTypeGroup facilityTypeGroup = null;

  @JsonProperty("facilityType")
  private FacilityType facilityType = null;

  @JsonProperty("includeCasesFromOtherJurisdictions")
  private Boolean includeCasesFromOtherJurisdictions = null;

  @JsonProperty("onlyContactsFromOtherInstances")
  private Boolean onlyContactsFromOtherInstances = null;

  @JsonProperty("onlyCasesWithReinfection")
  private Boolean onlyCasesWithReinfection = null;

  @JsonProperty("onlyEntitiesNotSharedWithExternalSurvTool")
  private Boolean onlyEntitiesNotSharedWithExternalSurvTool = null;

  @JsonProperty("onlyEntitiesSharedWithExternalSurvTool")
  private Boolean onlyEntitiesSharedWithExternalSurvTool = null;

  @JsonProperty("onlyEntitiesChangedSinceLastSharedWithExternalSurvTool")
  private Boolean onlyEntitiesChangedSinceLastSharedWithExternalSurvTool = null;

  public CaseCriteria reportingUserRole(UserRole reportingUserRole) {
    this.reportingUserRole = reportingUserRole;
    return this;
  }

   /**
   * Get reportingUserRole
   * @return reportingUserRole
  **/
  @Schema(description = "")
  public UserRole getReportingUserRole() {
    return reportingUserRole;
  }

  public void setReportingUserRole(UserRole reportingUserRole) {
    this.reportingUserRole = reportingUserRole;
  }

  public CaseCriteria disease(Disease disease) {
    this.disease = disease;
    return this;
  }

   /**
   * Get disease
   * @return disease
  **/
  @Schema(description = "")
  public Disease getDisease() {
    return disease;
  }

  public void setDisease(Disease disease) {
    this.disease = disease;
  }

  public CaseCriteria diseaseVariant(DiseaseVariant diseaseVariant) {
    this.diseaseVariant = diseaseVariant;
    return this;
  }

   /**
   * Get diseaseVariant
   * @return diseaseVariant
  **/
  @Schema(description = "")
  public DiseaseVariant getDiseaseVariant() {
    return diseaseVariant;
  }

  public void setDiseaseVariant(DiseaseVariant diseaseVariant) {
    this.diseaseVariant = diseaseVariant;
  }

  public CaseCriteria outcome(CaseOutcome outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @Schema(description = "")
  public CaseOutcome getOutcome() {
    return outcome;
  }

  public void setOutcome(CaseOutcome outcome) {
    this.outcome = outcome;
  }

  public CaseCriteria caseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
    return this;
  }

   /**
   * Get caseClassification
   * @return caseClassification
  **/
  @Schema(description = "")
  public CaseClassification getCaseClassification() {
    return caseClassification;
  }

  public void setCaseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
  }

  public CaseCriteria investigationStatus(InvestigationStatus investigationStatus) {
    this.investigationStatus = investigationStatus;
    return this;
  }

   /**
   * Get investigationStatus
   * @return investigationStatus
  **/
  @Schema(description = "")
  public InvestigationStatus getInvestigationStatus() {
    return investigationStatus;
  }

  public void setInvestigationStatus(InvestigationStatus investigationStatus) {
    this.investigationStatus = investigationStatus;
  }

  public CaseCriteria presentCondition(PresentCondition presentCondition) {
    this.presentCondition = presentCondition;
    return this;
  }

   /**
   * Get presentCondition
   * @return presentCondition
  **/
  @Schema(description = "")
  public PresentCondition getPresentCondition() {
    return presentCondition;
  }

  public void setPresentCondition(PresentCondition presentCondition) {
    this.presentCondition = presentCondition;
  }

  public CaseCriteria region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public CaseCriteria district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public CaseCriteria community(CommunityReferenceDto community) {
    this.community = community;
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @Schema(description = "")
  public CommunityReferenceDto getCommunity() {
    return community;
  }

  public void setCommunity(CommunityReferenceDto community) {
    this.community = community;
  }

  public CaseCriteria healthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
    return this;
  }

   /**
   * Get healthFacility
   * @return healthFacility
  **/
  @Schema(description = "")
  public FacilityReferenceDto getHealthFacility() {
    return healthFacility;
  }

  public void setHealthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
  }

  public CaseCriteria pointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
    return this;
  }

   /**
   * Get pointOfEntry
   * @return pointOfEntry
  **/
  @Schema(description = "")
  public PointOfEntryReferenceDto getPointOfEntry() {
    return pointOfEntry;
  }

  public void setPointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
  }

  public CaseCriteria surveillanceOfficer(UserReferenceDto surveillanceOfficer) {
    this.surveillanceOfficer = surveillanceOfficer;
    return this;
  }

   /**
   * Get surveillanceOfficer
   * @return surveillanceOfficer
  **/
  @Schema(description = "")
  public UserReferenceDto getSurveillanceOfficer() {
    return surveillanceOfficer;
  }

  public void setSurveillanceOfficer(UserReferenceDto surveillanceOfficer) {
    this.surveillanceOfficer = surveillanceOfficer;
  }

  public CaseCriteria newCaseDateFrom(Instant newCaseDateFrom) {
    this.newCaseDateFrom = newCaseDateFrom;
    return this;
  }

   /**
   * Get newCaseDateFrom
   * @return newCaseDateFrom
  **/
  @Schema(description = "")
  public Instant getNewCaseDateFrom() {
    return newCaseDateFrom;
  }

  public void setNewCaseDateFrom(Instant newCaseDateFrom) {
    this.newCaseDateFrom = newCaseDateFrom;
  }

  public CaseCriteria newCaseDateTo(Instant newCaseDateTo) {
    this.newCaseDateTo = newCaseDateTo;
    return this;
  }

   /**
   * Get newCaseDateTo
   * @return newCaseDateTo
  **/
  @Schema(description = "")
  public Instant getNewCaseDateTo() {
    return newCaseDateTo;
  }

  public void setNewCaseDateTo(Instant newCaseDateTo) {
    this.newCaseDateTo = newCaseDateTo;
  }

  public CaseCriteria creationDateFrom(Instant creationDateFrom) {
    this.creationDateFrom = creationDateFrom;
    return this;
  }

   /**
   * Get creationDateFrom
   * @return creationDateFrom
  **/
  @Schema(description = "")
  public Instant getCreationDateFrom() {
    return creationDateFrom;
  }

  public void setCreationDateFrom(Instant creationDateFrom) {
    this.creationDateFrom = creationDateFrom;
  }

  public CaseCriteria creationDateTo(Instant creationDateTo) {
    this.creationDateTo = creationDateTo;
    return this;
  }

   /**
   * Get creationDateTo
   * @return creationDateTo
  **/
  @Schema(description = "")
  public Instant getCreationDateTo() {
    return creationDateTo;
  }

  public void setCreationDateTo(Instant creationDateTo) {
    this.creationDateTo = creationDateTo;
  }

  public CaseCriteria newCaseDateType(CriteriaDateType newCaseDateType) {
    this.newCaseDateType = newCaseDateType;
    return this;
  }

   /**
   * Get newCaseDateType
   * @return newCaseDateType
  **/
  @Schema(description = "")
  public CriteriaDateType getNewCaseDateType() {
    return newCaseDateType;
  }

  public void setNewCaseDateType(CriteriaDateType newCaseDateType) {
    this.newCaseDateType = newCaseDateType;
  }

  public CaseCriteria dateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
    return this;
  }

   /**
   * Get dateFilterOption
   * @return dateFilterOption
  **/
  @Schema(description = "")
  public DateFilterOption getDateFilterOption() {
    return dateFilterOption;
  }

  public void setDateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
  }

  public CaseCriteria person(PersonReferenceDto person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @Schema(description = "")
  public PersonReferenceDto getPerson() {
    return person;
  }

  public void setPerson(PersonReferenceDto person) {
    this.person = person;
  }

  public CaseCriteria mustHaveNoGeoCoordinates(Boolean mustHaveNoGeoCoordinates) {
    this.mustHaveNoGeoCoordinates = mustHaveNoGeoCoordinates;
    return this;
  }

   /**
   * Get mustHaveNoGeoCoordinates
   * @return mustHaveNoGeoCoordinates
  **/
  @Schema(description = "")
  public Boolean isMustHaveNoGeoCoordinates() {
    return mustHaveNoGeoCoordinates;
  }

  public void setMustHaveNoGeoCoordinates(Boolean mustHaveNoGeoCoordinates) {
    this.mustHaveNoGeoCoordinates = mustHaveNoGeoCoordinates;
  }

  public CaseCriteria mustBePortHealthCaseWithoutFacility(Boolean mustBePortHealthCaseWithoutFacility) {
    this.mustBePortHealthCaseWithoutFacility = mustBePortHealthCaseWithoutFacility;
    return this;
  }

   /**
   * Get mustBePortHealthCaseWithoutFacility
   * @return mustBePortHealthCaseWithoutFacility
  **/
  @Schema(description = "")
  public Boolean isMustBePortHealthCaseWithoutFacility() {
    return mustBePortHealthCaseWithoutFacility;
  }

  public void setMustBePortHealthCaseWithoutFacility(Boolean mustBePortHealthCaseWithoutFacility) {
    this.mustBePortHealthCaseWithoutFacility = mustBePortHealthCaseWithoutFacility;
  }

  public CaseCriteria mustHaveCaseManagementData(Boolean mustHaveCaseManagementData) {
    this.mustHaveCaseManagementData = mustHaveCaseManagementData;
    return this;
  }

   /**
   * Get mustHaveCaseManagementData
   * @return mustHaveCaseManagementData
  **/
  @Schema(description = "")
  public Boolean isMustHaveCaseManagementData() {
    return mustHaveCaseManagementData;
  }

  public void setMustHaveCaseManagementData(Boolean mustHaveCaseManagementData) {
    this.mustHaveCaseManagementData = mustHaveCaseManagementData;
  }

  public CaseCriteria withoutResponsibleOfficer(Boolean withoutResponsibleOfficer) {
    this.withoutResponsibleOfficer = withoutResponsibleOfficer;
    return this;
  }

   /**
   * Get withoutResponsibleOfficer
   * @return withoutResponsibleOfficer
  **/
  @Schema(description = "")
  public Boolean isWithoutResponsibleOfficer() {
    return withoutResponsibleOfficer;
  }

  public void setWithoutResponsibleOfficer(Boolean withoutResponsibleOfficer) {
    this.withoutResponsibleOfficer = withoutResponsibleOfficer;
  }

  public CaseCriteria withExtendedQuarantine(Boolean withExtendedQuarantine) {
    this.withExtendedQuarantine = withExtendedQuarantine;
    return this;
  }

   /**
   * Get withExtendedQuarantine
   * @return withExtendedQuarantine
  **/
  @Schema(description = "")
  public Boolean isWithExtendedQuarantine() {
    return withExtendedQuarantine;
  }

  public void setWithExtendedQuarantine(Boolean withExtendedQuarantine) {
    this.withExtendedQuarantine = withExtendedQuarantine;
  }

  public CaseCriteria withReducedQuarantine(Boolean withReducedQuarantine) {
    this.withReducedQuarantine = withReducedQuarantine;
    return this;
  }

   /**
   * Get withReducedQuarantine
   * @return withReducedQuarantine
  **/
  @Schema(description = "")
  public Boolean isWithReducedQuarantine() {
    return withReducedQuarantine;
  }

  public void setWithReducedQuarantine(Boolean withReducedQuarantine) {
    this.withReducedQuarantine = withReducedQuarantine;
  }

  public CaseCriteria deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @Schema(description = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public CaseCriteria nameUuidEpidNumberLike(String nameUuidEpidNumberLike) {
    this.nameUuidEpidNumberLike = nameUuidEpidNumberLike;
    return this;
  }

   /**
   * Get nameUuidEpidNumberLike
   * @return nameUuidEpidNumberLike
  **/
  @Schema(description = "")
  public String getNameUuidEpidNumberLike() {
    return nameUuidEpidNumberLike;
  }

  public void setNameUuidEpidNumberLike(String nameUuidEpidNumberLike) {
    this.nameUuidEpidNumberLike = nameUuidEpidNumberLike;
  }

  public CaseCriteria eventLike(String eventLike) {
    this.eventLike = eventLike;
    return this;
  }

   /**
   * Get eventLike
   * @return eventLike
  **/
  @Schema(description = "")
  public String getEventLike() {
    return eventLike;
  }

  public void setEventLike(String eventLike) {
    this.eventLike = eventLike;
  }

  public CaseCriteria onlyCasesWithEvents(Boolean onlyCasesWithEvents) {
    this.onlyCasesWithEvents = onlyCasesWithEvents;
    return this;
  }

   /**
   * Get onlyCasesWithEvents
   * @return onlyCasesWithEvents
  **/
  @Schema(description = "")
  public Boolean isOnlyCasesWithEvents() {
    return onlyCasesWithEvents;
  }

  public void setOnlyCasesWithEvents(Boolean onlyCasesWithEvents) {
    this.onlyCasesWithEvents = onlyCasesWithEvents;
  }

  public CaseCriteria reportingUserLike(String reportingUserLike) {
    this.reportingUserLike = reportingUserLike;
    return this;
  }

   /**
   * Get reportingUserLike
   * @return reportingUserLike
  **/
  @Schema(description = "")
  public String getReportingUserLike() {
    return reportingUserLike;
  }

  public void setReportingUserLike(String reportingUserLike) {
    this.reportingUserLike = reportingUserLike;
  }

  public CaseCriteria caseOrigin(CaseOrigin caseOrigin) {
    this.caseOrigin = caseOrigin;
    return this;
  }

   /**
   * Get caseOrigin
   * @return caseOrigin
  **/
  @Schema(description = "")
  public CaseOrigin getCaseOrigin() {
    return caseOrigin;
  }

  public void setCaseOrigin(CaseOrigin caseOrigin) {
    this.caseOrigin = caseOrigin;
  }

  public CaseCriteria relevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
    return this;
  }

   /**
   * Get relevanceStatus
   * @return relevanceStatus
  **/
  @Schema(description = "")
  public EntityRelevanceStatus getRelevanceStatus() {
    return relevanceStatus;
  }

  public void setRelevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
  }

  public CaseCriteria sourceCaseInfoLike(String sourceCaseInfoLike) {
    this.sourceCaseInfoLike = sourceCaseInfoLike;
    return this;
  }

   /**
   * Get sourceCaseInfoLike
   * @return sourceCaseInfoLike
  **/
  @Schema(description = "")
  public String getSourceCaseInfoLike() {
    return sourceCaseInfoLike;
  }

  public void setSourceCaseInfoLike(String sourceCaseInfoLike) {
    this.sourceCaseInfoLike = sourceCaseInfoLike;
  }

  public CaseCriteria quarantineTo(Instant quarantineTo) {
    this.quarantineTo = quarantineTo;
    return this;
  }

   /**
   * Get quarantineTo
   * @return quarantineTo
  **/
  @Schema(description = "")
  public Instant getQuarantineTo() {
    return quarantineTo;
  }

  public void setQuarantineTo(Instant quarantineTo) {
    this.quarantineTo = quarantineTo;
  }

  public CaseCriteria birthdateYYYY(Integer birthdateYYYY) {
    this.birthdateYYYY = birthdateYYYY;
    return this;
  }

   /**
   * Get birthdateYYYY
   * @return birthdateYYYY
  **/
  @Schema(description = "")
  public Integer getBirthdateYYYY() {
    return birthdateYYYY;
  }

  public void setBirthdateYYYY(Integer birthdateYYYY) {
    this.birthdateYYYY = birthdateYYYY;
  }

  public CaseCriteria birthdateMM(Integer birthdateMM) {
    this.birthdateMM = birthdateMM;
    return this;
  }

   /**
   * Get birthdateMM
   * @return birthdateMM
  **/
  @Schema(description = "")
  public Integer getBirthdateMM() {
    return birthdateMM;
  }

  public void setBirthdateMM(Integer birthdateMM) {
    this.birthdateMM = birthdateMM;
  }

  public CaseCriteria birthdateDD(Integer birthdateDD) {
    this.birthdateDD = birthdateDD;
    return this;
  }

   /**
   * Get birthdateDD
   * @return birthdateDD
  **/
  @Schema(description = "")
  public Integer getBirthdateDD() {
    return birthdateDD;
  }

  public void setBirthdateDD(Integer birthdateDD) {
    this.birthdateDD = birthdateDD;
  }

  public CaseCriteria followUpStatus(FollowUpStatus followUpStatus) {
    this.followUpStatus = followUpStatus;
    return this;
  }

   /**
   * Get followUpStatus
   * @return followUpStatus
  **/
  @Schema(description = "")
  public FollowUpStatus getFollowUpStatus() {
    return followUpStatus;
  }

  public void setFollowUpStatus(FollowUpStatus followUpStatus) {
    this.followUpStatus = followUpStatus;
  }

  public CaseCriteria followUpUntilTo(Instant followUpUntilTo) {
    this.followUpUntilTo = followUpUntilTo;
    return this;
  }

   /**
   * Get followUpUntilTo
   * @return followUpUntilTo
  **/
  @Schema(description = "")
  public Instant getFollowUpUntilTo() {
    return followUpUntilTo;
  }

  public void setFollowUpUntilTo(Instant followUpUntilTo) {
    this.followUpUntilTo = followUpUntilTo;
  }

  public CaseCriteria followUpUntilFrom(Instant followUpUntilFrom) {
    this.followUpUntilFrom = followUpUntilFrom;
    return this;
  }

   /**
   * Get followUpUntilFrom
   * @return followUpUntilFrom
  **/
  @Schema(description = "")
  public Instant getFollowUpUntilFrom() {
    return followUpUntilFrom;
  }

  public void setFollowUpUntilFrom(Instant followUpUntilFrom) {
    this.followUpUntilFrom = followUpUntilFrom;
  }

  public CaseCriteria symptomJournalStatus(SymptomJournalStatus symptomJournalStatus) {
    this.symptomJournalStatus = symptomJournalStatus;
    return this;
  }

   /**
   * Get symptomJournalStatus
   * @return symptomJournalStatus
  **/
  @Schema(description = "")
  public SymptomJournalStatus getSymptomJournalStatus() {
    return symptomJournalStatus;
  }

  public void setSymptomJournalStatus(SymptomJournalStatus symptomJournalStatus) {
    this.symptomJournalStatus = symptomJournalStatus;
  }

  public CaseCriteria vaccination(Vaccination vaccination) {
    this.vaccination = vaccination;
    return this;
  }

   /**
   * Get vaccination
   * @return vaccination
  **/
  @Schema(description = "")
  public Vaccination getVaccination() {
    return vaccination;
  }

  public void setVaccination(Vaccination vaccination) {
    this.vaccination = vaccination;
  }

  public CaseCriteria reportDateTo(Instant reportDateTo) {
    this.reportDateTo = reportDateTo;
    return this;
  }

   /**
   * Get reportDateTo
   * @return reportDateTo
  **/
  @Schema(description = "")
  public Instant getReportDateTo() {
    return reportDateTo;
  }

  public void setReportDateTo(Instant reportDateTo) {
    this.reportDateTo = reportDateTo;
  }

  public CaseCriteria facilityTypeGroup(FacilityTypeGroup facilityTypeGroup) {
    this.facilityTypeGroup = facilityTypeGroup;
    return this;
  }

   /**
   * Get facilityTypeGroup
   * @return facilityTypeGroup
  **/
  @Schema(description = "")
  public FacilityTypeGroup getFacilityTypeGroup() {
    return facilityTypeGroup;
  }

  public void setFacilityTypeGroup(FacilityTypeGroup facilityTypeGroup) {
    this.facilityTypeGroup = facilityTypeGroup;
  }

  public CaseCriteria facilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
    return this;
  }

   /**
   * Get facilityType
   * @return facilityType
  **/
  @Schema(description = "")
  public FacilityType getFacilityType() {
    return facilityType;
  }

  public void setFacilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
  }

  public CaseCriteria includeCasesFromOtherJurisdictions(Boolean includeCasesFromOtherJurisdictions) {
    this.includeCasesFromOtherJurisdictions = includeCasesFromOtherJurisdictions;
    return this;
  }

   /**
   * Get includeCasesFromOtherJurisdictions
   * @return includeCasesFromOtherJurisdictions
  **/
  @Schema(description = "")
  public Boolean isIncludeCasesFromOtherJurisdictions() {
    return includeCasesFromOtherJurisdictions;
  }

  public void setIncludeCasesFromOtherJurisdictions(Boolean includeCasesFromOtherJurisdictions) {
    this.includeCasesFromOtherJurisdictions = includeCasesFromOtherJurisdictions;
  }

  public CaseCriteria onlyContactsFromOtherInstances(Boolean onlyContactsFromOtherInstances) {
    this.onlyContactsFromOtherInstances = onlyContactsFromOtherInstances;
    return this;
  }

   /**
   * Get onlyContactsFromOtherInstances
   * @return onlyContactsFromOtherInstances
  **/
  @Schema(description = "")
  public Boolean isOnlyContactsFromOtherInstances() {
    return onlyContactsFromOtherInstances;
  }

  public void setOnlyContactsFromOtherInstances(Boolean onlyContactsFromOtherInstances) {
    this.onlyContactsFromOtherInstances = onlyContactsFromOtherInstances;
  }

  public CaseCriteria onlyCasesWithReinfection(Boolean onlyCasesWithReinfection) {
    this.onlyCasesWithReinfection = onlyCasesWithReinfection;
    return this;
  }

   /**
   * Get onlyCasesWithReinfection
   * @return onlyCasesWithReinfection
  **/
  @Schema(description = "")
  public Boolean isOnlyCasesWithReinfection() {
    return onlyCasesWithReinfection;
  }

  public void setOnlyCasesWithReinfection(Boolean onlyCasesWithReinfection) {
    this.onlyCasesWithReinfection = onlyCasesWithReinfection;
  }

  public CaseCriteria onlyEntitiesNotSharedWithExternalSurvTool(Boolean onlyEntitiesNotSharedWithExternalSurvTool) {
    this.onlyEntitiesNotSharedWithExternalSurvTool = onlyEntitiesNotSharedWithExternalSurvTool;
    return this;
  }

   /**
   * Get onlyEntitiesNotSharedWithExternalSurvTool
   * @return onlyEntitiesNotSharedWithExternalSurvTool
  **/
  @Schema(description = "")
  public Boolean isOnlyEntitiesNotSharedWithExternalSurvTool() {
    return onlyEntitiesNotSharedWithExternalSurvTool;
  }

  public void setOnlyEntitiesNotSharedWithExternalSurvTool(Boolean onlyEntitiesNotSharedWithExternalSurvTool) {
    this.onlyEntitiesNotSharedWithExternalSurvTool = onlyEntitiesNotSharedWithExternalSurvTool;
  }

  public CaseCriteria onlyEntitiesSharedWithExternalSurvTool(Boolean onlyEntitiesSharedWithExternalSurvTool) {
    this.onlyEntitiesSharedWithExternalSurvTool = onlyEntitiesSharedWithExternalSurvTool;
    return this;
  }

   /**
   * Get onlyEntitiesSharedWithExternalSurvTool
   * @return onlyEntitiesSharedWithExternalSurvTool
  **/
  @Schema(description = "")
  public Boolean isOnlyEntitiesSharedWithExternalSurvTool() {
    return onlyEntitiesSharedWithExternalSurvTool;
  }

  public void setOnlyEntitiesSharedWithExternalSurvTool(Boolean onlyEntitiesSharedWithExternalSurvTool) {
    this.onlyEntitiesSharedWithExternalSurvTool = onlyEntitiesSharedWithExternalSurvTool;
  }

  public CaseCriteria onlyEntitiesChangedSinceLastSharedWithExternalSurvTool(Boolean onlyEntitiesChangedSinceLastSharedWithExternalSurvTool) {
    this.onlyEntitiesChangedSinceLastSharedWithExternalSurvTool = onlyEntitiesChangedSinceLastSharedWithExternalSurvTool;
    return this;
  }

   /**
   * Get onlyEntitiesChangedSinceLastSharedWithExternalSurvTool
   * @return onlyEntitiesChangedSinceLastSharedWithExternalSurvTool
  **/
  @Schema(description = "")
  public Boolean isOnlyEntitiesChangedSinceLastSharedWithExternalSurvTool() {
    return onlyEntitiesChangedSinceLastSharedWithExternalSurvTool;
  }

  public void setOnlyEntitiesChangedSinceLastSharedWithExternalSurvTool(Boolean onlyEntitiesChangedSinceLastSharedWithExternalSurvTool) {
    this.onlyEntitiesChangedSinceLastSharedWithExternalSurvTool = onlyEntitiesChangedSinceLastSharedWithExternalSurvTool;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseCriteria caseCriteria = (CaseCriteria) o;
    return Objects.equals(this.reportingUserRole, caseCriteria.reportingUserRole) &&
        Objects.equals(this.disease, caseCriteria.disease) &&
        Objects.equals(this.diseaseVariant, caseCriteria.diseaseVariant) &&
        Objects.equals(this.outcome, caseCriteria.outcome) &&
        Objects.equals(this.caseClassification, caseCriteria.caseClassification) &&
        Objects.equals(this.investigationStatus, caseCriteria.investigationStatus) &&
        Objects.equals(this.presentCondition, caseCriteria.presentCondition) &&
        Objects.equals(this.region, caseCriteria.region) &&
        Objects.equals(this.district, caseCriteria.district) &&
        Objects.equals(this.community, caseCriteria.community) &&
        Objects.equals(this.healthFacility, caseCriteria.healthFacility) &&
        Objects.equals(this.pointOfEntry, caseCriteria.pointOfEntry) &&
        Objects.equals(this.surveillanceOfficer, caseCriteria.surveillanceOfficer) &&
        Objects.equals(this.newCaseDateFrom, caseCriteria.newCaseDateFrom) &&
        Objects.equals(this.newCaseDateTo, caseCriteria.newCaseDateTo) &&
        Objects.equals(this.creationDateFrom, caseCriteria.creationDateFrom) &&
        Objects.equals(this.creationDateTo, caseCriteria.creationDateTo) &&
        Objects.equals(this.newCaseDateType, caseCriteria.newCaseDateType) &&
        Objects.equals(this.dateFilterOption, caseCriteria.dateFilterOption) &&
        Objects.equals(this.person, caseCriteria.person) &&
        Objects.equals(this.mustHaveNoGeoCoordinates, caseCriteria.mustHaveNoGeoCoordinates) &&
        Objects.equals(this.mustBePortHealthCaseWithoutFacility, caseCriteria.mustBePortHealthCaseWithoutFacility) &&
        Objects.equals(this.mustHaveCaseManagementData, caseCriteria.mustHaveCaseManagementData) &&
        Objects.equals(this.withoutResponsibleOfficer, caseCriteria.withoutResponsibleOfficer) &&
        Objects.equals(this.withExtendedQuarantine, caseCriteria.withExtendedQuarantine) &&
        Objects.equals(this.withReducedQuarantine, caseCriteria.withReducedQuarantine) &&
        Objects.equals(this.deleted, caseCriteria.deleted) &&
        Objects.equals(this.nameUuidEpidNumberLike, caseCriteria.nameUuidEpidNumberLike) &&
        Objects.equals(this.eventLike, caseCriteria.eventLike) &&
        Objects.equals(this.onlyCasesWithEvents, caseCriteria.onlyCasesWithEvents) &&
        Objects.equals(this.reportingUserLike, caseCriteria.reportingUserLike) &&
        Objects.equals(this.caseOrigin, caseCriteria.caseOrigin) &&
        Objects.equals(this.relevanceStatus, caseCriteria.relevanceStatus) &&
        Objects.equals(this.sourceCaseInfoLike, caseCriteria.sourceCaseInfoLike) &&
        Objects.equals(this.quarantineTo, caseCriteria.quarantineTo) &&
        Objects.equals(this.birthdateYYYY, caseCriteria.birthdateYYYY) &&
        Objects.equals(this.birthdateMM, caseCriteria.birthdateMM) &&
        Objects.equals(this.birthdateDD, caseCriteria.birthdateDD) &&
        Objects.equals(this.followUpStatus, caseCriteria.followUpStatus) &&
        Objects.equals(this.followUpUntilTo, caseCriteria.followUpUntilTo) &&
        Objects.equals(this.followUpUntilFrom, caseCriteria.followUpUntilFrom) &&
        Objects.equals(this.symptomJournalStatus, caseCriteria.symptomJournalStatus) &&
        Objects.equals(this.vaccination, caseCriteria.vaccination) &&
        Objects.equals(this.reportDateTo, caseCriteria.reportDateTo) &&
        Objects.equals(this.facilityTypeGroup, caseCriteria.facilityTypeGroup) &&
        Objects.equals(this.facilityType, caseCriteria.facilityType) &&
        Objects.equals(this.includeCasesFromOtherJurisdictions, caseCriteria.includeCasesFromOtherJurisdictions) &&
        Objects.equals(this.onlyContactsFromOtherInstances, caseCriteria.onlyContactsFromOtherInstances) &&
        Objects.equals(this.onlyCasesWithReinfection, caseCriteria.onlyCasesWithReinfection) &&
        Objects.equals(this.onlyEntitiesNotSharedWithExternalSurvTool, caseCriteria.onlyEntitiesNotSharedWithExternalSurvTool) &&
        Objects.equals(this.onlyEntitiesSharedWithExternalSurvTool, caseCriteria.onlyEntitiesSharedWithExternalSurvTool) &&
        Objects.equals(this.onlyEntitiesChangedSinceLastSharedWithExternalSurvTool, caseCriteria.onlyEntitiesChangedSinceLastSharedWithExternalSurvTool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportingUserRole, disease, diseaseVariant, outcome, caseClassification, investigationStatus, presentCondition, region, district, community, healthFacility, pointOfEntry, surveillanceOfficer, newCaseDateFrom, newCaseDateTo, creationDateFrom, creationDateTo, newCaseDateType, dateFilterOption, person, mustHaveNoGeoCoordinates, mustBePortHealthCaseWithoutFacility, mustHaveCaseManagementData, withoutResponsibleOfficer, withExtendedQuarantine, withReducedQuarantine, deleted, nameUuidEpidNumberLike, eventLike, onlyCasesWithEvents, reportingUserLike, caseOrigin, relevanceStatus, sourceCaseInfoLike, quarantineTo, birthdateYYYY, birthdateMM, birthdateDD, followUpStatus, followUpUntilTo, followUpUntilFrom, symptomJournalStatus, vaccination, reportDateTo, facilityTypeGroup, facilityType, includeCasesFromOtherJurisdictions, onlyContactsFromOtherInstances, onlyCasesWithReinfection, onlyEntitiesNotSharedWithExternalSurvTool, onlyEntitiesSharedWithExternalSurvTool, onlyEntitiesChangedSinceLastSharedWithExternalSurvTool);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseCriteria {\n");
    
    sb.append("    reportingUserRole: ").append(toIndentedString(reportingUserRole)).append("\n");
    sb.append("    disease: ").append(toIndentedString(disease)).append("\n");
    sb.append("    diseaseVariant: ").append(toIndentedString(diseaseVariant)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    caseClassification: ").append(toIndentedString(caseClassification)).append("\n");
    sb.append("    investigationStatus: ").append(toIndentedString(investigationStatus)).append("\n");
    sb.append("    presentCondition: ").append(toIndentedString(presentCondition)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    healthFacility: ").append(toIndentedString(healthFacility)).append("\n");
    sb.append("    pointOfEntry: ").append(toIndentedString(pointOfEntry)).append("\n");
    sb.append("    surveillanceOfficer: ").append(toIndentedString(surveillanceOfficer)).append("\n");
    sb.append("    newCaseDateFrom: ").append(toIndentedString(newCaseDateFrom)).append("\n");
    sb.append("    newCaseDateTo: ").append(toIndentedString(newCaseDateTo)).append("\n");
    sb.append("    creationDateFrom: ").append(toIndentedString(creationDateFrom)).append("\n");
    sb.append("    creationDateTo: ").append(toIndentedString(creationDateTo)).append("\n");
    sb.append("    newCaseDateType: ").append(toIndentedString(newCaseDateType)).append("\n");
    sb.append("    dateFilterOption: ").append(toIndentedString(dateFilterOption)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    mustHaveNoGeoCoordinates: ").append(toIndentedString(mustHaveNoGeoCoordinates)).append("\n");
    sb.append("    mustBePortHealthCaseWithoutFacility: ").append(toIndentedString(mustBePortHealthCaseWithoutFacility)).append("\n");
    sb.append("    mustHaveCaseManagementData: ").append(toIndentedString(mustHaveCaseManagementData)).append("\n");
    sb.append("    withoutResponsibleOfficer: ").append(toIndentedString(withoutResponsibleOfficer)).append("\n");
    sb.append("    withExtendedQuarantine: ").append(toIndentedString(withExtendedQuarantine)).append("\n");
    sb.append("    withReducedQuarantine: ").append(toIndentedString(withReducedQuarantine)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    nameUuidEpidNumberLike: ").append(toIndentedString(nameUuidEpidNumberLike)).append("\n");
    sb.append("    eventLike: ").append(toIndentedString(eventLike)).append("\n");
    sb.append("    onlyCasesWithEvents: ").append(toIndentedString(onlyCasesWithEvents)).append("\n");
    sb.append("    reportingUserLike: ").append(toIndentedString(reportingUserLike)).append("\n");
    sb.append("    caseOrigin: ").append(toIndentedString(caseOrigin)).append("\n");
    sb.append("    relevanceStatus: ").append(toIndentedString(relevanceStatus)).append("\n");
    sb.append("    sourceCaseInfoLike: ").append(toIndentedString(sourceCaseInfoLike)).append("\n");
    sb.append("    quarantineTo: ").append(toIndentedString(quarantineTo)).append("\n");
    sb.append("    birthdateYYYY: ").append(toIndentedString(birthdateYYYY)).append("\n");
    sb.append("    birthdateMM: ").append(toIndentedString(birthdateMM)).append("\n");
    sb.append("    birthdateDD: ").append(toIndentedString(birthdateDD)).append("\n");
    sb.append("    followUpStatus: ").append(toIndentedString(followUpStatus)).append("\n");
    sb.append("    followUpUntilTo: ").append(toIndentedString(followUpUntilTo)).append("\n");
    sb.append("    followUpUntilFrom: ").append(toIndentedString(followUpUntilFrom)).append("\n");
    sb.append("    symptomJournalStatus: ").append(toIndentedString(symptomJournalStatus)).append("\n");
    sb.append("    vaccination: ").append(toIndentedString(vaccination)).append("\n");
    sb.append("    reportDateTo: ").append(toIndentedString(reportDateTo)).append("\n");
    sb.append("    facilityTypeGroup: ").append(toIndentedString(facilityTypeGroup)).append("\n");
    sb.append("    facilityType: ").append(toIndentedString(facilityType)).append("\n");
    sb.append("    includeCasesFromOtherJurisdictions: ").append(toIndentedString(includeCasesFromOtherJurisdictions)).append("\n");
    sb.append("    onlyContactsFromOtherInstances: ").append(toIndentedString(onlyContactsFromOtherInstances)).append("\n");
    sb.append("    onlyCasesWithReinfection: ").append(toIndentedString(onlyCasesWithReinfection)).append("\n");
    sb.append("    onlyEntitiesNotSharedWithExternalSurvTool: ").append(toIndentedString(onlyEntitiesNotSharedWithExternalSurvTool)).append("\n");
    sb.append("    onlyEntitiesSharedWithExternalSurvTool: ").append(toIndentedString(onlyEntitiesSharedWithExternalSurvTool)).append("\n");
    sb.append("    onlyEntitiesChangedSinceLastSharedWithExternalSurvTool: ").append(toIndentedString(onlyEntitiesChangedSinceLastSharedWithExternalSurvTool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
