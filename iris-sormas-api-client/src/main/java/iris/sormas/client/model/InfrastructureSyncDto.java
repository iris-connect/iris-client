/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.AreaDto;
import iris.sormas.client.model.CampaignDto;
import iris.sormas.client.model.CampaignFormMetaDto;
import iris.sormas.client.model.CommunityDto;
import iris.sormas.client.model.ContinentDto;
import iris.sormas.client.model.CountryDto;
import iris.sormas.client.model.DiseaseClassificationCriteriaDto;
import iris.sormas.client.model.DiseaseConfigurationDto;
import iris.sormas.client.model.DistrictDto;
import iris.sormas.client.model.FacilityDto;
import iris.sormas.client.model.FeatureConfigurationDto;
import iris.sormas.client.model.PointOfEntryDto;
import iris.sormas.client.model.RegionDto;
import iris.sormas.client.model.SubcontinentDto;
import iris.sormas.client.model.UserDto;
import iris.sormas.client.model.UserRoleConfigDto;
import java.util.ArrayList;
import java.util.List;
/**
 * InfrastructureSyncDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class InfrastructureSyncDto {
  @JsonProperty("initialSyncRequired")
  private Boolean initialSyncRequired = null;

  @JsonProperty("continents")
  private List<ContinentDto> continents = null;

  @JsonProperty("subcontinents")
  private List<SubcontinentDto> subcontinents = null;

  @JsonProperty("countries")
  private List<CountryDto> countries = null;

  @JsonProperty("areas")
  private List<AreaDto> areas = null;

  @JsonProperty("regions")
  private List<RegionDto> regions = null;

  @JsonProperty("districts")
  private List<DistrictDto> districts = null;

  @JsonProperty("communities")
  private List<CommunityDto> communities = null;

  @JsonProperty("facilities")
  private List<FacilityDto> facilities = null;

  @JsonProperty("pointsOfEntry")
  private List<PointOfEntryDto> pointsOfEntry = null;

  @JsonProperty("users")
  private List<UserDto> users = null;

  @JsonProperty("diseaseClassifications")
  private List<DiseaseClassificationCriteriaDto> diseaseClassifications = null;

  @JsonProperty("diseaseConfigurations")
  private List<DiseaseConfigurationDto> diseaseConfigurations = null;

  @JsonProperty("userRoleConfigurations")
  private List<UserRoleConfigDto> userRoleConfigurations = null;

  @JsonProperty("deletedUserRoleConfigurationUuids")
  private List<String> deletedUserRoleConfigurationUuids = null;

  @JsonProperty("featureConfigurations")
  private List<FeatureConfigurationDto> featureConfigurations = null;

  @JsonProperty("deletedFeatureConfigurationUuids")
  private List<String> deletedFeatureConfigurationUuids = null;

  @JsonProperty("campaigns")
  private List<CampaignDto> campaigns = null;

  @JsonProperty("campaignFormMetas")
  private List<CampaignFormMetaDto> campaignFormMetas = null;

  public InfrastructureSyncDto initialSyncRequired(Boolean initialSyncRequired) {
    this.initialSyncRequired = initialSyncRequired;
    return this;
  }

   /**
   * Get initialSyncRequired
   * @return initialSyncRequired
  **/
  @Schema(description = "")
  public Boolean isInitialSyncRequired() {
    return initialSyncRequired;
  }

  public void setInitialSyncRequired(Boolean initialSyncRequired) {
    this.initialSyncRequired = initialSyncRequired;
  }

  public InfrastructureSyncDto continents(List<ContinentDto> continents) {
    this.continents = continents;
    return this;
  }

  public InfrastructureSyncDto addContinentsItem(ContinentDto continentsItem) {
    if (this.continents == null) {
      this.continents = new ArrayList<>();
    }
    this.continents.add(continentsItem);
    return this;
  }

   /**
   * Get continents
   * @return continents
  **/
  @Schema(description = "")
  public List<ContinentDto> getContinents() {
    return continents;
  }

  public void setContinents(List<ContinentDto> continents) {
    this.continents = continents;
  }

  public InfrastructureSyncDto subcontinents(List<SubcontinentDto> subcontinents) {
    this.subcontinents = subcontinents;
    return this;
  }

  public InfrastructureSyncDto addSubcontinentsItem(SubcontinentDto subcontinentsItem) {
    if (this.subcontinents == null) {
      this.subcontinents = new ArrayList<>();
    }
    this.subcontinents.add(subcontinentsItem);
    return this;
  }

   /**
   * Get subcontinents
   * @return subcontinents
  **/
  @Schema(description = "")
  public List<SubcontinentDto> getSubcontinents() {
    return subcontinents;
  }

  public void setSubcontinents(List<SubcontinentDto> subcontinents) {
    this.subcontinents = subcontinents;
  }

  public InfrastructureSyncDto countries(List<CountryDto> countries) {
    this.countries = countries;
    return this;
  }

  public InfrastructureSyncDto addCountriesItem(CountryDto countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * Get countries
   * @return countries
  **/
  @Schema(description = "")
  public List<CountryDto> getCountries() {
    return countries;
  }

  public void setCountries(List<CountryDto> countries) {
    this.countries = countries;
  }

  public InfrastructureSyncDto areas(List<AreaDto> areas) {
    this.areas = areas;
    return this;
  }

  public InfrastructureSyncDto addAreasItem(AreaDto areasItem) {
    if (this.areas == null) {
      this.areas = new ArrayList<>();
    }
    this.areas.add(areasItem);
    return this;
  }

   /**
   * Get areas
   * @return areas
  **/
  @Schema(description = "")
  public List<AreaDto> getAreas() {
    return areas;
  }

  public void setAreas(List<AreaDto> areas) {
    this.areas = areas;
  }

  public InfrastructureSyncDto regions(List<RegionDto> regions) {
    this.regions = regions;
    return this;
  }

  public InfrastructureSyncDto addRegionsItem(RegionDto regionsItem) {
    if (this.regions == null) {
      this.regions = new ArrayList<>();
    }
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @Schema(description = "")
  public List<RegionDto> getRegions() {
    return regions;
  }

  public void setRegions(List<RegionDto> regions) {
    this.regions = regions;
  }

  public InfrastructureSyncDto districts(List<DistrictDto> districts) {
    this.districts = districts;
    return this;
  }

  public InfrastructureSyncDto addDistrictsItem(DistrictDto districtsItem) {
    if (this.districts == null) {
      this.districts = new ArrayList<>();
    }
    this.districts.add(districtsItem);
    return this;
  }

   /**
   * Get districts
   * @return districts
  **/
  @Schema(description = "")
  public List<DistrictDto> getDistricts() {
    return districts;
  }

  public void setDistricts(List<DistrictDto> districts) {
    this.districts = districts;
  }

  public InfrastructureSyncDto communities(List<CommunityDto> communities) {
    this.communities = communities;
    return this;
  }

  public InfrastructureSyncDto addCommunitiesItem(CommunityDto communitiesItem) {
    if (this.communities == null) {
      this.communities = new ArrayList<>();
    }
    this.communities.add(communitiesItem);
    return this;
  }

   /**
   * Get communities
   * @return communities
  **/
  @Schema(description = "")
  public List<CommunityDto> getCommunities() {
    return communities;
  }

  public void setCommunities(List<CommunityDto> communities) {
    this.communities = communities;
  }

  public InfrastructureSyncDto facilities(List<FacilityDto> facilities) {
    this.facilities = facilities;
    return this;
  }

  public InfrastructureSyncDto addFacilitiesItem(FacilityDto facilitiesItem) {
    if (this.facilities == null) {
      this.facilities = new ArrayList<>();
    }
    this.facilities.add(facilitiesItem);
    return this;
  }

   /**
   * Get facilities
   * @return facilities
  **/
  @Schema(description = "")
  public List<FacilityDto> getFacilities() {
    return facilities;
  }

  public void setFacilities(List<FacilityDto> facilities) {
    this.facilities = facilities;
  }

  public InfrastructureSyncDto pointsOfEntry(List<PointOfEntryDto> pointsOfEntry) {
    this.pointsOfEntry = pointsOfEntry;
    return this;
  }

  public InfrastructureSyncDto addPointsOfEntryItem(PointOfEntryDto pointsOfEntryItem) {
    if (this.pointsOfEntry == null) {
      this.pointsOfEntry = new ArrayList<>();
    }
    this.pointsOfEntry.add(pointsOfEntryItem);
    return this;
  }

   /**
   * Get pointsOfEntry
   * @return pointsOfEntry
  **/
  @Schema(description = "")
  public List<PointOfEntryDto> getPointsOfEntry() {
    return pointsOfEntry;
  }

  public void setPointsOfEntry(List<PointOfEntryDto> pointsOfEntry) {
    this.pointsOfEntry = pointsOfEntry;
  }

  public InfrastructureSyncDto users(List<UserDto> users) {
    this.users = users;
    return this;
  }

  public InfrastructureSyncDto addUsersItem(UserDto usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<UserDto> getUsers() {
    return users;
  }

  public void setUsers(List<UserDto> users) {
    this.users = users;
  }

  public InfrastructureSyncDto diseaseClassifications(List<DiseaseClassificationCriteriaDto> diseaseClassifications) {
    this.diseaseClassifications = diseaseClassifications;
    return this;
  }

  public InfrastructureSyncDto addDiseaseClassificationsItem(DiseaseClassificationCriteriaDto diseaseClassificationsItem) {
    if (this.diseaseClassifications == null) {
      this.diseaseClassifications = new ArrayList<>();
    }
    this.diseaseClassifications.add(diseaseClassificationsItem);
    return this;
  }

   /**
   * Get diseaseClassifications
   * @return diseaseClassifications
  **/
  @Schema(description = "")
  public List<DiseaseClassificationCriteriaDto> getDiseaseClassifications() {
    return diseaseClassifications;
  }

  public void setDiseaseClassifications(List<DiseaseClassificationCriteriaDto> diseaseClassifications) {
    this.diseaseClassifications = diseaseClassifications;
  }

  public InfrastructureSyncDto diseaseConfigurations(List<DiseaseConfigurationDto> diseaseConfigurations) {
    this.diseaseConfigurations = diseaseConfigurations;
    return this;
  }

  public InfrastructureSyncDto addDiseaseConfigurationsItem(DiseaseConfigurationDto diseaseConfigurationsItem) {
    if (this.diseaseConfigurations == null) {
      this.diseaseConfigurations = new ArrayList<>();
    }
    this.diseaseConfigurations.add(diseaseConfigurationsItem);
    return this;
  }

   /**
   * Get diseaseConfigurations
   * @return diseaseConfigurations
  **/
  @Schema(description = "")
  public List<DiseaseConfigurationDto> getDiseaseConfigurations() {
    return diseaseConfigurations;
  }

  public void setDiseaseConfigurations(List<DiseaseConfigurationDto> diseaseConfigurations) {
    this.diseaseConfigurations = diseaseConfigurations;
  }

  public InfrastructureSyncDto userRoleConfigurations(List<UserRoleConfigDto> userRoleConfigurations) {
    this.userRoleConfigurations = userRoleConfigurations;
    return this;
  }

  public InfrastructureSyncDto addUserRoleConfigurationsItem(UserRoleConfigDto userRoleConfigurationsItem) {
    if (this.userRoleConfigurations == null) {
      this.userRoleConfigurations = new ArrayList<>();
    }
    this.userRoleConfigurations.add(userRoleConfigurationsItem);
    return this;
  }

   /**
   * Get userRoleConfigurations
   * @return userRoleConfigurations
  **/
  @Schema(description = "")
  public List<UserRoleConfigDto> getUserRoleConfigurations() {
    return userRoleConfigurations;
  }

  public void setUserRoleConfigurations(List<UserRoleConfigDto> userRoleConfigurations) {
    this.userRoleConfigurations = userRoleConfigurations;
  }

  public InfrastructureSyncDto deletedUserRoleConfigurationUuids(List<String> deletedUserRoleConfigurationUuids) {
    this.deletedUserRoleConfigurationUuids = deletedUserRoleConfigurationUuids;
    return this;
  }

  public InfrastructureSyncDto addDeletedUserRoleConfigurationUuidsItem(String deletedUserRoleConfigurationUuidsItem) {
    if (this.deletedUserRoleConfigurationUuids == null) {
      this.deletedUserRoleConfigurationUuids = new ArrayList<>();
    }
    this.deletedUserRoleConfigurationUuids.add(deletedUserRoleConfigurationUuidsItem);
    return this;
  }

   /**
   * Get deletedUserRoleConfigurationUuids
   * @return deletedUserRoleConfigurationUuids
  **/
  @Schema(description = "")
  public List<String> getDeletedUserRoleConfigurationUuids() {
    return deletedUserRoleConfigurationUuids;
  }

  public void setDeletedUserRoleConfigurationUuids(List<String> deletedUserRoleConfigurationUuids) {
    this.deletedUserRoleConfigurationUuids = deletedUserRoleConfigurationUuids;
  }

  public InfrastructureSyncDto featureConfigurations(List<FeatureConfigurationDto> featureConfigurations) {
    this.featureConfigurations = featureConfigurations;
    return this;
  }

  public InfrastructureSyncDto addFeatureConfigurationsItem(FeatureConfigurationDto featureConfigurationsItem) {
    if (this.featureConfigurations == null) {
      this.featureConfigurations = new ArrayList<>();
    }
    this.featureConfigurations.add(featureConfigurationsItem);
    return this;
  }

   /**
   * Get featureConfigurations
   * @return featureConfigurations
  **/
  @Schema(description = "")
  public List<FeatureConfigurationDto> getFeatureConfigurations() {
    return featureConfigurations;
  }

  public void setFeatureConfigurations(List<FeatureConfigurationDto> featureConfigurations) {
    this.featureConfigurations = featureConfigurations;
  }

  public InfrastructureSyncDto deletedFeatureConfigurationUuids(List<String> deletedFeatureConfigurationUuids) {
    this.deletedFeatureConfigurationUuids = deletedFeatureConfigurationUuids;
    return this;
  }

  public InfrastructureSyncDto addDeletedFeatureConfigurationUuidsItem(String deletedFeatureConfigurationUuidsItem) {
    if (this.deletedFeatureConfigurationUuids == null) {
      this.deletedFeatureConfigurationUuids = new ArrayList<>();
    }
    this.deletedFeatureConfigurationUuids.add(deletedFeatureConfigurationUuidsItem);
    return this;
  }

   /**
   * Get deletedFeatureConfigurationUuids
   * @return deletedFeatureConfigurationUuids
  **/
  @Schema(description = "")
  public List<String> getDeletedFeatureConfigurationUuids() {
    return deletedFeatureConfigurationUuids;
  }

  public void setDeletedFeatureConfigurationUuids(List<String> deletedFeatureConfigurationUuids) {
    this.deletedFeatureConfigurationUuids = deletedFeatureConfigurationUuids;
  }

  public InfrastructureSyncDto campaigns(List<CampaignDto> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public InfrastructureSyncDto addCampaignsItem(CampaignDto campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

   /**
   * Get campaigns
   * @return campaigns
  **/
  @Schema(description = "")
  public List<CampaignDto> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<CampaignDto> campaigns) {
    this.campaigns = campaigns;
  }

  public InfrastructureSyncDto campaignFormMetas(List<CampaignFormMetaDto> campaignFormMetas) {
    this.campaignFormMetas = campaignFormMetas;
    return this;
  }

  public InfrastructureSyncDto addCampaignFormMetasItem(CampaignFormMetaDto campaignFormMetasItem) {
    if (this.campaignFormMetas == null) {
      this.campaignFormMetas = new ArrayList<>();
    }
    this.campaignFormMetas.add(campaignFormMetasItem);
    return this;
  }

   /**
   * Get campaignFormMetas
   * @return campaignFormMetas
  **/
  @Schema(description = "")
  public List<CampaignFormMetaDto> getCampaignFormMetas() {
    return campaignFormMetas;
  }

  public void setCampaignFormMetas(List<CampaignFormMetaDto> campaignFormMetas) {
    this.campaignFormMetas = campaignFormMetas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfrastructureSyncDto infrastructureSyncDto = (InfrastructureSyncDto) o;
    return Objects.equals(this.initialSyncRequired, infrastructureSyncDto.initialSyncRequired) &&
        Objects.equals(this.continents, infrastructureSyncDto.continents) &&
        Objects.equals(this.subcontinents, infrastructureSyncDto.subcontinents) &&
        Objects.equals(this.countries, infrastructureSyncDto.countries) &&
        Objects.equals(this.areas, infrastructureSyncDto.areas) &&
        Objects.equals(this.regions, infrastructureSyncDto.regions) &&
        Objects.equals(this.districts, infrastructureSyncDto.districts) &&
        Objects.equals(this.communities, infrastructureSyncDto.communities) &&
        Objects.equals(this.facilities, infrastructureSyncDto.facilities) &&
        Objects.equals(this.pointsOfEntry, infrastructureSyncDto.pointsOfEntry) &&
        Objects.equals(this.users, infrastructureSyncDto.users) &&
        Objects.equals(this.diseaseClassifications, infrastructureSyncDto.diseaseClassifications) &&
        Objects.equals(this.diseaseConfigurations, infrastructureSyncDto.diseaseConfigurations) &&
        Objects.equals(this.userRoleConfigurations, infrastructureSyncDto.userRoleConfigurations) &&
        Objects.equals(this.deletedUserRoleConfigurationUuids, infrastructureSyncDto.deletedUserRoleConfigurationUuids) &&
        Objects.equals(this.featureConfigurations, infrastructureSyncDto.featureConfigurations) &&
        Objects.equals(this.deletedFeatureConfigurationUuids, infrastructureSyncDto.deletedFeatureConfigurationUuids) &&
        Objects.equals(this.campaigns, infrastructureSyncDto.campaigns) &&
        Objects.equals(this.campaignFormMetas, infrastructureSyncDto.campaignFormMetas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialSyncRequired, continents, subcontinents, countries, areas, regions, districts, communities, facilities, pointsOfEntry, users, diseaseClassifications, diseaseConfigurations, userRoleConfigurations, deletedUserRoleConfigurationUuids, featureConfigurations, deletedFeatureConfigurationUuids, campaigns, campaignFormMetas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfrastructureSyncDto {\n");
    
    sb.append("    initialSyncRequired: ").append(toIndentedString(initialSyncRequired)).append("\n");
    sb.append("    continents: ").append(toIndentedString(continents)).append("\n");
    sb.append("    subcontinents: ").append(toIndentedString(subcontinents)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    areas: ").append(toIndentedString(areas)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    districts: ").append(toIndentedString(districts)).append("\n");
    sb.append("    communities: ").append(toIndentedString(communities)).append("\n");
    sb.append("    facilities: ").append(toIndentedString(facilities)).append("\n");
    sb.append("    pointsOfEntry: ").append(toIndentedString(pointsOfEntry)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    diseaseClassifications: ").append(toIndentedString(diseaseClassifications)).append("\n");
    sb.append("    diseaseConfigurations: ").append(toIndentedString(diseaseConfigurations)).append("\n");
    sb.append("    userRoleConfigurations: ").append(toIndentedString(userRoleConfigurations)).append("\n");
    sb.append("    deletedUserRoleConfigurationUuids: ").append(toIndentedString(deletedUserRoleConfigurationUuids)).append("\n");
    sb.append("    featureConfigurations: ").append(toIndentedString(featureConfigurations)).append("\n");
    sb.append("    deletedFeatureConfigurationUuids: ").append(toIndentedString(deletedFeatureConfigurationUuids)).append("\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    campaignFormMetas: ").append(toIndentedString(campaignFormMetas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
