/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets FeatureType
 */
public enum FeatureType {
  AGGREGATE_REPORTING("AGGREGATE_REPORTING"),
  CAMPAIGNS("CAMPAIGNS"),
  CASE_SURVEILANCE("CASE_SURVEILANCE"),
  CLINICAL_MANAGEMENT("CLINICAL_MANAGEMENT"),
  CONTACT_TRACING("CONTACT_TRACING"),
  EVENT_SURVEILLANCE("EVENT_SURVEILLANCE"),
  SAMPLES_LAB("SAMPLES_LAB"),
  TASK_MANAGEMENT("TASK_MANAGEMENT"),
  WEEKLY_REPORTING("WEEKLY_REPORTING"),
  ASSIGN_TASKS_TO_HIGHER_LEVEL("ASSIGN_TASKS_TO_HIGHER_LEVEL"),
  CASE_FOLLOWUP("CASE_FOLLOWUP"),
  DOCUMENTS("DOCUMENTS"),
  DOCUMENTS_MULTI_UPLOAD("DOCUMENTS_MULTI_UPLOAD"),
  EVENT_GROUPS("EVENT_GROUPS"),
  EVENT_HIERARCHIES("EVENT_HIERARCHIES"),
  LAB_MESSAGES("LAB_MESSAGES"),
  MANUAL_EXTERNAL_MESSAGES("MANUAL_EXTERNAL_MESSAGES"),
  NATIONAL_CASE_SHARING("NATIONAL_CASE_SHARING"),
  SURVEILLANCE_REPORTS("SURVEILLANCE_REPORTS"),
  VIEW_TAB_CASES_HOSPITALIZATION("VIEW_TAB_CASES_HOSPITALIZATION"),
  VIEW_TAB_CASES_SYMPTOMS("VIEW_TAB_CASES_SYMPTOMS"),
  VIEW_TAB_CASES_EPIDEMIOLOGICAL_DATA("VIEW_TAB_CASES_EPIDEMIOLOGICAL_DATA"),
  VIEW_TAB_CASES_THERAPY("VIEW_TAB_CASES_THERAPY"),
  VIEW_TAB_CASES_FOLLOW_UP("VIEW_TAB_CASES_FOLLOW_UP"),
  VIEW_TAB_CASES_CLINICAL_COURSE("VIEW_TAB_CASES_CLINICAL_COURSE"),
  VIEW_TAB_CONTACTS_EPIDEMIOLOGICAL_DATA("VIEW_TAB_CONTACTS_EPIDEMIOLOGICAL_DATA"),
  VIEW_TAB_CONTACTS_FOLLOW_UP_VISITS("VIEW_TAB_CONTACTS_FOLLOW_UP_VISITS"),
  GDPR_CONSENT_POPUP("GDPR_CONSENT_POPUP"),
  INFRASTRUCTURE_TYPE_AREA("INFRASTRUCTURE_TYPE_AREA"),
  OUTBREAKS("OUTBREAKS"),
  PERSON_MANAGEMENT("PERSON_MANAGEMENT"),
  LINE_LISTING("LINE_LISTING"),
  EVENT_GROUPS_MODIFICATION_NOTIFICATIONS("EVENT_GROUPS_MODIFICATION_NOTIFICATIONS"),
  EVENT_PARTICIPANT_CASE_CONFIRMED_NOTIFICATIONS("EVENT_PARTICIPANT_CASE_CONFIRMED_NOTIFICATIONS"),
  EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS_NOTIFICATIONS("EVENT_PARTICIPANT_RELATED_TO_OTHER_EVENTS_NOTIFICATIONS"),
  TASK_NOTIFICATIONS("TASK_NOTIFICATIONS"),
  OTHER_NOTIFICATIONS("OTHER_NOTIFICATIONS"),
  TASK_GENERATION_CASE_SURVEILLANCE("TASK_GENERATION_CASE_SURVEILLANCE"),
  TASK_GENERATION_CONTACT_TRACING("TASK_GENERATION_CONTACT_TRACING"),
  TASK_GENERATION_EVENT_SURVEILLANCE("TASK_GENERATION_EVENT_SURVEILLANCE"),
  TASK_GENERATION_GENERAL("TASK_GENERATION_GENERAL"),
  SORMAS_TO_SORMAS_ACCEPT_REJECT("SORMAS_TO_SORMAS_ACCEPT_REJECT");

  private String value;

  FeatureType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static FeatureType fromValue(String text) {
    for (FeatureType b : FeatureType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }
}
