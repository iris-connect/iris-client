/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CommunityReferenceDto;
import iris.sormas.client.model.Disease;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.Language;
import iris.sormas.client.model.LocationDto;
import iris.sormas.client.model.PointOfEntryReferenceDto;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.UserReferenceDto;
import iris.sormas.client.model.UserRole;
import java.time.OffsetDateTime;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
/**
 * UserDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class UserDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("userName")
  private String userName = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("userEmail")
  private String userEmail = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("address")
  private LocationDto address = null;

  @JsonProperty("userRoles")
  private List<UserRole> userRoles = null;

  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("community")
  private CommunityReferenceDto community = null;

  @JsonProperty("healthFacility")
  private FacilityReferenceDto healthFacility = null;

  @JsonProperty("laboratory")
  private FacilityReferenceDto laboratory = null;

  @JsonProperty("pointOfEntry")
  private PointOfEntryReferenceDto pointOfEntry = null;

  @JsonProperty("associatedOfficer")
  private UserReferenceDto associatedOfficer = null;

  @JsonProperty("limitedDisease")
  private Disease limitedDisease = null;

  @JsonProperty("language")
  private Language language = null;

  @JsonProperty("hasConsentedToGdpr")
  private Boolean hasConsentedToGdpr = null;

  @JsonProperty("name")
  private String name = null;

  public UserDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public UserDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public UserDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public UserDto active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public UserDto userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UserDto firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserDto lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserDto userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

   /**
   * Get userEmail
   * @return userEmail
  **/
  @Schema(description = "")
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }

  public UserDto phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public UserDto address(LocationDto address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public LocationDto getAddress() {
    return address;
  }

  public void setAddress(LocationDto address) {
    this.address = address;
  }

  public UserDto userRoles(List<UserRole> userRoles) {
    this.userRoles = userRoles;
    return this;
  }

  public UserDto addUserRolesItem(UserRole userRolesItem) {
    if (this.userRoles == null) {
      this.userRoles = new ArrayList<>();
    }
    this.userRoles.add(userRolesItem);
    return this;
  }

   /**
   * Get userRoles
   * @return userRoles
  **/
  @Schema(description = "")
  public List<UserRole> getUserRoles() {
    return userRoles;
  }

  public void setUserRoles(List<UserRole> userRoles) {
    this.userRoles = userRoles;
  }

  public UserDto region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public UserDto district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public UserDto community(CommunityReferenceDto community) {
    this.community = community;
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @Schema(description = "")
  public CommunityReferenceDto getCommunity() {
    return community;
  }

  public void setCommunity(CommunityReferenceDto community) {
    this.community = community;
  }

  public UserDto healthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
    return this;
  }

   /**
   * Get healthFacility
   * @return healthFacility
  **/
  @Schema(description = "")
  public FacilityReferenceDto getHealthFacility() {
    return healthFacility;
  }

  public void setHealthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
  }

  public UserDto laboratory(FacilityReferenceDto laboratory) {
    this.laboratory = laboratory;
    return this;
  }

   /**
   * Get laboratory
   * @return laboratory
  **/
  @Schema(description = "")
  public FacilityReferenceDto getLaboratory() {
    return laboratory;
  }

  public void setLaboratory(FacilityReferenceDto laboratory) {
    this.laboratory = laboratory;
  }

  public UserDto pointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
    return this;
  }

   /**
   * Get pointOfEntry
   * @return pointOfEntry
  **/
  @Schema(description = "")
  public PointOfEntryReferenceDto getPointOfEntry() {
    return pointOfEntry;
  }

  public void setPointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
  }

  public UserDto associatedOfficer(UserReferenceDto associatedOfficer) {
    this.associatedOfficer = associatedOfficer;
    return this;
  }

   /**
   * Get associatedOfficer
   * @return associatedOfficer
  **/
  @Schema(description = "")
  public UserReferenceDto getAssociatedOfficer() {
    return associatedOfficer;
  }

  public void setAssociatedOfficer(UserReferenceDto associatedOfficer) {
    this.associatedOfficer = associatedOfficer;
  }

  public UserDto limitedDisease(Disease limitedDisease) {
    this.limitedDisease = limitedDisease;
    return this;
  }

   /**
   * Get limitedDisease
   * @return limitedDisease
  **/
  @Schema(description = "")
  public Disease getLimitedDisease() {
    return limitedDisease;
  }

  public void setLimitedDisease(Disease limitedDisease) {
    this.limitedDisease = limitedDisease;
  }

  public UserDto language(Language language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public Language getLanguage() {
    return language;
  }

  public void setLanguage(Language language) {
    this.language = language;
  }

  public UserDto hasConsentedToGdpr(Boolean hasConsentedToGdpr) {
    this.hasConsentedToGdpr = hasConsentedToGdpr;
    return this;
  }

   /**
   * Get hasConsentedToGdpr
   * @return hasConsentedToGdpr
  **/
  @Schema(description = "")
  public Boolean isHasConsentedToGdpr() {
    return hasConsentedToGdpr;
  }

  public void setHasConsentedToGdpr(Boolean hasConsentedToGdpr) {
    this.hasConsentedToGdpr = hasConsentedToGdpr;
  }

  public UserDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDto userDto = (UserDto) o;
    return Objects.equals(this.creationDate, userDto.creationDate) &&
        Objects.equals(this.changeDate, userDto.changeDate) &&
        Objects.equals(this.uuid, userDto.uuid) &&
        Objects.equals(this.active, userDto.active) &&
        Objects.equals(this.userName, userDto.userName) &&
        Objects.equals(this.firstName, userDto.firstName) &&
        Objects.equals(this.lastName, userDto.lastName) &&
        Objects.equals(this.userEmail, userDto.userEmail) &&
        Objects.equals(this.phone, userDto.phone) &&
        Objects.equals(this.address, userDto.address) &&
        Objects.equals(this.userRoles, userDto.userRoles) &&
        Objects.equals(this.region, userDto.region) &&
        Objects.equals(this.district, userDto.district) &&
        Objects.equals(this.community, userDto.community) &&
        Objects.equals(this.healthFacility, userDto.healthFacility) &&
        Objects.equals(this.laboratory, userDto.laboratory) &&
        Objects.equals(this.pointOfEntry, userDto.pointOfEntry) &&
        Objects.equals(this.associatedOfficer, userDto.associatedOfficer) &&
        Objects.equals(this.limitedDisease, userDto.limitedDisease) &&
        Objects.equals(this.language, userDto.language) &&
        Objects.equals(this.hasConsentedToGdpr, userDto.hasConsentedToGdpr) &&
        Objects.equals(this.name, userDto.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, active, userName, firstName, lastName, userEmail, phone, address, userRoles, region, district, community, healthFacility, laboratory, pointOfEntry, associatedOfficer, limitedDisease, language, hasConsentedToGdpr, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    userRoles: ").append(toIndentedString(userRoles)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    healthFacility: ").append(toIndentedString(healthFacility)).append("\n");
    sb.append("    laboratory: ").append(toIndentedString(laboratory)).append("\n");
    sb.append("    pointOfEntry: ").append(toIndentedString(pointOfEntry)).append("\n");
    sb.append("    associatedOfficer: ").append(toIndentedString(associatedOfficer)).append("\n");
    sb.append("    limitedDisease: ").append(toIndentedString(limitedDisease)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    hasConsentedToGdpr: ").append(toIndentedString(hasConsentedToGdpr)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
