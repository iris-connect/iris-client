/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.AdditionalTestingStatus;
import iris.sormas.client.model.CaseReferenceDto;
import iris.sormas.client.model.ContactReferenceDto;
import iris.sormas.client.model.Disease;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.EventParticipantReferenceDto;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.PathogenTestResultType;
import iris.sormas.client.model.SampleJurisdictionDto;
import iris.sormas.client.model.SampleMaterial;
import iris.sormas.client.model.SamplePurpose;
import iris.sormas.client.model.SamplingReason;
import iris.sormas.client.model.SpecimenCondition;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * SampleIndexDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class SampleIndexDto {
  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("associatedCase")
  private CaseReferenceDto associatedCase = null;

  @JsonProperty("associatedContact")
  private ContactReferenceDto associatedContact = null;

  @JsonProperty("associatedEventParticipant")
  private EventParticipantReferenceDto associatedEventParticipant = null;

  @JsonProperty("epidNumber")
  private String epidNumber = null;

  @JsonProperty("labSampleID")
  private String labSampleID = null;

  @JsonProperty("disease")
  private Disease disease = null;

  @JsonProperty("diseaseDetails")
  private String diseaseDetails = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("shipped")
  private Boolean shipped = null;

  @JsonProperty("received")
  private Boolean received = null;

  @JsonProperty("referred")
  private Boolean referred = null;

  @JsonProperty("sampleDateTime")
  private Instant sampleDateTime = null;

  @JsonProperty("shipmentDate")
  private Instant shipmentDate = null;

  @JsonProperty("receivedDate")
  private Instant receivedDate = null;

  @JsonProperty("lab")
  private FacilityReferenceDto lab = null;

  @JsonProperty("sampleMaterial")
  private SampleMaterial sampleMaterial = null;

  @JsonProperty("samplePurpose")
  private SamplePurpose samplePurpose = null;

  @JsonProperty("specimenCondition")
  private SpecimenCondition specimenCondition = null;

  @JsonProperty("pathogenTestResult")
  private PathogenTestResultType pathogenTestResult = null;

  @JsonProperty("additionalTestingStatus")
  private AdditionalTestingStatus additionalTestingStatus = null;

  @JsonProperty("samplingReason")
  private SamplingReason samplingReason = null;

  @JsonProperty("samplingReasonDetails")
  private String samplingReasonDetails = null;

  @JsonProperty("jurisdiction")
  private SampleJurisdictionDto jurisdiction = null;

  public SampleIndexDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public SampleIndexDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public SampleIndexDto associatedCase(CaseReferenceDto associatedCase) {
    this.associatedCase = associatedCase;
    return this;
  }

   /**
   * Get associatedCase
   * @return associatedCase
  **/
  @Schema(description = "")
  public CaseReferenceDto getAssociatedCase() {
    return associatedCase;
  }

  public void setAssociatedCase(CaseReferenceDto associatedCase) {
    this.associatedCase = associatedCase;
  }

  public SampleIndexDto associatedContact(ContactReferenceDto associatedContact) {
    this.associatedContact = associatedContact;
    return this;
  }

   /**
   * Get associatedContact
   * @return associatedContact
  **/
  @Schema(description = "")
  public ContactReferenceDto getAssociatedContact() {
    return associatedContact;
  }

  public void setAssociatedContact(ContactReferenceDto associatedContact) {
    this.associatedContact = associatedContact;
  }

  public SampleIndexDto associatedEventParticipant(EventParticipantReferenceDto associatedEventParticipant) {
    this.associatedEventParticipant = associatedEventParticipant;
    return this;
  }

   /**
   * Get associatedEventParticipant
   * @return associatedEventParticipant
  **/
  @Schema(description = "")
  public EventParticipantReferenceDto getAssociatedEventParticipant() {
    return associatedEventParticipant;
  }

  public void setAssociatedEventParticipant(EventParticipantReferenceDto associatedEventParticipant) {
    this.associatedEventParticipant = associatedEventParticipant;
  }

  public SampleIndexDto epidNumber(String epidNumber) {
    this.epidNumber = epidNumber;
    return this;
  }

   /**
   * Get epidNumber
   * @return epidNumber
  **/
  @Schema(description = "")
  public String getEpidNumber() {
    return epidNumber;
  }

  public void setEpidNumber(String epidNumber) {
    this.epidNumber = epidNumber;
  }

  public SampleIndexDto labSampleID(String labSampleID) {
    this.labSampleID = labSampleID;
    return this;
  }

   /**
   * Get labSampleID
   * @return labSampleID
  **/
  @Schema(description = "")
  public String getLabSampleID() {
    return labSampleID;
  }

  public void setLabSampleID(String labSampleID) {
    this.labSampleID = labSampleID;
  }

  public SampleIndexDto disease(Disease disease) {
    this.disease = disease;
    return this;
  }

   /**
   * Get disease
   * @return disease
  **/
  @Schema(description = "")
  public Disease getDisease() {
    return disease;
  }

  public void setDisease(Disease disease) {
    this.disease = disease;
  }

  public SampleIndexDto diseaseDetails(String diseaseDetails) {
    this.diseaseDetails = diseaseDetails;
    return this;
  }

   /**
   * Get diseaseDetails
   * @return diseaseDetails
  **/
  @Schema(description = "")
  public String getDiseaseDetails() {
    return diseaseDetails;
  }

  public void setDiseaseDetails(String diseaseDetails) {
    this.diseaseDetails = diseaseDetails;
  }

  public SampleIndexDto district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public SampleIndexDto shipped(Boolean shipped) {
    this.shipped = shipped;
    return this;
  }

   /**
   * Get shipped
   * @return shipped
  **/
  @Schema(description = "")
  public Boolean isShipped() {
    return shipped;
  }

  public void setShipped(Boolean shipped) {
    this.shipped = shipped;
  }

  public SampleIndexDto received(Boolean received) {
    this.received = received;
    return this;
  }

   /**
   * Get received
   * @return received
  **/
  @Schema(description = "")
  public Boolean isReceived() {
    return received;
  }

  public void setReceived(Boolean received) {
    this.received = received;
  }

  public SampleIndexDto referred(Boolean referred) {
    this.referred = referred;
    return this;
  }

   /**
   * Get referred
   * @return referred
  **/
  @Schema(description = "")
  public Boolean isReferred() {
    return referred;
  }

  public void setReferred(Boolean referred) {
    this.referred = referred;
  }

  public SampleIndexDto sampleDateTime(Instant sampleDateTime) {
    this.sampleDateTime = sampleDateTime;
    return this;
  }

   /**
   * Get sampleDateTime
   * @return sampleDateTime
  **/
  @Schema(description = "")
  public Instant getSampleDateTime() {
    return sampleDateTime;
  }

  public void setSampleDateTime(Instant sampleDateTime) {
    this.sampleDateTime = sampleDateTime;
  }

  public SampleIndexDto shipmentDate(Instant shipmentDate) {
    this.shipmentDate = shipmentDate;
    return this;
  }

   /**
   * Get shipmentDate
   * @return shipmentDate
  **/
  @Schema(description = "")
  public Instant getShipmentDate() {
    return shipmentDate;
  }

  public void setShipmentDate(Instant shipmentDate) {
    this.shipmentDate = shipmentDate;
  }

  public SampleIndexDto receivedDate(Instant receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * Get receivedDate
   * @return receivedDate
  **/
  @Schema(description = "")
  public Instant getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(Instant receivedDate) {
    this.receivedDate = receivedDate;
  }

  public SampleIndexDto lab(FacilityReferenceDto lab) {
    this.lab = lab;
    return this;
  }

   /**
   * Get lab
   * @return lab
  **/
  @Schema(description = "")
  public FacilityReferenceDto getLab() {
    return lab;
  }

  public void setLab(FacilityReferenceDto lab) {
    this.lab = lab;
  }

  public SampleIndexDto sampleMaterial(SampleMaterial sampleMaterial) {
    this.sampleMaterial = sampleMaterial;
    return this;
  }

   /**
   * Get sampleMaterial
   * @return sampleMaterial
  **/
  @Schema(description = "")
  public SampleMaterial getSampleMaterial() {
    return sampleMaterial;
  }

  public void setSampleMaterial(SampleMaterial sampleMaterial) {
    this.sampleMaterial = sampleMaterial;
  }

  public SampleIndexDto samplePurpose(SamplePurpose samplePurpose) {
    this.samplePurpose = samplePurpose;
    return this;
  }

   /**
   * Get samplePurpose
   * @return samplePurpose
  **/
  @Schema(description = "")
  public SamplePurpose getSamplePurpose() {
    return samplePurpose;
  }

  public void setSamplePurpose(SamplePurpose samplePurpose) {
    this.samplePurpose = samplePurpose;
  }

  public SampleIndexDto specimenCondition(SpecimenCondition specimenCondition) {
    this.specimenCondition = specimenCondition;
    return this;
  }

   /**
   * Get specimenCondition
   * @return specimenCondition
  **/
  @Schema(description = "")
  public SpecimenCondition getSpecimenCondition() {
    return specimenCondition;
  }

  public void setSpecimenCondition(SpecimenCondition specimenCondition) {
    this.specimenCondition = specimenCondition;
  }

  public SampleIndexDto pathogenTestResult(PathogenTestResultType pathogenTestResult) {
    this.pathogenTestResult = pathogenTestResult;
    return this;
  }

   /**
   * Get pathogenTestResult
   * @return pathogenTestResult
  **/
  @Schema(description = "")
  public PathogenTestResultType getPathogenTestResult() {
    return pathogenTestResult;
  }

  public void setPathogenTestResult(PathogenTestResultType pathogenTestResult) {
    this.pathogenTestResult = pathogenTestResult;
  }

  public SampleIndexDto additionalTestingStatus(AdditionalTestingStatus additionalTestingStatus) {
    this.additionalTestingStatus = additionalTestingStatus;
    return this;
  }

   /**
   * Get additionalTestingStatus
   * @return additionalTestingStatus
  **/
  @Schema(description = "")
  public AdditionalTestingStatus getAdditionalTestingStatus() {
    return additionalTestingStatus;
  }

  public void setAdditionalTestingStatus(AdditionalTestingStatus additionalTestingStatus) {
    this.additionalTestingStatus = additionalTestingStatus;
  }

  public SampleIndexDto samplingReason(SamplingReason samplingReason) {
    this.samplingReason = samplingReason;
    return this;
  }

   /**
   * Get samplingReason
   * @return samplingReason
  **/
  @Schema(description = "")
  public SamplingReason getSamplingReason() {
    return samplingReason;
  }

  public void setSamplingReason(SamplingReason samplingReason) {
    this.samplingReason = samplingReason;
  }

  public SampleIndexDto samplingReasonDetails(String samplingReasonDetails) {
    this.samplingReasonDetails = samplingReasonDetails;
    return this;
  }

   /**
   * Get samplingReasonDetails
   * @return samplingReasonDetails
  **/
  @Schema(description = "")
  public String getSamplingReasonDetails() {
    return samplingReasonDetails;
  }

  public void setSamplingReasonDetails(String samplingReasonDetails) {
    this.samplingReasonDetails = samplingReasonDetails;
  }

  public SampleIndexDto jurisdiction(SampleJurisdictionDto jurisdiction) {
    this.jurisdiction = jurisdiction;
    return this;
  }

   /**
   * Get jurisdiction
   * @return jurisdiction
  **/
  @Schema(description = "")
  public SampleJurisdictionDto getJurisdiction() {
    return jurisdiction;
  }

  public void setJurisdiction(SampleJurisdictionDto jurisdiction) {
    this.jurisdiction = jurisdiction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SampleIndexDto sampleIndexDto = (SampleIndexDto) o;
    return Objects.equals(this.pseudonymized, sampleIndexDto.pseudonymized) &&
        Objects.equals(this.uuid, sampleIndexDto.uuid) &&
        Objects.equals(this.associatedCase, sampleIndexDto.associatedCase) &&
        Objects.equals(this.associatedContact, sampleIndexDto.associatedContact) &&
        Objects.equals(this.associatedEventParticipant, sampleIndexDto.associatedEventParticipant) &&
        Objects.equals(this.epidNumber, sampleIndexDto.epidNumber) &&
        Objects.equals(this.labSampleID, sampleIndexDto.labSampleID) &&
        Objects.equals(this.disease, sampleIndexDto.disease) &&
        Objects.equals(this.diseaseDetails, sampleIndexDto.diseaseDetails) &&
        Objects.equals(this.district, sampleIndexDto.district) &&
        Objects.equals(this.shipped, sampleIndexDto.shipped) &&
        Objects.equals(this.received, sampleIndexDto.received) &&
        Objects.equals(this.referred, sampleIndexDto.referred) &&
        Objects.equals(this.sampleDateTime, sampleIndexDto.sampleDateTime) &&
        Objects.equals(this.shipmentDate, sampleIndexDto.shipmentDate) &&
        Objects.equals(this.receivedDate, sampleIndexDto.receivedDate) &&
        Objects.equals(this.lab, sampleIndexDto.lab) &&
        Objects.equals(this.sampleMaterial, sampleIndexDto.sampleMaterial) &&
        Objects.equals(this.samplePurpose, sampleIndexDto.samplePurpose) &&
        Objects.equals(this.specimenCondition, sampleIndexDto.specimenCondition) &&
        Objects.equals(this.pathogenTestResult, sampleIndexDto.pathogenTestResult) &&
        Objects.equals(this.additionalTestingStatus, sampleIndexDto.additionalTestingStatus) &&
        Objects.equals(this.samplingReason, sampleIndexDto.samplingReason) &&
        Objects.equals(this.samplingReasonDetails, sampleIndexDto.samplingReasonDetails) &&
        Objects.equals(this.jurisdiction, sampleIndexDto.jurisdiction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pseudonymized, uuid, associatedCase, associatedContact, associatedEventParticipant, epidNumber, labSampleID, disease, diseaseDetails, district, shipped, received, referred, sampleDateTime, shipmentDate, receivedDate, lab, sampleMaterial, samplePurpose, specimenCondition, pathogenTestResult, additionalTestingStatus, samplingReason, samplingReasonDetails, jurisdiction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SampleIndexDto {\n");
    
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    associatedCase: ").append(toIndentedString(associatedCase)).append("\n");
    sb.append("    associatedContact: ").append(toIndentedString(associatedContact)).append("\n");
    sb.append("    associatedEventParticipant: ").append(toIndentedString(associatedEventParticipant)).append("\n");
    sb.append("    epidNumber: ").append(toIndentedString(epidNumber)).append("\n");
    sb.append("    labSampleID: ").append(toIndentedString(labSampleID)).append("\n");
    sb.append("    disease: ").append(toIndentedString(disease)).append("\n");
    sb.append("    diseaseDetails: ").append(toIndentedString(diseaseDetails)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    shipped: ").append(toIndentedString(shipped)).append("\n");
    sb.append("    received: ").append(toIndentedString(received)).append("\n");
    sb.append("    referred: ").append(toIndentedString(referred)).append("\n");
    sb.append("    sampleDateTime: ").append(toIndentedString(sampleDateTime)).append("\n");
    sb.append("    shipmentDate: ").append(toIndentedString(shipmentDate)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    lab: ").append(toIndentedString(lab)).append("\n");
    sb.append("    sampleMaterial: ").append(toIndentedString(sampleMaterial)).append("\n");
    sb.append("    samplePurpose: ").append(toIndentedString(samplePurpose)).append("\n");
    sb.append("    specimenCondition: ").append(toIndentedString(specimenCondition)).append("\n");
    sb.append("    pathogenTestResult: ").append(toIndentedString(pathogenTestResult)).append("\n");
    sb.append("    additionalTestingStatus: ").append(toIndentedString(additionalTestingStatus)).append("\n");
    sb.append("    samplingReason: ").append(toIndentedString(samplingReason)).append("\n");
    sb.append("    samplingReasonDetails: ").append(toIndentedString(samplingReasonDetails)).append("\n");
    sb.append("    jurisdiction: ").append(toIndentedString(jurisdiction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
