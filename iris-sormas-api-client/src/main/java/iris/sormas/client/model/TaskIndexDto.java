/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CaseReferenceDto;
import iris.sormas.client.model.ContactReferenceDto;
import iris.sormas.client.model.EventReferenceDto;
import iris.sormas.client.model.ReferenceDto;
import iris.sormas.client.model.TaskContext;
import iris.sormas.client.model.TaskJurisdictionDto;
import iris.sormas.client.model.TaskPriority;
import iris.sormas.client.model.TaskStatus;
import iris.sormas.client.model.TaskType;
import iris.sormas.client.model.UserReferenceDto;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * TaskIndexDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class TaskIndexDto {
  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("taskContext")
  private TaskContext taskContext = null;

  @JsonProperty("caze")
  private CaseReferenceDto caze = null;

  @JsonProperty("event")
  private EventReferenceDto event = null;

  @JsonProperty("contact")
  private ContactReferenceDto contact = null;

  @JsonProperty("region")
  private String region = null;

  @JsonProperty("district")
  private String district = null;

  @JsonProperty("community")
  private String community = null;

  @JsonProperty("taskType")
  private TaskType taskType = null;

  @JsonProperty("priority")
  private TaskPriority priority = null;

  @JsonProperty("dueDate")
  private Instant dueDate = null;

  @JsonProperty("suggestedStart")
  private Instant suggestedStart = null;

  @JsonProperty("taskStatus")
  private TaskStatus taskStatus = null;

  @JsonProperty("creatorUser")
  private UserReferenceDto creatorUser = null;

  @JsonProperty("creatorComment")
  private String creatorComment = null;

  @JsonProperty("assigneeUser")
  private UserReferenceDto assigneeUser = null;

  @JsonProperty("assigneeReply")
  private String assigneeReply = null;

  @JsonProperty("jurisdiction")
  private TaskJurisdictionDto jurisdiction = null;

  @JsonProperty("contextReference")
  private ReferenceDto contextReference = null;

  public TaskIndexDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public TaskIndexDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public TaskIndexDto taskContext(TaskContext taskContext) {
    this.taskContext = taskContext;
    return this;
  }

   /**
   * Get taskContext
   * @return taskContext
  **/
  @Schema(description = "")
  public TaskContext getTaskContext() {
    return taskContext;
  }

  public void setTaskContext(TaskContext taskContext) {
    this.taskContext = taskContext;
  }

  public TaskIndexDto caze(CaseReferenceDto caze) {
    this.caze = caze;
    return this;
  }

   /**
   * Get caze
   * @return caze
  **/
  @Schema(description = "")
  public CaseReferenceDto getCaze() {
    return caze;
  }

  public void setCaze(CaseReferenceDto caze) {
    this.caze = caze;
  }

  public TaskIndexDto event(EventReferenceDto event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @Schema(description = "")
  public EventReferenceDto getEvent() {
    return event;
  }

  public void setEvent(EventReferenceDto event) {
    this.event = event;
  }

  public TaskIndexDto contact(ContactReferenceDto contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public ContactReferenceDto getContact() {
    return contact;
  }

  public void setContact(ContactReferenceDto contact) {
    this.contact = contact;
  }

  public TaskIndexDto region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public TaskIndexDto district(String district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public String getDistrict() {
    return district;
  }

  public void setDistrict(String district) {
    this.district = district;
  }

  public TaskIndexDto community(String community) {
    this.community = community;
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @Schema(description = "")
  public String getCommunity() {
    return community;
  }

  public void setCommunity(String community) {
    this.community = community;
  }

  public TaskIndexDto taskType(TaskType taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public TaskType getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskType taskType) {
    this.taskType = taskType;
  }

  public TaskIndexDto priority(TaskPriority priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public TaskPriority getPriority() {
    return priority;
  }

  public void setPriority(TaskPriority priority) {
    this.priority = priority;
  }

  public TaskIndexDto dueDate(Instant dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @Schema(description = "")
  public Instant getDueDate() {
    return dueDate;
  }

  public void setDueDate(Instant dueDate) {
    this.dueDate = dueDate;
  }

  public TaskIndexDto suggestedStart(Instant suggestedStart) {
    this.suggestedStart = suggestedStart;
    return this;
  }

   /**
   * Get suggestedStart
   * @return suggestedStart
  **/
  @Schema(description = "")
  public Instant getSuggestedStart() {
    return suggestedStart;
  }

  public void setSuggestedStart(Instant suggestedStart) {
    this.suggestedStart = suggestedStart;
  }

  public TaskIndexDto taskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public TaskStatus getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
  }

  public TaskIndexDto creatorUser(UserReferenceDto creatorUser) {
    this.creatorUser = creatorUser;
    return this;
  }

   /**
   * Get creatorUser
   * @return creatorUser
  **/
  @Schema(description = "")
  public UserReferenceDto getCreatorUser() {
    return creatorUser;
  }

  public void setCreatorUser(UserReferenceDto creatorUser) {
    this.creatorUser = creatorUser;
  }

  public TaskIndexDto creatorComment(String creatorComment) {
    this.creatorComment = creatorComment;
    return this;
  }

   /**
   * Get creatorComment
   * @return creatorComment
  **/
  @Schema(description = "")
  public String getCreatorComment() {
    return creatorComment;
  }

  public void setCreatorComment(String creatorComment) {
    this.creatorComment = creatorComment;
  }

  public TaskIndexDto assigneeUser(UserReferenceDto assigneeUser) {
    this.assigneeUser = assigneeUser;
    return this;
  }

   /**
   * Get assigneeUser
   * @return assigneeUser
  **/
  @Schema(description = "")
  public UserReferenceDto getAssigneeUser() {
    return assigneeUser;
  }

  public void setAssigneeUser(UserReferenceDto assigneeUser) {
    this.assigneeUser = assigneeUser;
  }

  public TaskIndexDto assigneeReply(String assigneeReply) {
    this.assigneeReply = assigneeReply;
    return this;
  }

   /**
   * Get assigneeReply
   * @return assigneeReply
  **/
  @Schema(description = "")
  public String getAssigneeReply() {
    return assigneeReply;
  }

  public void setAssigneeReply(String assigneeReply) {
    this.assigneeReply = assigneeReply;
  }

  public TaskIndexDto jurisdiction(TaskJurisdictionDto jurisdiction) {
    this.jurisdiction = jurisdiction;
    return this;
  }

   /**
   * Get jurisdiction
   * @return jurisdiction
  **/
  @Schema(description = "")
  public TaskJurisdictionDto getJurisdiction() {
    return jurisdiction;
  }

  public void setJurisdiction(TaskJurisdictionDto jurisdiction) {
    this.jurisdiction = jurisdiction;
  }

  public TaskIndexDto contextReference(ReferenceDto contextReference) {
    this.contextReference = contextReference;
    return this;
  }

   /**
   * Get contextReference
   * @return contextReference
  **/
  @Schema(description = "")
  public ReferenceDto getContextReference() {
    return contextReference;
  }

  public void setContextReference(ReferenceDto contextReference) {
    this.contextReference = contextReference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskIndexDto taskIndexDto = (TaskIndexDto) o;
    return Objects.equals(this.pseudonymized, taskIndexDto.pseudonymized) &&
        Objects.equals(this.uuid, taskIndexDto.uuid) &&
        Objects.equals(this.taskContext, taskIndexDto.taskContext) &&
        Objects.equals(this.caze, taskIndexDto.caze) &&
        Objects.equals(this.event, taskIndexDto.event) &&
        Objects.equals(this.contact, taskIndexDto.contact) &&
        Objects.equals(this.region, taskIndexDto.region) &&
        Objects.equals(this.district, taskIndexDto.district) &&
        Objects.equals(this.community, taskIndexDto.community) &&
        Objects.equals(this.taskType, taskIndexDto.taskType) &&
        Objects.equals(this.priority, taskIndexDto.priority) &&
        Objects.equals(this.dueDate, taskIndexDto.dueDate) &&
        Objects.equals(this.suggestedStart, taskIndexDto.suggestedStart) &&
        Objects.equals(this.taskStatus, taskIndexDto.taskStatus) &&
        Objects.equals(this.creatorUser, taskIndexDto.creatorUser) &&
        Objects.equals(this.creatorComment, taskIndexDto.creatorComment) &&
        Objects.equals(this.assigneeUser, taskIndexDto.assigneeUser) &&
        Objects.equals(this.assigneeReply, taskIndexDto.assigneeReply) &&
        Objects.equals(this.jurisdiction, taskIndexDto.jurisdiction) &&
        Objects.equals(this.contextReference, taskIndexDto.contextReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pseudonymized, uuid, taskContext, caze, event, contact, region, district, community, taskType, priority, dueDate, suggestedStart, taskStatus, creatorUser, creatorComment, assigneeUser, assigneeReply, jurisdiction, contextReference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskIndexDto {\n");
    
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    taskContext: ").append(toIndentedString(taskContext)).append("\n");
    sb.append("    caze: ").append(toIndentedString(caze)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    suggestedStart: ").append(toIndentedString(suggestedStart)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    creatorUser: ").append(toIndentedString(creatorUser)).append("\n");
    sb.append("    creatorComment: ").append(toIndentedString(creatorComment)).append("\n");
    sb.append("    assigneeUser: ").append(toIndentedString(assigneeUser)).append("\n");
    sb.append("    assigneeReply: ").append(toIndentedString(assigneeReply)).append("\n");
    sb.append("    jurisdiction: ").append(toIndentedString(jurisdiction)).append("\n");
    sb.append("    contextReference: ").append(toIndentedString(contextReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
