/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.ApproximateAgeType;
/**
 * AgeAndBirthDateDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class AgeAndBirthDateDto {
  @JsonProperty("birthdateDD")
  private Integer birthdateDD = null;

  @JsonProperty("birthdateMM")
  private Integer birthdateMM = null;

  @JsonProperty("birthdateYYYY")
  private Integer birthdateYYYY = null;

  @JsonProperty("age")
  private Integer age = null;

  @JsonProperty("ageType")
  private ApproximateAgeType ageType = null;

  public AgeAndBirthDateDto birthdateDD(Integer birthdateDD) {
    this.birthdateDD = birthdateDD;
    return this;
  }

   /**
   * Get birthdateDD
   * @return birthdateDD
  **/
  @Schema(description = "")
  public Integer getBirthdateDD() {
    return birthdateDD;
  }

  public void setBirthdateDD(Integer birthdateDD) {
    this.birthdateDD = birthdateDD;
  }

  public AgeAndBirthDateDto birthdateMM(Integer birthdateMM) {
    this.birthdateMM = birthdateMM;
    return this;
  }

   /**
   * Get birthdateMM
   * @return birthdateMM
  **/
  @Schema(description = "")
  public Integer getBirthdateMM() {
    return birthdateMM;
  }

  public void setBirthdateMM(Integer birthdateMM) {
    this.birthdateMM = birthdateMM;
  }

  public AgeAndBirthDateDto birthdateYYYY(Integer birthdateYYYY) {
    this.birthdateYYYY = birthdateYYYY;
    return this;
  }

   /**
   * Get birthdateYYYY
   * @return birthdateYYYY
  **/
  @Schema(description = "")
  public Integer getBirthdateYYYY() {
    return birthdateYYYY;
  }

  public void setBirthdateYYYY(Integer birthdateYYYY) {
    this.birthdateYYYY = birthdateYYYY;
  }

  public AgeAndBirthDateDto age(Integer age) {
    this.age = age;
    return this;
  }

   /**
   * Get age
   * @return age
  **/
  @Schema(description = "")
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }

  public AgeAndBirthDateDto ageType(ApproximateAgeType ageType) {
    this.ageType = ageType;
    return this;
  }

   /**
   * Get ageType
   * @return ageType
  **/
  @Schema(description = "")
  public ApproximateAgeType getAgeType() {
    return ageType;
  }

  public void setAgeType(ApproximateAgeType ageType) {
    this.ageType = ageType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgeAndBirthDateDto ageAndBirthDateDto = (AgeAndBirthDateDto) o;
    return Objects.equals(this.birthdateDD, ageAndBirthDateDto.birthdateDD) &&
        Objects.equals(this.birthdateMM, ageAndBirthDateDto.birthdateMM) &&
        Objects.equals(this.birthdateYYYY, ageAndBirthDateDto.birthdateYYYY) &&
        Objects.equals(this.age, ageAndBirthDateDto.age) &&
        Objects.equals(this.ageType, ageAndBirthDateDto.ageType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(birthdateDD, birthdateMM, birthdateYYYY, age, ageType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgeAndBirthDateDto {\n");
    
    sb.append("    birthdateDD: ").append(toIndentedString(birthdateDD)).append("\n");
    sb.append("    birthdateMM: ").append(toIndentedString(birthdateMM)).append("\n");
    sb.append("    birthdateYYYY: ").append(toIndentedString(birthdateYYYY)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    ageType: ").append(toIndentedString(ageType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
