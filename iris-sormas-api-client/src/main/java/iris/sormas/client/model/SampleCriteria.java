/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CaseClassification;
import iris.sormas.client.model.CaseReferenceDto;
import iris.sormas.client.model.ContactReferenceDto;
import iris.sormas.client.model.DateFilterOption;
import iris.sormas.client.model.Disease;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.EntityRelevanceStatus;
import iris.sormas.client.model.EventParticipantReferenceDto;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.PathogenTestResultType;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.SampleAssociationType;
import iris.sormas.client.model.SpecimenCondition;
import java.time.OffsetDateTime;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
/**
 * SampleCriteria
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class SampleCriteria {
  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("laboratory")
  private FacilityReferenceDto laboratory = null;

  @JsonProperty("shipped")
  private Boolean shipped = null;

  @JsonProperty("received")
  private Boolean received = null;

  @JsonProperty("referred")
  private Boolean referred = null;

  @JsonProperty("pathogenTestResult")
  private PathogenTestResultType pathogenTestResult = null;

  @JsonProperty("caseClassification")
  private CaseClassification caseClassification = null;

  @JsonProperty("disease")
  private Disease disease = null;

  @JsonProperty("specimenCondition")
  private SpecimenCondition specimenCondition = null;

  @JsonProperty("caze")
  private CaseReferenceDto caze = null;

  @JsonProperty("contact")
  private ContactReferenceDto contact = null;

  @JsonProperty("eventParticipant")
  private EventParticipantReferenceDto eventParticipant = null;

  @JsonProperty("deleted")
  private Boolean deleted = null;

  @JsonProperty("caseCodeIdLike")
  private String caseCodeIdLike = null;

  @JsonProperty("relevanceStatus")
  private EntityRelevanceStatus relevanceStatus = null;

  @JsonProperty("sampleAssociationType")
  private SampleAssociationType sampleAssociationType = null;

  @JsonProperty("sampleReportDateFrom")
  private Instant sampleReportDateFrom = null;

  @JsonProperty("sampleReportDateTo")
  private Instant sampleReportDateTo = null;

  @JsonProperty("dateFilterOption")
  private DateFilterOption dateFilterOption = null;

  @JsonProperty("caseUuids")
  private List<String> caseUuids = null;

  @JsonProperty("contactUuids")
  private List<String> contactUuids = null;

  @JsonProperty("eventParticipantUuids")
  private List<String> eventParticipantUuids = null;

  public SampleCriteria region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public SampleCriteria district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public SampleCriteria laboratory(FacilityReferenceDto laboratory) {
    this.laboratory = laboratory;
    return this;
  }

   /**
   * Get laboratory
   * @return laboratory
  **/
  @Schema(description = "")
  public FacilityReferenceDto getLaboratory() {
    return laboratory;
  }

  public void setLaboratory(FacilityReferenceDto laboratory) {
    this.laboratory = laboratory;
  }

  public SampleCriteria shipped(Boolean shipped) {
    this.shipped = shipped;
    return this;
  }

   /**
   * Get shipped
   * @return shipped
  **/
  @Schema(description = "")
  public Boolean isShipped() {
    return shipped;
  }

  public void setShipped(Boolean shipped) {
    this.shipped = shipped;
  }

  public SampleCriteria received(Boolean received) {
    this.received = received;
    return this;
  }

   /**
   * Get received
   * @return received
  **/
  @Schema(description = "")
  public Boolean isReceived() {
    return received;
  }

  public void setReceived(Boolean received) {
    this.received = received;
  }

  public SampleCriteria referred(Boolean referred) {
    this.referred = referred;
    return this;
  }

   /**
   * Get referred
   * @return referred
  **/
  @Schema(description = "")
  public Boolean isReferred() {
    return referred;
  }

  public void setReferred(Boolean referred) {
    this.referred = referred;
  }

  public SampleCriteria pathogenTestResult(PathogenTestResultType pathogenTestResult) {
    this.pathogenTestResult = pathogenTestResult;
    return this;
  }

   /**
   * Get pathogenTestResult
   * @return pathogenTestResult
  **/
  @Schema(description = "")
  public PathogenTestResultType getPathogenTestResult() {
    return pathogenTestResult;
  }

  public void setPathogenTestResult(PathogenTestResultType pathogenTestResult) {
    this.pathogenTestResult = pathogenTestResult;
  }

  public SampleCriteria caseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
    return this;
  }

   /**
   * Get caseClassification
   * @return caseClassification
  **/
  @Schema(description = "")
  public CaseClassification getCaseClassification() {
    return caseClassification;
  }

  public void setCaseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
  }

  public SampleCriteria disease(Disease disease) {
    this.disease = disease;
    return this;
  }

   /**
   * Get disease
   * @return disease
  **/
  @Schema(description = "")
  public Disease getDisease() {
    return disease;
  }

  public void setDisease(Disease disease) {
    this.disease = disease;
  }

  public SampleCriteria specimenCondition(SpecimenCondition specimenCondition) {
    this.specimenCondition = specimenCondition;
    return this;
  }

   /**
   * Get specimenCondition
   * @return specimenCondition
  **/
  @Schema(description = "")
  public SpecimenCondition getSpecimenCondition() {
    return specimenCondition;
  }

  public void setSpecimenCondition(SpecimenCondition specimenCondition) {
    this.specimenCondition = specimenCondition;
  }

  public SampleCriteria caze(CaseReferenceDto caze) {
    this.caze = caze;
    return this;
  }

   /**
   * Get caze
   * @return caze
  **/
  @Schema(description = "")
  public CaseReferenceDto getCaze() {
    return caze;
  }

  public void setCaze(CaseReferenceDto caze) {
    this.caze = caze;
  }

  public SampleCriteria contact(ContactReferenceDto contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public ContactReferenceDto getContact() {
    return contact;
  }

  public void setContact(ContactReferenceDto contact) {
    this.contact = contact;
  }

  public SampleCriteria eventParticipant(EventParticipantReferenceDto eventParticipant) {
    this.eventParticipant = eventParticipant;
    return this;
  }

   /**
   * Get eventParticipant
   * @return eventParticipant
  **/
  @Schema(description = "")
  public EventParticipantReferenceDto getEventParticipant() {
    return eventParticipant;
  }

  public void setEventParticipant(EventParticipantReferenceDto eventParticipant) {
    this.eventParticipant = eventParticipant;
  }

  public SampleCriteria deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @Schema(description = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public SampleCriteria caseCodeIdLike(String caseCodeIdLike) {
    this.caseCodeIdLike = caseCodeIdLike;
    return this;
  }

   /**
   * Get caseCodeIdLike
   * @return caseCodeIdLike
  **/
  @Schema(description = "")
  public String getCaseCodeIdLike() {
    return caseCodeIdLike;
  }

  public void setCaseCodeIdLike(String caseCodeIdLike) {
    this.caseCodeIdLike = caseCodeIdLike;
  }

  public SampleCriteria relevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
    return this;
  }

   /**
   * Get relevanceStatus
   * @return relevanceStatus
  **/
  @Schema(description = "")
  public EntityRelevanceStatus getRelevanceStatus() {
    return relevanceStatus;
  }

  public void setRelevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
  }

  public SampleCriteria sampleAssociationType(SampleAssociationType sampleAssociationType) {
    this.sampleAssociationType = sampleAssociationType;
    return this;
  }

   /**
   * Get sampleAssociationType
   * @return sampleAssociationType
  **/
  @Schema(description = "")
  public SampleAssociationType getSampleAssociationType() {
    return sampleAssociationType;
  }

  public void setSampleAssociationType(SampleAssociationType sampleAssociationType) {
    this.sampleAssociationType = sampleAssociationType;
  }

  public SampleCriteria sampleReportDateFrom(Instant sampleReportDateFrom) {
    this.sampleReportDateFrom = sampleReportDateFrom;
    return this;
  }

   /**
   * Get sampleReportDateFrom
   * @return sampleReportDateFrom
  **/
  @Schema(description = "")
  public Instant getSampleReportDateFrom() {
    return sampleReportDateFrom;
  }

  public void setSampleReportDateFrom(Instant sampleReportDateFrom) {
    this.sampleReportDateFrom = sampleReportDateFrom;
  }

  public SampleCriteria sampleReportDateTo(Instant sampleReportDateTo) {
    this.sampleReportDateTo = sampleReportDateTo;
    return this;
  }

   /**
   * Get sampleReportDateTo
   * @return sampleReportDateTo
  **/
  @Schema(description = "")
  public Instant getSampleReportDateTo() {
    return sampleReportDateTo;
  }

  public void setSampleReportDateTo(Instant sampleReportDateTo) {
    this.sampleReportDateTo = sampleReportDateTo;
  }

  public SampleCriteria dateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
    return this;
  }

   /**
   * Get dateFilterOption
   * @return dateFilterOption
  **/
  @Schema(description = "")
  public DateFilterOption getDateFilterOption() {
    return dateFilterOption;
  }

  public void setDateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
  }

  public SampleCriteria caseUuids(List<String> caseUuids) {
    this.caseUuids = caseUuids;
    return this;
  }

  public SampleCriteria addCaseUuidsItem(String caseUuidsItem) {
    if (this.caseUuids == null) {
      this.caseUuids = new ArrayList<>();
    }
    this.caseUuids.add(caseUuidsItem);
    return this;
  }

   /**
   * Get caseUuids
   * @return caseUuids
  **/
  @Schema(description = "")
  public List<String> getCaseUuids() {
    return caseUuids;
  }

  public void setCaseUuids(List<String> caseUuids) {
    this.caseUuids = caseUuids;
  }

  public SampleCriteria contactUuids(List<String> contactUuids) {
    this.contactUuids = contactUuids;
    return this;
  }

  public SampleCriteria addContactUuidsItem(String contactUuidsItem) {
    if (this.contactUuids == null) {
      this.contactUuids = new ArrayList<>();
    }
    this.contactUuids.add(contactUuidsItem);
    return this;
  }

   /**
   * Get contactUuids
   * @return contactUuids
  **/
  @Schema(description = "")
  public List<String> getContactUuids() {
    return contactUuids;
  }

  public void setContactUuids(List<String> contactUuids) {
    this.contactUuids = contactUuids;
  }

  public SampleCriteria eventParticipantUuids(List<String> eventParticipantUuids) {
    this.eventParticipantUuids = eventParticipantUuids;
    return this;
  }

  public SampleCriteria addEventParticipantUuidsItem(String eventParticipantUuidsItem) {
    if (this.eventParticipantUuids == null) {
      this.eventParticipantUuids = new ArrayList<>();
    }
    this.eventParticipantUuids.add(eventParticipantUuidsItem);
    return this;
  }

   /**
   * Get eventParticipantUuids
   * @return eventParticipantUuids
  **/
  @Schema(description = "")
  public List<String> getEventParticipantUuids() {
    return eventParticipantUuids;
  }

  public void setEventParticipantUuids(List<String> eventParticipantUuids) {
    this.eventParticipantUuids = eventParticipantUuids;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SampleCriteria sampleCriteria = (SampleCriteria) o;
    return Objects.equals(this.region, sampleCriteria.region) &&
        Objects.equals(this.district, sampleCriteria.district) &&
        Objects.equals(this.laboratory, sampleCriteria.laboratory) &&
        Objects.equals(this.shipped, sampleCriteria.shipped) &&
        Objects.equals(this.received, sampleCriteria.received) &&
        Objects.equals(this.referred, sampleCriteria.referred) &&
        Objects.equals(this.pathogenTestResult, sampleCriteria.pathogenTestResult) &&
        Objects.equals(this.caseClassification, sampleCriteria.caseClassification) &&
        Objects.equals(this.disease, sampleCriteria.disease) &&
        Objects.equals(this.specimenCondition, sampleCriteria.specimenCondition) &&
        Objects.equals(this.caze, sampleCriteria.caze) &&
        Objects.equals(this.contact, sampleCriteria.contact) &&
        Objects.equals(this.eventParticipant, sampleCriteria.eventParticipant) &&
        Objects.equals(this.deleted, sampleCriteria.deleted) &&
        Objects.equals(this.caseCodeIdLike, sampleCriteria.caseCodeIdLike) &&
        Objects.equals(this.relevanceStatus, sampleCriteria.relevanceStatus) &&
        Objects.equals(this.sampleAssociationType, sampleCriteria.sampleAssociationType) &&
        Objects.equals(this.sampleReportDateFrom, sampleCriteria.sampleReportDateFrom) &&
        Objects.equals(this.sampleReportDateTo, sampleCriteria.sampleReportDateTo) &&
        Objects.equals(this.dateFilterOption, sampleCriteria.dateFilterOption) &&
        Objects.equals(this.caseUuids, sampleCriteria.caseUuids) &&
        Objects.equals(this.contactUuids, sampleCriteria.contactUuids) &&
        Objects.equals(this.eventParticipantUuids, sampleCriteria.eventParticipantUuids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(region, district, laboratory, shipped, received, referred, pathogenTestResult, caseClassification, disease, specimenCondition, caze, contact, eventParticipant, deleted, caseCodeIdLike, relevanceStatus, sampleAssociationType, sampleReportDateFrom, sampleReportDateTo, dateFilterOption, caseUuids, contactUuids, eventParticipantUuids);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SampleCriteria {\n");
    
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    laboratory: ").append(toIndentedString(laboratory)).append("\n");
    sb.append("    shipped: ").append(toIndentedString(shipped)).append("\n");
    sb.append("    received: ").append(toIndentedString(received)).append("\n");
    sb.append("    referred: ").append(toIndentedString(referred)).append("\n");
    sb.append("    pathogenTestResult: ").append(toIndentedString(pathogenTestResult)).append("\n");
    sb.append("    caseClassification: ").append(toIndentedString(caseClassification)).append("\n");
    sb.append("    disease: ").append(toIndentedString(disease)).append("\n");
    sb.append("    specimenCondition: ").append(toIndentedString(specimenCondition)).append("\n");
    sb.append("    caze: ").append(toIndentedString(caze)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    eventParticipant: ").append(toIndentedString(eventParticipant)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    caseCodeIdLike: ").append(toIndentedString(caseCodeIdLike)).append("\n");
    sb.append("    relevanceStatus: ").append(toIndentedString(relevanceStatus)).append("\n");
    sb.append("    sampleAssociationType: ").append(toIndentedString(sampleAssociationType)).append("\n");
    sb.append("    sampleReportDateFrom: ").append(toIndentedString(sampleReportDateFrom)).append("\n");
    sb.append("    sampleReportDateTo: ").append(toIndentedString(sampleReportDateTo)).append("\n");
    sb.append("    dateFilterOption: ").append(toIndentedString(dateFilterOption)).append("\n");
    sb.append("    caseUuids: ").append(toIndentedString(caseUuids)).append("\n");
    sb.append("    contactUuids: ").append(toIndentedString(contactUuids)).append("\n");
    sb.append("    eventParticipantUuids: ").append(toIndentedString(eventParticipantUuids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
