/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CaseReferenceDto;
import iris.sormas.client.model.ContactReferenceDto;
import iris.sormas.client.model.DateFilterOption;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.EntityRelevanceStatus;
import iris.sormas.client.model.EventReferenceDto;
import iris.sormas.client.model.PersonReferenceDto;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.TaskContext;
import iris.sormas.client.model.TaskStatus;
import iris.sormas.client.model.TaskType;
import iris.sormas.client.model.UserReferenceDto;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * TaskCriteria
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class TaskCriteria {
  @JsonProperty("taskStatus")
  private TaskStatus taskStatus = null;

  @JsonProperty("taskContext")
  private TaskContext taskContext = null;

  @JsonProperty("freeText")
  private String freeText = null;

  @JsonProperty("taskType")
  private TaskType taskType = null;

  @JsonProperty("assigneeUser")
  private UserReferenceDto assigneeUser = null;

  @JsonProperty("excludeAssigneeUser")
  private UserReferenceDto excludeAssigneeUser = null;

  @JsonProperty("caze")
  private CaseReferenceDto caze = null;

  @JsonProperty("contact")
  private ContactReferenceDto contact = null;

  @JsonProperty("contactPerson")
  private PersonReferenceDto contactPerson = null;

  @JsonProperty("event")
  private EventReferenceDto event = null;

  @JsonProperty("dueDateFrom")
  private Instant dueDateFrom = null;

  @JsonProperty("dueDateTo")
  private Instant dueDateTo = null;

  @JsonProperty("startDateFrom")
  private Instant startDateFrom = null;

  @JsonProperty("startDateTo")
  private Instant startDateTo = null;

  @JsonProperty("statusChangeDateFrom")
  private Instant statusChangeDateFrom = null;

  @JsonProperty("statusChangeDateTo")
  private Instant statusChangeDateTo = null;

  @JsonProperty("dateFilterOption")
  private DateFilterOption dateFilterOption = null;

  @JsonProperty("relevanceStatus")
  private EntityRelevanceStatus relevanceStatus = null;

  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("assigneeUserLike")
  private String assigneeUserLike = null;

  @JsonProperty("creatorUserLike")
  private String creatorUserLike = null;

  public TaskCriteria taskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public TaskStatus getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(TaskStatus taskStatus) {
    this.taskStatus = taskStatus;
  }

  public TaskCriteria taskContext(TaskContext taskContext) {
    this.taskContext = taskContext;
    return this;
  }

   /**
   * Get taskContext
   * @return taskContext
  **/
  @Schema(description = "")
  public TaskContext getTaskContext() {
    return taskContext;
  }

  public void setTaskContext(TaskContext taskContext) {
    this.taskContext = taskContext;
  }

  public TaskCriteria freeText(String freeText) {
    this.freeText = freeText;
    return this;
  }

   /**
   * Get freeText
   * @return freeText
  **/
  @Schema(description = "")
  public String getFreeText() {
    return freeText;
  }

  public void setFreeText(String freeText) {
    this.freeText = freeText;
  }

  public TaskCriteria taskType(TaskType taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public TaskType getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskType taskType) {
    this.taskType = taskType;
  }

  public TaskCriteria assigneeUser(UserReferenceDto assigneeUser) {
    this.assigneeUser = assigneeUser;
    return this;
  }

   /**
   * Get assigneeUser
   * @return assigneeUser
  **/
  @Schema(description = "")
  public UserReferenceDto getAssigneeUser() {
    return assigneeUser;
  }

  public void setAssigneeUser(UserReferenceDto assigneeUser) {
    this.assigneeUser = assigneeUser;
  }

  public TaskCriteria excludeAssigneeUser(UserReferenceDto excludeAssigneeUser) {
    this.excludeAssigneeUser = excludeAssigneeUser;
    return this;
  }

   /**
   * Get excludeAssigneeUser
   * @return excludeAssigneeUser
  **/
  @Schema(description = "")
  public UserReferenceDto getExcludeAssigneeUser() {
    return excludeAssigneeUser;
  }

  public void setExcludeAssigneeUser(UserReferenceDto excludeAssigneeUser) {
    this.excludeAssigneeUser = excludeAssigneeUser;
  }

  public TaskCriteria caze(CaseReferenceDto caze) {
    this.caze = caze;
    return this;
  }

   /**
   * Get caze
   * @return caze
  **/
  @Schema(description = "")
  public CaseReferenceDto getCaze() {
    return caze;
  }

  public void setCaze(CaseReferenceDto caze) {
    this.caze = caze;
  }

  public TaskCriteria contact(ContactReferenceDto contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public ContactReferenceDto getContact() {
    return contact;
  }

  public void setContact(ContactReferenceDto contact) {
    this.contact = contact;
  }

  public TaskCriteria contactPerson(PersonReferenceDto contactPerson) {
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * Get contactPerson
   * @return contactPerson
  **/
  @Schema(description = "")
  public PersonReferenceDto getContactPerson() {
    return contactPerson;
  }

  public void setContactPerson(PersonReferenceDto contactPerson) {
    this.contactPerson = contactPerson;
  }

  public TaskCriteria event(EventReferenceDto event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @Schema(description = "")
  public EventReferenceDto getEvent() {
    return event;
  }

  public void setEvent(EventReferenceDto event) {
    this.event = event;
  }

  public TaskCriteria dueDateFrom(Instant dueDateFrom) {
    this.dueDateFrom = dueDateFrom;
    return this;
  }

   /**
   * Get dueDateFrom
   * @return dueDateFrom
  **/
  @Schema(description = "")
  public Instant getDueDateFrom() {
    return dueDateFrom;
  }

  public void setDueDateFrom(Instant dueDateFrom) {
    this.dueDateFrom = dueDateFrom;
  }

  public TaskCriteria dueDateTo(Instant dueDateTo) {
    this.dueDateTo = dueDateTo;
    return this;
  }

   /**
   * Get dueDateTo
   * @return dueDateTo
  **/
  @Schema(description = "")
  public Instant getDueDateTo() {
    return dueDateTo;
  }

  public void setDueDateTo(Instant dueDateTo) {
    this.dueDateTo = dueDateTo;
  }

  public TaskCriteria startDateFrom(Instant startDateFrom) {
    this.startDateFrom = startDateFrom;
    return this;
  }

   /**
   * Get startDateFrom
   * @return startDateFrom
  **/
  @Schema(description = "")
  public Instant getStartDateFrom() {
    return startDateFrom;
  }

  public void setStartDateFrom(Instant startDateFrom) {
    this.startDateFrom = startDateFrom;
  }

  public TaskCriteria startDateTo(Instant startDateTo) {
    this.startDateTo = startDateTo;
    return this;
  }

   /**
   * Get startDateTo
   * @return startDateTo
  **/
  @Schema(description = "")
  public Instant getStartDateTo() {
    return startDateTo;
  }

  public void setStartDateTo(Instant startDateTo) {
    this.startDateTo = startDateTo;
  }

  public TaskCriteria statusChangeDateFrom(Instant statusChangeDateFrom) {
    this.statusChangeDateFrom = statusChangeDateFrom;
    return this;
  }

   /**
   * Get statusChangeDateFrom
   * @return statusChangeDateFrom
  **/
  @Schema(description = "")
  public Instant getStatusChangeDateFrom() {
    return statusChangeDateFrom;
  }

  public void setStatusChangeDateFrom(Instant statusChangeDateFrom) {
    this.statusChangeDateFrom = statusChangeDateFrom;
  }

  public TaskCriteria statusChangeDateTo(Instant statusChangeDateTo) {
    this.statusChangeDateTo = statusChangeDateTo;
    return this;
  }

   /**
   * Get statusChangeDateTo
   * @return statusChangeDateTo
  **/
  @Schema(description = "")
  public Instant getStatusChangeDateTo() {
    return statusChangeDateTo;
  }

  public void setStatusChangeDateTo(Instant statusChangeDateTo) {
    this.statusChangeDateTo = statusChangeDateTo;
  }

  public TaskCriteria dateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
    return this;
  }

   /**
   * Get dateFilterOption
   * @return dateFilterOption
  **/
  @Schema(description = "")
  public DateFilterOption getDateFilterOption() {
    return dateFilterOption;
  }

  public void setDateFilterOption(DateFilterOption dateFilterOption) {
    this.dateFilterOption = dateFilterOption;
  }

  public TaskCriteria relevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
    return this;
  }

   /**
   * Get relevanceStatus
   * @return relevanceStatus
  **/
  @Schema(description = "")
  public EntityRelevanceStatus getRelevanceStatus() {
    return relevanceStatus;
  }

  public void setRelevanceStatus(EntityRelevanceStatus relevanceStatus) {
    this.relevanceStatus = relevanceStatus;
  }

  public TaskCriteria region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public TaskCriteria district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public TaskCriteria assigneeUserLike(String assigneeUserLike) {
    this.assigneeUserLike = assigneeUserLike;
    return this;
  }

   /**
   * Get assigneeUserLike
   * @return assigneeUserLike
  **/
  @Schema(description = "")
  public String getAssigneeUserLike() {
    return assigneeUserLike;
  }

  public void setAssigneeUserLike(String assigneeUserLike) {
    this.assigneeUserLike = assigneeUserLike;
  }

  public TaskCriteria creatorUserLike(String creatorUserLike) {
    this.creatorUserLike = creatorUserLike;
    return this;
  }

   /**
   * Get creatorUserLike
   * @return creatorUserLike
  **/
  @Schema(description = "")
  public String getCreatorUserLike() {
    return creatorUserLike;
  }

  public void setCreatorUserLike(String creatorUserLike) {
    this.creatorUserLike = creatorUserLike;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskCriteria taskCriteria = (TaskCriteria) o;
    return Objects.equals(this.taskStatus, taskCriteria.taskStatus) &&
        Objects.equals(this.taskContext, taskCriteria.taskContext) &&
        Objects.equals(this.freeText, taskCriteria.freeText) &&
        Objects.equals(this.taskType, taskCriteria.taskType) &&
        Objects.equals(this.assigneeUser, taskCriteria.assigneeUser) &&
        Objects.equals(this.excludeAssigneeUser, taskCriteria.excludeAssigneeUser) &&
        Objects.equals(this.caze, taskCriteria.caze) &&
        Objects.equals(this.contact, taskCriteria.contact) &&
        Objects.equals(this.contactPerson, taskCriteria.contactPerson) &&
        Objects.equals(this.event, taskCriteria.event) &&
        Objects.equals(this.dueDateFrom, taskCriteria.dueDateFrom) &&
        Objects.equals(this.dueDateTo, taskCriteria.dueDateTo) &&
        Objects.equals(this.startDateFrom, taskCriteria.startDateFrom) &&
        Objects.equals(this.startDateTo, taskCriteria.startDateTo) &&
        Objects.equals(this.statusChangeDateFrom, taskCriteria.statusChangeDateFrom) &&
        Objects.equals(this.statusChangeDateTo, taskCriteria.statusChangeDateTo) &&
        Objects.equals(this.dateFilterOption, taskCriteria.dateFilterOption) &&
        Objects.equals(this.relevanceStatus, taskCriteria.relevanceStatus) &&
        Objects.equals(this.region, taskCriteria.region) &&
        Objects.equals(this.district, taskCriteria.district) &&
        Objects.equals(this.assigneeUserLike, taskCriteria.assigneeUserLike) &&
        Objects.equals(this.creatorUserLike, taskCriteria.creatorUserLike);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskStatus, taskContext, freeText, taskType, assigneeUser, excludeAssigneeUser, caze, contact, contactPerson, event, dueDateFrom, dueDateTo, startDateFrom, startDateTo, statusChangeDateFrom, statusChangeDateTo, dateFilterOption, relevanceStatus, region, district, assigneeUserLike, creatorUserLike);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskCriteria {\n");
    
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    taskContext: ").append(toIndentedString(taskContext)).append("\n");
    sb.append("    freeText: ").append(toIndentedString(freeText)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    assigneeUser: ").append(toIndentedString(assigneeUser)).append("\n");
    sb.append("    excludeAssigneeUser: ").append(toIndentedString(excludeAssigneeUser)).append("\n");
    sb.append("    caze: ").append(toIndentedString(caze)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    dueDateFrom: ").append(toIndentedString(dueDateFrom)).append("\n");
    sb.append("    dueDateTo: ").append(toIndentedString(dueDateTo)).append("\n");
    sb.append("    startDateFrom: ").append(toIndentedString(startDateFrom)).append("\n");
    sb.append("    startDateTo: ").append(toIndentedString(startDateTo)).append("\n");
    sb.append("    statusChangeDateFrom: ").append(toIndentedString(statusChangeDateFrom)).append("\n");
    sb.append("    statusChangeDateTo: ").append(toIndentedString(statusChangeDateTo)).append("\n");
    sb.append("    dateFilterOption: ").append(toIndentedString(dateFilterOption)).append("\n");
    sb.append("    relevanceStatus: ").append(toIndentedString(relevanceStatus)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    assigneeUserLike: ").append(toIndentedString(assigneeUserLike)).append("\n");
    sb.append("    creatorUserLike: ").append(toIndentedString(creatorUserLike)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
