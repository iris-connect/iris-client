/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.ContactCriteria;
import iris.sormas.client.model.SortProperty;
import java.util.ArrayList;
import java.util.List;
/**
 * CriteriaWithSortingContactCriteria
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class CriteriaWithSortingContactCriteria {
  @JsonProperty("criteria")
  private ContactCriteria criteria = null;

  @JsonProperty("sortProperties")
  private List<SortProperty> sortProperties = null;

  @JsonProperty("caseCriteria")
  private ContactCriteria caseCriteria = null;

  public CriteriaWithSortingContactCriteria criteria(ContactCriteria criteria) {
    this.criteria = criteria;
    return this;
  }

   /**
   * Get criteria
   * @return criteria
  **/
  @Schema(description = "")
  public ContactCriteria getCriteria() {
    return criteria;
  }

  public void setCriteria(ContactCriteria criteria) {
    this.criteria = criteria;
  }

  public CriteriaWithSortingContactCriteria sortProperties(List<SortProperty> sortProperties) {
    this.sortProperties = sortProperties;
    return this;
  }

  public CriteriaWithSortingContactCriteria addSortPropertiesItem(SortProperty sortPropertiesItem) {
    if (this.sortProperties == null) {
      this.sortProperties = new ArrayList<>();
    }
    this.sortProperties.add(sortPropertiesItem);
    return this;
  }

   /**
   * Get sortProperties
   * @return sortProperties
  **/
  @Schema(description = "")
  public List<SortProperty> getSortProperties() {
    return sortProperties;
  }

  public void setSortProperties(List<SortProperty> sortProperties) {
    this.sortProperties = sortProperties;
  }

  public CriteriaWithSortingContactCriteria caseCriteria(ContactCriteria caseCriteria) {
    this.caseCriteria = caseCriteria;
    return this;
  }

   /**
   * Get caseCriteria
   * @return caseCriteria
  **/
  @Schema(description = "")
  public ContactCriteria getCaseCriteria() {
    return caseCriteria;
  }

  public void setCaseCriteria(ContactCriteria caseCriteria) {
    this.caseCriteria = caseCriteria;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CriteriaWithSortingContactCriteria criteriaWithSortingContactCriteria = (CriteriaWithSortingContactCriteria) o;
    return Objects.equals(this.criteria, criteriaWithSortingContactCriteria.criteria) &&
        Objects.equals(this.sortProperties, criteriaWithSortingContactCriteria.sortProperties) &&
        Objects.equals(this.caseCriteria, criteriaWithSortingContactCriteria.caseCriteria);
  }

  @Override
  public int hashCode() {
    return Objects.hash(criteria, sortProperties, caseCriteria);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CriteriaWithSortingContactCriteria {\n");
    
    sb.append("    criteria: ").append(toIndentedString(criteria)).append("\n");
    sb.append("    sortProperties: ").append(toIndentedString(sortProperties)).append("\n");
    sb.append("    caseCriteria: ").append(toIndentedString(caseCriteria)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
