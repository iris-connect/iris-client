/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.ActivityAsCaseType;
import iris.sormas.client.model.ExposureRole;
import iris.sormas.client.model.GatheringType;
import iris.sormas.client.model.HabitationType;
import iris.sormas.client.model.LocationDto;
import iris.sormas.client.model.MeansOfTransport;
import iris.sormas.client.model.TypeOfPlace;
import iris.sormas.client.model.UserReferenceDto;
import iris.sormas.client.model.WorkEnvironment;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * ActivityAsCaseDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class ActivityAsCaseDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("reportingUser")
  private UserReferenceDto reportingUser = null;

  @JsonProperty("startDate")
  private Instant startDate = null;

  @JsonProperty("endDate")
  private Instant endDate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("activityAsCaseType")
  private ActivityAsCaseType activityAsCaseType = null;

  @JsonProperty("activityAsCaseTypeDetails")
  private String activityAsCaseTypeDetails = null;

  @JsonProperty("location")
  private LocationDto location = null;

  @JsonProperty("role")
  private ExposureRole role = null;

  @JsonProperty("typeOfPlace")
  private TypeOfPlace typeOfPlace = null;

  @JsonProperty("typeOfPlaceDetails")
  private String typeOfPlaceDetails = null;

  @JsonProperty("meansOfTransport")
  private MeansOfTransport meansOfTransport = null;

  @JsonProperty("meansOfTransportDetails")
  private String meansOfTransportDetails = null;

  @JsonProperty("connectionNumber")
  private String connectionNumber = null;

  @JsonProperty("seatNumber")
  private String seatNumber = null;

  @JsonProperty("workEnvironment")
  private WorkEnvironment workEnvironment = null;

  @JsonProperty("gatheringType")
  private GatheringType gatheringType = null;

  @JsonProperty("gatheringDetails")
  private String gatheringDetails = null;

  @JsonProperty("habitationType")
  private HabitationType habitationType = null;

  @JsonProperty("habitationDetails")
  private String habitationDetails = null;

  public ActivityAsCaseDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public ActivityAsCaseDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public ActivityAsCaseDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ActivityAsCaseDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public ActivityAsCaseDto reportingUser(UserReferenceDto reportingUser) {
    this.reportingUser = reportingUser;
    return this;
  }

   /**
   * Get reportingUser
   * @return reportingUser
  **/
  @Schema(description = "")
  public UserReferenceDto getReportingUser() {
    return reportingUser;
  }

  public void setReportingUser(UserReferenceDto reportingUser) {
    this.reportingUser = reportingUser;
  }

  public ActivityAsCaseDto startDate(Instant startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public Instant getStartDate() {
    return startDate;
  }

  public void setStartDate(Instant startDate) {
    this.startDate = startDate;
  }

  public ActivityAsCaseDto endDate(Instant endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public Instant getEndDate() {
    return endDate;
  }

  public void setEndDate(Instant endDate) {
    this.endDate = endDate;
  }

  public ActivityAsCaseDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ActivityAsCaseDto activityAsCaseType(ActivityAsCaseType activityAsCaseType) {
    this.activityAsCaseType = activityAsCaseType;
    return this;
  }

   /**
   * Get activityAsCaseType
   * @return activityAsCaseType
  **/
  @Schema(required = true, description = "")
  public ActivityAsCaseType getActivityAsCaseType() {
    return activityAsCaseType;
  }

  public void setActivityAsCaseType(ActivityAsCaseType activityAsCaseType) {
    this.activityAsCaseType = activityAsCaseType;
  }

  public ActivityAsCaseDto activityAsCaseTypeDetails(String activityAsCaseTypeDetails) {
    this.activityAsCaseTypeDetails = activityAsCaseTypeDetails;
    return this;
  }

   /**
   * Get activityAsCaseTypeDetails
   * @return activityAsCaseTypeDetails
  **/
  @Schema(description = "")
  public String getActivityAsCaseTypeDetails() {
    return activityAsCaseTypeDetails;
  }

  public void setActivityAsCaseTypeDetails(String activityAsCaseTypeDetails) {
    this.activityAsCaseTypeDetails = activityAsCaseTypeDetails;
  }

  public ActivityAsCaseDto location(LocationDto location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public LocationDto getLocation() {
    return location;
  }

  public void setLocation(LocationDto location) {
    this.location = location;
  }

  public ActivityAsCaseDto role(ExposureRole role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public ExposureRole getRole() {
    return role;
  }

  public void setRole(ExposureRole role) {
    this.role = role;
  }

  public ActivityAsCaseDto typeOfPlace(TypeOfPlace typeOfPlace) {
    this.typeOfPlace = typeOfPlace;
    return this;
  }

   /**
   * Get typeOfPlace
   * @return typeOfPlace
  **/
  @Schema(description = "")
  public TypeOfPlace getTypeOfPlace() {
    return typeOfPlace;
  }

  public void setTypeOfPlace(TypeOfPlace typeOfPlace) {
    this.typeOfPlace = typeOfPlace;
  }

  public ActivityAsCaseDto typeOfPlaceDetails(String typeOfPlaceDetails) {
    this.typeOfPlaceDetails = typeOfPlaceDetails;
    return this;
  }

   /**
   * Get typeOfPlaceDetails
   * @return typeOfPlaceDetails
  **/
  @Schema(description = "")
  public String getTypeOfPlaceDetails() {
    return typeOfPlaceDetails;
  }

  public void setTypeOfPlaceDetails(String typeOfPlaceDetails) {
    this.typeOfPlaceDetails = typeOfPlaceDetails;
  }

  public ActivityAsCaseDto meansOfTransport(MeansOfTransport meansOfTransport) {
    this.meansOfTransport = meansOfTransport;
    return this;
  }

   /**
   * Get meansOfTransport
   * @return meansOfTransport
  **/
  @Schema(description = "")
  public MeansOfTransport getMeansOfTransport() {
    return meansOfTransport;
  }

  public void setMeansOfTransport(MeansOfTransport meansOfTransport) {
    this.meansOfTransport = meansOfTransport;
  }

  public ActivityAsCaseDto meansOfTransportDetails(String meansOfTransportDetails) {
    this.meansOfTransportDetails = meansOfTransportDetails;
    return this;
  }

   /**
   * Get meansOfTransportDetails
   * @return meansOfTransportDetails
  **/
  @Schema(description = "")
  public String getMeansOfTransportDetails() {
    return meansOfTransportDetails;
  }

  public void setMeansOfTransportDetails(String meansOfTransportDetails) {
    this.meansOfTransportDetails = meansOfTransportDetails;
  }

  public ActivityAsCaseDto connectionNumber(String connectionNumber) {
    this.connectionNumber = connectionNumber;
    return this;
  }

   /**
   * Get connectionNumber
   * @return connectionNumber
  **/
  @Schema(description = "")
  public String getConnectionNumber() {
    return connectionNumber;
  }

  public void setConnectionNumber(String connectionNumber) {
    this.connectionNumber = connectionNumber;
  }

  public ActivityAsCaseDto seatNumber(String seatNumber) {
    this.seatNumber = seatNumber;
    return this;
  }

   /**
   * Get seatNumber
   * @return seatNumber
  **/
  @Schema(description = "")
  public String getSeatNumber() {
    return seatNumber;
  }

  public void setSeatNumber(String seatNumber) {
    this.seatNumber = seatNumber;
  }

  public ActivityAsCaseDto workEnvironment(WorkEnvironment workEnvironment) {
    this.workEnvironment = workEnvironment;
    return this;
  }

   /**
   * Get workEnvironment
   * @return workEnvironment
  **/
  @Schema(description = "")
  public WorkEnvironment getWorkEnvironment() {
    return workEnvironment;
  }

  public void setWorkEnvironment(WorkEnvironment workEnvironment) {
    this.workEnvironment = workEnvironment;
  }

  public ActivityAsCaseDto gatheringType(GatheringType gatheringType) {
    this.gatheringType = gatheringType;
    return this;
  }

   /**
   * Get gatheringType
   * @return gatheringType
  **/
  @Schema(description = "")
  public GatheringType getGatheringType() {
    return gatheringType;
  }

  public void setGatheringType(GatheringType gatheringType) {
    this.gatheringType = gatheringType;
  }

  public ActivityAsCaseDto gatheringDetails(String gatheringDetails) {
    this.gatheringDetails = gatheringDetails;
    return this;
  }

   /**
   * Get gatheringDetails
   * @return gatheringDetails
  **/
  @Schema(description = "")
  public String getGatheringDetails() {
    return gatheringDetails;
  }

  public void setGatheringDetails(String gatheringDetails) {
    this.gatheringDetails = gatheringDetails;
  }

  public ActivityAsCaseDto habitationType(HabitationType habitationType) {
    this.habitationType = habitationType;
    return this;
  }

   /**
   * Get habitationType
   * @return habitationType
  **/
  @Schema(description = "")
  public HabitationType getHabitationType() {
    return habitationType;
  }

  public void setHabitationType(HabitationType habitationType) {
    this.habitationType = habitationType;
  }

  public ActivityAsCaseDto habitationDetails(String habitationDetails) {
    this.habitationDetails = habitationDetails;
    return this;
  }

   /**
   * Get habitationDetails
   * @return habitationDetails
  **/
  @Schema(description = "")
  public String getHabitationDetails() {
    return habitationDetails;
  }

  public void setHabitationDetails(String habitationDetails) {
    this.habitationDetails = habitationDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityAsCaseDto activityAsCaseDto = (ActivityAsCaseDto) o;
    return Objects.equals(this.creationDate, activityAsCaseDto.creationDate) &&
        Objects.equals(this.changeDate, activityAsCaseDto.changeDate) &&
        Objects.equals(this.uuid, activityAsCaseDto.uuid) &&
        Objects.equals(this.pseudonymized, activityAsCaseDto.pseudonymized) &&
        Objects.equals(this.reportingUser, activityAsCaseDto.reportingUser) &&
        Objects.equals(this.startDate, activityAsCaseDto.startDate) &&
        Objects.equals(this.endDate, activityAsCaseDto.endDate) &&
        Objects.equals(this.description, activityAsCaseDto.description) &&
        Objects.equals(this.activityAsCaseType, activityAsCaseDto.activityAsCaseType) &&
        Objects.equals(this.activityAsCaseTypeDetails, activityAsCaseDto.activityAsCaseTypeDetails) &&
        Objects.equals(this.location, activityAsCaseDto.location) &&
        Objects.equals(this.role, activityAsCaseDto.role) &&
        Objects.equals(this.typeOfPlace, activityAsCaseDto.typeOfPlace) &&
        Objects.equals(this.typeOfPlaceDetails, activityAsCaseDto.typeOfPlaceDetails) &&
        Objects.equals(this.meansOfTransport, activityAsCaseDto.meansOfTransport) &&
        Objects.equals(this.meansOfTransportDetails, activityAsCaseDto.meansOfTransportDetails) &&
        Objects.equals(this.connectionNumber, activityAsCaseDto.connectionNumber) &&
        Objects.equals(this.seatNumber, activityAsCaseDto.seatNumber) &&
        Objects.equals(this.workEnvironment, activityAsCaseDto.workEnvironment) &&
        Objects.equals(this.gatheringType, activityAsCaseDto.gatheringType) &&
        Objects.equals(this.gatheringDetails, activityAsCaseDto.gatheringDetails) &&
        Objects.equals(this.habitationType, activityAsCaseDto.habitationType) &&
        Objects.equals(this.habitationDetails, activityAsCaseDto.habitationDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, pseudonymized, reportingUser, startDate, endDate, description, activityAsCaseType, activityAsCaseTypeDetails, location, role, typeOfPlace, typeOfPlaceDetails, meansOfTransport, meansOfTransportDetails, connectionNumber, seatNumber, workEnvironment, gatheringType, gatheringDetails, habitationType, habitationDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityAsCaseDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    reportingUser: ").append(toIndentedString(reportingUser)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    activityAsCaseType: ").append(toIndentedString(activityAsCaseType)).append("\n");
    sb.append("    activityAsCaseTypeDetails: ").append(toIndentedString(activityAsCaseTypeDetails)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    typeOfPlace: ").append(toIndentedString(typeOfPlace)).append("\n");
    sb.append("    typeOfPlaceDetails: ").append(toIndentedString(typeOfPlaceDetails)).append("\n");
    sb.append("    meansOfTransport: ").append(toIndentedString(meansOfTransport)).append("\n");
    sb.append("    meansOfTransportDetails: ").append(toIndentedString(meansOfTransportDetails)).append("\n");
    sb.append("    connectionNumber: ").append(toIndentedString(connectionNumber)).append("\n");
    sb.append("    seatNumber: ").append(toIndentedString(seatNumber)).append("\n");
    sb.append("    workEnvironment: ").append(toIndentedString(workEnvironment)).append("\n");
    sb.append("    gatheringType: ").append(toIndentedString(gatheringType)).append("\n");
    sb.append("    gatheringDetails: ").append(toIndentedString(gatheringDetails)).append("\n");
    sb.append("    habitationType: ").append(toIndentedString(habitationType)).append("\n");
    sb.append("    habitationDetails: ").append(toIndentedString(habitationDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
