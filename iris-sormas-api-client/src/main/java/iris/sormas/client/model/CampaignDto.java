/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CampaignDashboardElement;
import iris.sormas.client.model.CampaignFormMetaReferenceDto;
import iris.sormas.client.model.UserReferenceDto;
import java.time.OffsetDateTime;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
/**
 * CampaignDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class CampaignDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("startDate")
  private Instant startDate = null;

  @JsonProperty("endDate")
  private Instant endDate = null;

  @JsonProperty("creatingUser")
  private UserReferenceDto creatingUser = null;

  @JsonProperty("campaignFormMetas")
  private List<CampaignFormMetaReferenceDto> campaignFormMetas = null;

  @JsonProperty("campaignDashboardElements")
  private List<CampaignDashboardElement> campaignDashboardElements = null;

  public CampaignDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public CampaignDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public CampaignDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public CampaignDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CampaignDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CampaignDto startDate(Instant startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public Instant getStartDate() {
    return startDate;
  }

  public void setStartDate(Instant startDate) {
    this.startDate = startDate;
  }

  public CampaignDto endDate(Instant endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public Instant getEndDate() {
    return endDate;
  }

  public void setEndDate(Instant endDate) {
    this.endDate = endDate;
  }

  public CampaignDto creatingUser(UserReferenceDto creatingUser) {
    this.creatingUser = creatingUser;
    return this;
  }

   /**
   * Get creatingUser
   * @return creatingUser
  **/
  @Schema(description = "")
  public UserReferenceDto getCreatingUser() {
    return creatingUser;
  }

  public void setCreatingUser(UserReferenceDto creatingUser) {
    this.creatingUser = creatingUser;
  }

  public CampaignDto campaignFormMetas(List<CampaignFormMetaReferenceDto> campaignFormMetas) {
    this.campaignFormMetas = campaignFormMetas;
    return this;
  }

  public CampaignDto addCampaignFormMetasItem(CampaignFormMetaReferenceDto campaignFormMetasItem) {
    if (this.campaignFormMetas == null) {
      this.campaignFormMetas = new ArrayList<>();
    }
    this.campaignFormMetas.add(campaignFormMetasItem);
    return this;
  }

   /**
   * Get campaignFormMetas
   * @return campaignFormMetas
  **/
  @Schema(description = "")
  public List<CampaignFormMetaReferenceDto> getCampaignFormMetas() {
    return campaignFormMetas;
  }

  public void setCampaignFormMetas(List<CampaignFormMetaReferenceDto> campaignFormMetas) {
    this.campaignFormMetas = campaignFormMetas;
  }

  public CampaignDto campaignDashboardElements(List<CampaignDashboardElement> campaignDashboardElements) {
    this.campaignDashboardElements = campaignDashboardElements;
    return this;
  }

  public CampaignDto addCampaignDashboardElementsItem(CampaignDashboardElement campaignDashboardElementsItem) {
    if (this.campaignDashboardElements == null) {
      this.campaignDashboardElements = new ArrayList<>();
    }
    this.campaignDashboardElements.add(campaignDashboardElementsItem);
    return this;
  }

   /**
   * Get campaignDashboardElements
   * @return campaignDashboardElements
  **/
  @Schema(description = "")
  public List<CampaignDashboardElement> getCampaignDashboardElements() {
    return campaignDashboardElements;
  }

  public void setCampaignDashboardElements(List<CampaignDashboardElement> campaignDashboardElements) {
    this.campaignDashboardElements = campaignDashboardElements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignDto campaignDto = (CampaignDto) o;
    return Objects.equals(this.creationDate, campaignDto.creationDate) &&
        Objects.equals(this.changeDate, campaignDto.changeDate) &&
        Objects.equals(this.uuid, campaignDto.uuid) &&
        Objects.equals(this.name, campaignDto.name) &&
        Objects.equals(this.description, campaignDto.description) &&
        Objects.equals(this.startDate, campaignDto.startDate) &&
        Objects.equals(this.endDate, campaignDto.endDate) &&
        Objects.equals(this.creatingUser, campaignDto.creatingUser) &&
        Objects.equals(this.campaignFormMetas, campaignDto.campaignFormMetas) &&
        Objects.equals(this.campaignDashboardElements, campaignDto.campaignDashboardElements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, name, description, startDate, endDate, creatingUser, campaignFormMetas, campaignDashboardElements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    creatingUser: ").append(toIndentedString(creatingUser)).append("\n");
    sb.append("    campaignFormMetas: ").append(toIndentedString(campaignFormMetas)).append("\n");
    sb.append("    campaignDashboardElements: ").append(toIndentedString(campaignDashboardElements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
