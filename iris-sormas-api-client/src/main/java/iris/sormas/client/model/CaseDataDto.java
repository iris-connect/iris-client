/*
 * SORMAS REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.61.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package iris.sormas.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import iris.sormas.client.model.CaseClassification;
import iris.sormas.client.model.CaseIdentificationSource;
import iris.sormas.client.model.CaseOrigin;
import iris.sormas.client.model.CaseOutcome;
import iris.sormas.client.model.ClinicalCourseDto;
import iris.sormas.client.model.CommunityReferenceDto;
import iris.sormas.client.model.ContactTracingContactType;
import iris.sormas.client.model.DengueFeverType;
import iris.sormas.client.model.Disease;
import iris.sormas.client.model.DiseaseVariant;
import iris.sormas.client.model.DistrictReferenceDto;
import iris.sormas.client.model.EndOfIsolationReason;
import iris.sormas.client.model.EpiDataDto;
import iris.sormas.client.model.FacilityReferenceDto;
import iris.sormas.client.model.FacilityType;
import iris.sormas.client.model.FollowUpStatus;
import iris.sormas.client.model.HospitalWardType;
import iris.sormas.client.model.HospitalizationDto;
import iris.sormas.client.model.InfectionSetting;
import iris.sormas.client.model.InvestigationStatus;
import iris.sormas.client.model.MaternalHistoryDto;
import iris.sormas.client.model.PersonReferenceDto;
import iris.sormas.client.model.PlagueType;
import iris.sormas.client.model.PointOfEntryReferenceDto;
import iris.sormas.client.model.PortHealthInfoDto;
import iris.sormas.client.model.QuarantineReason;
import iris.sormas.client.model.QuarantineType;
import iris.sormas.client.model.RabiesType;
import iris.sormas.client.model.RegionReferenceDto;
import iris.sormas.client.model.ScreeningType;
import iris.sormas.client.model.SormasToSormasOriginInfoDto;
import iris.sormas.client.model.SymptomsDto;
import iris.sormas.client.model.TherapyDto;
import iris.sormas.client.model.Trimester;
import iris.sormas.client.model.UserReferenceDto;
import iris.sormas.client.model.Vaccination;
import iris.sormas.client.model.VaccinationInfoSource;
import iris.sormas.client.model.Vaccine;
import iris.sormas.client.model.VaccineManufacturer;
import iris.sormas.client.model.YesNoUnknown;
import java.time.OffsetDateTime;
import java.time.Instant;
/**
 * CaseDataDto
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-08T06:53:38.737461+02:00[Europe/Berlin]")
public class CaseDataDto {
  @JsonProperty("creationDate")
  private Instant creationDate = null;

  @JsonProperty("changeDate")
  private Instant changeDate = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("pseudonymized")
  private Boolean pseudonymized = null;

  @JsonProperty("disease")
  private Disease disease = null;

  @JsonProperty("diseaseVariant")
  private DiseaseVariant diseaseVariant = null;

  @JsonProperty("diseaseDetails")
  private String diseaseDetails = null;

  @JsonProperty("plagueType")
  private PlagueType plagueType = null;

  @JsonProperty("dengueFeverType")
  private DengueFeverType dengueFeverType = null;

  @JsonProperty("rabiesType")
  private RabiesType rabiesType = null;

  @JsonProperty("person")
  private PersonReferenceDto person = null;

  @JsonProperty("epidNumber")
  private String epidNumber = null;

  @JsonProperty("reportDate")
  private Instant reportDate = null;

  @JsonProperty("reportingUser")
  private UserReferenceDto reportingUser = null;

  @JsonProperty("regionLevelDate")
  private Instant regionLevelDate = null;

  @JsonProperty("nationalLevelDate")
  private Instant nationalLevelDate = null;

  @JsonProperty("districtLevelDate")
  private Instant districtLevelDate = null;

  @JsonProperty("caseClassification")
  private CaseClassification caseClassification = null;

  @JsonProperty("caseIdentificationSource")
  private CaseIdentificationSource caseIdentificationSource = null;

  @JsonProperty("screeningType")
  private ScreeningType screeningType = null;

  @JsonProperty("classificationUser")
  private UserReferenceDto classificationUser = null;

  @JsonProperty("classificationDate")
  private Instant classificationDate = null;

  @JsonProperty("classificationComment")
  private String classificationComment = null;

  @JsonProperty("clinicalConfirmation")
  private YesNoUnknown clinicalConfirmation = null;

  @JsonProperty("epidemiologicalConfirmation")
  private YesNoUnknown epidemiologicalConfirmation = null;

  @JsonProperty("laboratoryDiagnosticConfirmation")
  private YesNoUnknown laboratoryDiagnosticConfirmation = null;

  @JsonProperty("investigationStatus")
  private InvestigationStatus investigationStatus = null;

  @JsonProperty("investigatedDate")
  private Instant investigatedDate = null;

  @JsonProperty("outcome")
  private CaseOutcome outcome = null;

  @JsonProperty("outcomeDate")
  private Instant outcomeDate = null;

  @JsonProperty("sequelae")
  private YesNoUnknown sequelae = null;

  @JsonProperty("sequelaeDetails")
  private String sequelaeDetails = null;

  @JsonProperty("responsibleRegion")
  private RegionReferenceDto responsibleRegion = null;

  @JsonProperty("responsibleDistrict")
  private DistrictReferenceDto responsibleDistrict = null;

  @JsonProperty("responsibleCommunity")
  private CommunityReferenceDto responsibleCommunity = null;

  @JsonProperty("region")
  private RegionReferenceDto region = null;

  @JsonProperty("district")
  private DistrictReferenceDto district = null;

  @JsonProperty("community")
  private CommunityReferenceDto community = null;

  @JsonProperty("facilityType")
  private FacilityType facilityType = null;

  @JsonProperty("healthFacility")
  private FacilityReferenceDto healthFacility = null;

  @JsonProperty("healthFacilityDetails")
  private String healthFacilityDetails = null;

  @JsonProperty("pregnant")
  private YesNoUnknown pregnant = null;

  @JsonProperty("vaccination")
  private Vaccination vaccination = null;

  @JsonProperty("vaccinationDoses")
  private String vaccinationDoses = null;

  @JsonProperty("firstVaccinationDate")
  private Instant firstVaccinationDate = null;

  @JsonProperty("lastVaccinationDate")
  private Instant lastVaccinationDate = null;

  @JsonProperty("vaccinationInfoSource")
  private VaccinationInfoSource vaccinationInfoSource = null;

  @JsonProperty("vaccineName")
  private Vaccine vaccineName = null;

  @JsonProperty("otherVaccineName")
  private String otherVaccineName = null;

  @JsonProperty("vaccineManufacturer")
  private VaccineManufacturer vaccineManufacturer = null;

  @JsonProperty("otherVaccineManufacturer")
  private String otherVaccineManufacturer = null;

  @JsonProperty("vaccineInn")
  private String vaccineInn = null;

  @JsonProperty("vaccineBatchNumber")
  private String vaccineBatchNumber = null;

  @JsonProperty("vaccineUniiCode")
  private String vaccineUniiCode = null;

  @JsonProperty("vaccineAtcCode")
  private String vaccineAtcCode = null;

  @JsonProperty("vaccine")
  private String vaccine = null;

  @JsonProperty("smallpoxVaccinationScar")
  private YesNoUnknown smallpoxVaccinationScar = null;

  @JsonProperty("smallpoxVaccinationReceived")
  private YesNoUnknown smallpoxVaccinationReceived = null;

  @JsonProperty("surveillanceOfficer")
  private UserReferenceDto surveillanceOfficer = null;

  @JsonProperty("clinicianName")
  private String clinicianName = null;

  @JsonProperty("clinicianPhone")
  private String clinicianPhone = null;

  @JsonProperty("clinicianEmail")
  private String clinicianEmail = null;

  @JsonProperty("notifyingClinic")
  private HospitalWardType notifyingClinic = null;

  @JsonProperty("notifyingClinicDetails")
  private String notifyingClinicDetails = null;

  @JsonProperty("caseOfficer")
  private UserReferenceDto caseOfficer = null;

  @JsonProperty("reportLat")
  private Double reportLat = null;

  @JsonProperty("reportLon")
  private Double reportLon = null;

  @JsonProperty("reportLatLonAccuracy")
  private Float reportLatLonAccuracy = null;

  @JsonProperty("hospitalization")
  private HospitalizationDto hospitalization = null;

  @JsonProperty("symptoms")
  private SymptomsDto symptoms = null;

  @JsonProperty("epiData")
  private EpiDataDto epiData = null;

  @JsonProperty("therapy")
  private TherapyDto therapy = null;

  @JsonProperty("clinicalCourse")
  private ClinicalCourseDto clinicalCourse = null;

  @JsonProperty("maternalHistory")
  private MaternalHistoryDto maternalHistory = null;

  @JsonProperty("creationVersion")
  private String creationVersion = null;

  @JsonProperty("portHealthInfo")
  private PortHealthInfoDto portHealthInfo = null;

  @JsonProperty("caseOrigin")
  private CaseOrigin caseOrigin = null;

  @JsonProperty("pointOfEntry")
  private PointOfEntryReferenceDto pointOfEntry = null;

  @JsonProperty("pointOfEntryDetails")
  private String pointOfEntryDetails = null;

  @JsonProperty("additionalDetails")
  private String additionalDetails = null;

  @JsonProperty("externalID")
  private String externalID = null;

  @JsonProperty("externalToken")
  private String externalToken = null;

  @JsonProperty("sharedToCountry")
  private Boolean sharedToCountry = null;

  @JsonProperty("nosocomialOutbreak")
  private Boolean nosocomialOutbreak = null;

  @JsonProperty("infectionSetting")
  private InfectionSetting infectionSetting = null;

  @JsonProperty("quarantine")
  private QuarantineType quarantine = null;

  @JsonProperty("quarantineTypeDetails")
  private String quarantineTypeDetails = null;

  @JsonProperty("quarantineFrom")
  private Instant quarantineFrom = null;

  @JsonProperty("quarantineTo")
  private Instant quarantineTo = null;

  @JsonProperty("quarantineHelpNeeded")
  private String quarantineHelpNeeded = null;

  @JsonProperty("quarantineOrderedVerbally")
  private Boolean quarantineOrderedVerbally = null;

  @JsonProperty("quarantineOrderedOfficialDocument")
  private Boolean quarantineOrderedOfficialDocument = null;

  @JsonProperty("quarantineOrderedVerballyDate")
  private Instant quarantineOrderedVerballyDate = null;

  @JsonProperty("quarantineOrderedOfficialDocumentDate")
  private Instant quarantineOrderedOfficialDocumentDate = null;

  @JsonProperty("quarantineHomePossible")
  private YesNoUnknown quarantineHomePossible = null;

  @JsonProperty("quarantineHomePossibleComment")
  private String quarantineHomePossibleComment = null;

  @JsonProperty("quarantineHomeSupplyEnsured")
  private YesNoUnknown quarantineHomeSupplyEnsured = null;

  @JsonProperty("quarantineHomeSupplyEnsuredComment")
  private String quarantineHomeSupplyEnsuredComment = null;

  @JsonProperty("quarantineExtended")
  private Boolean quarantineExtended = null;

  @JsonProperty("quarantineReduced")
  private Boolean quarantineReduced = null;

  @JsonProperty("quarantineOfficialOrderSent")
  private Boolean quarantineOfficialOrderSent = null;

  @JsonProperty("quarantineOfficialOrderSentDate")
  private Instant quarantineOfficialOrderSentDate = null;

  @JsonProperty("postpartum")
  private YesNoUnknown postpartum = null;

  @JsonProperty("trimester")
  private Trimester trimester = null;

  @JsonProperty("followUpStatus")
  private FollowUpStatus followUpStatus = null;

  @JsonProperty("followUpComment")
  private String followUpComment = null;

  @JsonProperty("followUpUntil")
  private Instant followUpUntil = null;

  @JsonProperty("overwriteFollowUpUntil")
  private Boolean overwriteFollowUpUntil = null;

  @JsonProperty("sormasToSormasOriginInfo")
  private SormasToSormasOriginInfoDto sormasToSormasOriginInfo = null;

  @JsonProperty("ownershipHandedOver")
  private Boolean ownershipHandedOver = null;

  @JsonProperty("caseIdIsm")
  private Integer caseIdIsm = null;

  @JsonProperty("contactTracingFirstContactType")
  private ContactTracingContactType contactTracingFirstContactType = null;

  @JsonProperty("contactTracingFirstContactDate")
  private Instant contactTracingFirstContactDate = null;

  @JsonProperty("wasInQuarantineBeforeIsolation")
  private YesNoUnknown wasInQuarantineBeforeIsolation = null;

  @JsonProperty("quarantineReasonBeforeIsolation")
  private QuarantineReason quarantineReasonBeforeIsolation = null;

  @JsonProperty("quarantineReasonBeforeIsolationDetails")
  private String quarantineReasonBeforeIsolationDetails = null;

  @JsonProperty("endOfIsolationReason")
  private EndOfIsolationReason endOfIsolationReason = null;

  @JsonProperty("endOfIsolationReasonDetails")
  private String endOfIsolationReasonDetails = null;

  @JsonProperty("prohibitionToWork")
  private YesNoUnknown prohibitionToWork = null;

  @JsonProperty("prohibitionToWorkFrom")
  private Instant prohibitionToWorkFrom = null;

  @JsonProperty("prohibitionToWorkUntil")
  private Instant prohibitionToWorkUntil = null;

  @JsonProperty("reInfection")
  private YesNoUnknown reInfection = null;

  @JsonProperty("previousInfectionDate")
  private Instant previousInfectionDate = null;

  @JsonProperty("reportingDistrict")
  private DistrictReferenceDto reportingDistrict = null;

  @JsonProperty("bloodOrganOrTissueDonated")
  private YesNoUnknown bloodOrganOrTissueDonated = null;

  @JsonProperty("notACaseReasonNegativeTest")
  private Boolean notACaseReasonNegativeTest = null;

  @JsonProperty("notACaseReasonPhysicianInformation")
  private Boolean notACaseReasonPhysicianInformation = null;

  @JsonProperty("notACaseReasonDifferentPathogen")
  private Boolean notACaseReasonDifferentPathogen = null;

  @JsonProperty("notACaseReasonOther")
  private Boolean notACaseReasonOther = null;

  @JsonProperty("notACaseReasonDetails")
  private String notACaseReasonDetails = null;

  @JsonProperty("followUpStatusChangeDate")
  private Instant followUpStatusChangeDate = null;

  @JsonProperty("followUpStatusChangeUser")
  private UserReferenceDto followUpStatusChangeUser = null;

  public CaseDataDto creationDate(Instant creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @Schema(description = "")
  public Instant getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Instant creationDate) {
    this.creationDate = creationDate;
  }

  public CaseDataDto changeDate(Instant changeDate) {
    this.changeDate = changeDate;
    return this;
  }

   /**
   * Get changeDate
   * @return changeDate
  **/
  @Schema(description = "")
  public Instant getChangeDate() {
    return changeDate;
  }

  public void setChangeDate(Instant changeDate) {
    this.changeDate = changeDate;
  }

  public CaseDataDto uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public CaseDataDto pseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
    return this;
  }

   /**
   * Get pseudonymized
   * @return pseudonymized
  **/
  @Schema(description = "")
  public Boolean isPseudonymized() {
    return pseudonymized;
  }

  public void setPseudonymized(Boolean pseudonymized) {
    this.pseudonymized = pseudonymized;
  }

  public CaseDataDto disease(Disease disease) {
    this.disease = disease;
    return this;
  }

   /**
   * Get disease
   * @return disease
  **/
  @Schema(required = true, description = "")
  public Disease getDisease() {
    return disease;
  }

  public void setDisease(Disease disease) {
    this.disease = disease;
  }

  public CaseDataDto diseaseVariant(DiseaseVariant diseaseVariant) {
    this.diseaseVariant = diseaseVariant;
    return this;
  }

   /**
   * Get diseaseVariant
   * @return diseaseVariant
  **/
  @Schema(description = "")
  public DiseaseVariant getDiseaseVariant() {
    return diseaseVariant;
  }

  public void setDiseaseVariant(DiseaseVariant diseaseVariant) {
    this.diseaseVariant = diseaseVariant;
  }

  public CaseDataDto diseaseDetails(String diseaseDetails) {
    this.diseaseDetails = diseaseDetails;
    return this;
  }

   /**
   * Get diseaseDetails
   * @return diseaseDetails
  **/
  @Schema(description = "")
  public String getDiseaseDetails() {
    return diseaseDetails;
  }

  public void setDiseaseDetails(String diseaseDetails) {
    this.diseaseDetails = diseaseDetails;
  }

  public CaseDataDto plagueType(PlagueType plagueType) {
    this.plagueType = plagueType;
    return this;
  }

   /**
   * Get plagueType
   * @return plagueType
  **/
  @Schema(description = "")
  public PlagueType getPlagueType() {
    return plagueType;
  }

  public void setPlagueType(PlagueType plagueType) {
    this.plagueType = plagueType;
  }

  public CaseDataDto dengueFeverType(DengueFeverType dengueFeverType) {
    this.dengueFeverType = dengueFeverType;
    return this;
  }

   /**
   * Get dengueFeverType
   * @return dengueFeverType
  **/
  @Schema(description = "")
  public DengueFeverType getDengueFeverType() {
    return dengueFeverType;
  }

  public void setDengueFeverType(DengueFeverType dengueFeverType) {
    this.dengueFeverType = dengueFeverType;
  }

  public CaseDataDto rabiesType(RabiesType rabiesType) {
    this.rabiesType = rabiesType;
    return this;
  }

   /**
   * Get rabiesType
   * @return rabiesType
  **/
  @Schema(description = "")
  public RabiesType getRabiesType() {
    return rabiesType;
  }

  public void setRabiesType(RabiesType rabiesType) {
    this.rabiesType = rabiesType;
  }

  public CaseDataDto person(PersonReferenceDto person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @Schema(required = true, description = "")
  public PersonReferenceDto getPerson() {
    return person;
  }

  public void setPerson(PersonReferenceDto person) {
    this.person = person;
  }

  public CaseDataDto epidNumber(String epidNumber) {
    this.epidNumber = epidNumber;
    return this;
  }

   /**
   * Get epidNumber
   * @return epidNumber
  **/
  @Schema(description = "")
  public String getEpidNumber() {
    return epidNumber;
  }

  public void setEpidNumber(String epidNumber) {
    this.epidNumber = epidNumber;
  }

  public CaseDataDto reportDate(Instant reportDate) {
    this.reportDate = reportDate;
    return this;
  }

   /**
   * Get reportDate
   * @return reportDate
  **/
  @Schema(required = true, description = "")
  public Instant getReportDate() {
    return reportDate;
  }

  public void setReportDate(Instant reportDate) {
    this.reportDate = reportDate;
  }

  public CaseDataDto reportingUser(UserReferenceDto reportingUser) {
    this.reportingUser = reportingUser;
    return this;
  }

   /**
   * Get reportingUser
   * @return reportingUser
  **/
  @Schema(required = true, description = "")
  public UserReferenceDto getReportingUser() {
    return reportingUser;
  }

  public void setReportingUser(UserReferenceDto reportingUser) {
    this.reportingUser = reportingUser;
  }

  public CaseDataDto regionLevelDate(Instant regionLevelDate) {
    this.regionLevelDate = regionLevelDate;
    return this;
  }

   /**
   * Get regionLevelDate
   * @return regionLevelDate
  **/
  @Schema(description = "")
  public Instant getRegionLevelDate() {
    return regionLevelDate;
  }

  public void setRegionLevelDate(Instant regionLevelDate) {
    this.regionLevelDate = regionLevelDate;
  }

  public CaseDataDto nationalLevelDate(Instant nationalLevelDate) {
    this.nationalLevelDate = nationalLevelDate;
    return this;
  }

   /**
   * Get nationalLevelDate
   * @return nationalLevelDate
  **/
  @Schema(description = "")
  public Instant getNationalLevelDate() {
    return nationalLevelDate;
  }

  public void setNationalLevelDate(Instant nationalLevelDate) {
    this.nationalLevelDate = nationalLevelDate;
  }

  public CaseDataDto districtLevelDate(Instant districtLevelDate) {
    this.districtLevelDate = districtLevelDate;
    return this;
  }

   /**
   * Get districtLevelDate
   * @return districtLevelDate
  **/
  @Schema(description = "")
  public Instant getDistrictLevelDate() {
    return districtLevelDate;
  }

  public void setDistrictLevelDate(Instant districtLevelDate) {
    this.districtLevelDate = districtLevelDate;
  }

  public CaseDataDto caseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
    return this;
  }

   /**
   * Get caseClassification
   * @return caseClassification
  **/
  @Schema(required = true, description = "")
  public CaseClassification getCaseClassification() {
    return caseClassification;
  }

  public void setCaseClassification(CaseClassification caseClassification) {
    this.caseClassification = caseClassification;
  }

  public CaseDataDto caseIdentificationSource(CaseIdentificationSource caseIdentificationSource) {
    this.caseIdentificationSource = caseIdentificationSource;
    return this;
  }

   /**
   * Get caseIdentificationSource
   * @return caseIdentificationSource
  **/
  @Schema(description = "")
  public CaseIdentificationSource getCaseIdentificationSource() {
    return caseIdentificationSource;
  }

  public void setCaseIdentificationSource(CaseIdentificationSource caseIdentificationSource) {
    this.caseIdentificationSource = caseIdentificationSource;
  }

  public CaseDataDto screeningType(ScreeningType screeningType) {
    this.screeningType = screeningType;
    return this;
  }

   /**
   * Get screeningType
   * @return screeningType
  **/
  @Schema(description = "")
  public ScreeningType getScreeningType() {
    return screeningType;
  }

  public void setScreeningType(ScreeningType screeningType) {
    this.screeningType = screeningType;
  }

  public CaseDataDto classificationUser(UserReferenceDto classificationUser) {
    this.classificationUser = classificationUser;
    return this;
  }

   /**
   * Get classificationUser
   * @return classificationUser
  **/
  @Schema(description = "")
  public UserReferenceDto getClassificationUser() {
    return classificationUser;
  }

  public void setClassificationUser(UserReferenceDto classificationUser) {
    this.classificationUser = classificationUser;
  }

  public CaseDataDto classificationDate(Instant classificationDate) {
    this.classificationDate = classificationDate;
    return this;
  }

   /**
   * Get classificationDate
   * @return classificationDate
  **/
  @Schema(description = "")
  public Instant getClassificationDate() {
    return classificationDate;
  }

  public void setClassificationDate(Instant classificationDate) {
    this.classificationDate = classificationDate;
  }

  public CaseDataDto classificationComment(String classificationComment) {
    this.classificationComment = classificationComment;
    return this;
  }

   /**
   * Get classificationComment
   * @return classificationComment
  **/
  @Schema(description = "")
  public String getClassificationComment() {
    return classificationComment;
  }

  public void setClassificationComment(String classificationComment) {
    this.classificationComment = classificationComment;
  }

  public CaseDataDto clinicalConfirmation(YesNoUnknown clinicalConfirmation) {
    this.clinicalConfirmation = clinicalConfirmation;
    return this;
  }

   /**
   * Get clinicalConfirmation
   * @return clinicalConfirmation
  **/
  @Schema(description = "")
  public YesNoUnknown getClinicalConfirmation() {
    return clinicalConfirmation;
  }

  public void setClinicalConfirmation(YesNoUnknown clinicalConfirmation) {
    this.clinicalConfirmation = clinicalConfirmation;
  }

  public CaseDataDto epidemiologicalConfirmation(YesNoUnknown epidemiologicalConfirmation) {
    this.epidemiologicalConfirmation = epidemiologicalConfirmation;
    return this;
  }

   /**
   * Get epidemiologicalConfirmation
   * @return epidemiologicalConfirmation
  **/
  @Schema(description = "")
  public YesNoUnknown getEpidemiologicalConfirmation() {
    return epidemiologicalConfirmation;
  }

  public void setEpidemiologicalConfirmation(YesNoUnknown epidemiologicalConfirmation) {
    this.epidemiologicalConfirmation = epidemiologicalConfirmation;
  }

  public CaseDataDto laboratoryDiagnosticConfirmation(YesNoUnknown laboratoryDiagnosticConfirmation) {
    this.laboratoryDiagnosticConfirmation = laboratoryDiagnosticConfirmation;
    return this;
  }

   /**
   * Get laboratoryDiagnosticConfirmation
   * @return laboratoryDiagnosticConfirmation
  **/
  @Schema(description = "")
  public YesNoUnknown getLaboratoryDiagnosticConfirmation() {
    return laboratoryDiagnosticConfirmation;
  }

  public void setLaboratoryDiagnosticConfirmation(YesNoUnknown laboratoryDiagnosticConfirmation) {
    this.laboratoryDiagnosticConfirmation = laboratoryDiagnosticConfirmation;
  }

  public CaseDataDto investigationStatus(InvestigationStatus investigationStatus) {
    this.investigationStatus = investigationStatus;
    return this;
  }

   /**
   * Get investigationStatus
   * @return investigationStatus
  **/
  @Schema(required = true, description = "")
  public InvestigationStatus getInvestigationStatus() {
    return investigationStatus;
  }

  public void setInvestigationStatus(InvestigationStatus investigationStatus) {
    this.investigationStatus = investigationStatus;
  }

  public CaseDataDto investigatedDate(Instant investigatedDate) {
    this.investigatedDate = investigatedDate;
    return this;
  }

   /**
   * Get investigatedDate
   * @return investigatedDate
  **/
  @Schema(description = "")
  public Instant getInvestigatedDate() {
    return investigatedDate;
  }

  public void setInvestigatedDate(Instant investigatedDate) {
    this.investigatedDate = investigatedDate;
  }

  public CaseDataDto outcome(CaseOutcome outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @Schema(description = "")
  public CaseOutcome getOutcome() {
    return outcome;
  }

  public void setOutcome(CaseOutcome outcome) {
    this.outcome = outcome;
  }

  public CaseDataDto outcomeDate(Instant outcomeDate) {
    this.outcomeDate = outcomeDate;
    return this;
  }

   /**
   * Get outcomeDate
   * @return outcomeDate
  **/
  @Schema(description = "")
  public Instant getOutcomeDate() {
    return outcomeDate;
  }

  public void setOutcomeDate(Instant outcomeDate) {
    this.outcomeDate = outcomeDate;
  }

  public CaseDataDto sequelae(YesNoUnknown sequelae) {
    this.sequelae = sequelae;
    return this;
  }

   /**
   * Get sequelae
   * @return sequelae
  **/
  @Schema(description = "")
  public YesNoUnknown getSequelae() {
    return sequelae;
  }

  public void setSequelae(YesNoUnknown sequelae) {
    this.sequelae = sequelae;
  }

  public CaseDataDto sequelaeDetails(String sequelaeDetails) {
    this.sequelaeDetails = sequelaeDetails;
    return this;
  }

   /**
   * Get sequelaeDetails
   * @return sequelaeDetails
  **/
  @Schema(description = "")
  public String getSequelaeDetails() {
    return sequelaeDetails;
  }

  public void setSequelaeDetails(String sequelaeDetails) {
    this.sequelaeDetails = sequelaeDetails;
  }

  public CaseDataDto responsibleRegion(RegionReferenceDto responsibleRegion) {
    this.responsibleRegion = responsibleRegion;
    return this;
  }

   /**
   * Get responsibleRegion
   * @return responsibleRegion
  **/
  @Schema(description = "")
  public RegionReferenceDto getResponsibleRegion() {
    return responsibleRegion;
  }

  public void setResponsibleRegion(RegionReferenceDto responsibleRegion) {
    this.responsibleRegion = responsibleRegion;
  }

  public CaseDataDto responsibleDistrict(DistrictReferenceDto responsibleDistrict) {
    this.responsibleDistrict = responsibleDistrict;
    return this;
  }

   /**
   * Get responsibleDistrict
   * @return responsibleDistrict
  **/
  @Schema(description = "")
  public DistrictReferenceDto getResponsibleDistrict() {
    return responsibleDistrict;
  }

  public void setResponsibleDistrict(DistrictReferenceDto responsibleDistrict) {
    this.responsibleDistrict = responsibleDistrict;
  }

  public CaseDataDto responsibleCommunity(CommunityReferenceDto responsibleCommunity) {
    this.responsibleCommunity = responsibleCommunity;
    return this;
  }

   /**
   * Get responsibleCommunity
   * @return responsibleCommunity
  **/
  @Schema(description = "")
  public CommunityReferenceDto getResponsibleCommunity() {
    return responsibleCommunity;
  }

  public void setResponsibleCommunity(CommunityReferenceDto responsibleCommunity) {
    this.responsibleCommunity = responsibleCommunity;
  }

  public CaseDataDto region(RegionReferenceDto region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(required = true, description = "")
  public RegionReferenceDto getRegion() {
    return region;
  }

  public void setRegion(RegionReferenceDto region) {
    this.region = region;
  }

  public CaseDataDto district(DistrictReferenceDto district) {
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @Schema(required = true, description = "")
  public DistrictReferenceDto getDistrict() {
    return district;
  }

  public void setDistrict(DistrictReferenceDto district) {
    this.district = district;
  }

  public CaseDataDto community(CommunityReferenceDto community) {
    this.community = community;
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @Schema(description = "")
  public CommunityReferenceDto getCommunity() {
    return community;
  }

  public void setCommunity(CommunityReferenceDto community) {
    this.community = community;
  }

  public CaseDataDto facilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
    return this;
  }

   /**
   * Get facilityType
   * @return facilityType
  **/
  @Schema(description = "")
  public FacilityType getFacilityType() {
    return facilityType;
  }

  public void setFacilityType(FacilityType facilityType) {
    this.facilityType = facilityType;
  }

  public CaseDataDto healthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
    return this;
  }

   /**
   * Get healthFacility
   * @return healthFacility
  **/
  @Schema(required = true, description = "")
  public FacilityReferenceDto getHealthFacility() {
    return healthFacility;
  }

  public void setHealthFacility(FacilityReferenceDto healthFacility) {
    this.healthFacility = healthFacility;
  }

  public CaseDataDto healthFacilityDetails(String healthFacilityDetails) {
    this.healthFacilityDetails = healthFacilityDetails;
    return this;
  }

   /**
   * Get healthFacilityDetails
   * @return healthFacilityDetails
  **/
  @Schema(description = "")
  public String getHealthFacilityDetails() {
    return healthFacilityDetails;
  }

  public void setHealthFacilityDetails(String healthFacilityDetails) {
    this.healthFacilityDetails = healthFacilityDetails;
  }

  public CaseDataDto pregnant(YesNoUnknown pregnant) {
    this.pregnant = pregnant;
    return this;
  }

   /**
   * Get pregnant
   * @return pregnant
  **/
  @Schema(description = "")
  public YesNoUnknown getPregnant() {
    return pregnant;
  }

  public void setPregnant(YesNoUnknown pregnant) {
    this.pregnant = pregnant;
  }

  public CaseDataDto vaccination(Vaccination vaccination) {
    this.vaccination = vaccination;
    return this;
  }

   /**
   * Get vaccination
   * @return vaccination
  **/
  @Schema(description = "")
  public Vaccination getVaccination() {
    return vaccination;
  }

  public void setVaccination(Vaccination vaccination) {
    this.vaccination = vaccination;
  }

  public CaseDataDto vaccinationDoses(String vaccinationDoses) {
    this.vaccinationDoses = vaccinationDoses;
    return this;
  }

   /**
   * Get vaccinationDoses
   * @return vaccinationDoses
  **/
  @Schema(description = "")
  public String getVaccinationDoses() {
    return vaccinationDoses;
  }

  public void setVaccinationDoses(String vaccinationDoses) {
    this.vaccinationDoses = vaccinationDoses;
  }

  public CaseDataDto firstVaccinationDate(Instant firstVaccinationDate) {
    this.firstVaccinationDate = firstVaccinationDate;
    return this;
  }

   /**
   * Get firstVaccinationDate
   * @return firstVaccinationDate
  **/
  @Schema(description = "")
  public Instant getFirstVaccinationDate() {
    return firstVaccinationDate;
  }

  public void setFirstVaccinationDate(Instant firstVaccinationDate) {
    this.firstVaccinationDate = firstVaccinationDate;
  }

  public CaseDataDto lastVaccinationDate(Instant lastVaccinationDate) {
    this.lastVaccinationDate = lastVaccinationDate;
    return this;
  }

   /**
   * Get lastVaccinationDate
   * @return lastVaccinationDate
  **/
  @Schema(description = "")
  public Instant getLastVaccinationDate() {
    return lastVaccinationDate;
  }

  public void setLastVaccinationDate(Instant lastVaccinationDate) {
    this.lastVaccinationDate = lastVaccinationDate;
  }

  public CaseDataDto vaccinationInfoSource(VaccinationInfoSource vaccinationInfoSource) {
    this.vaccinationInfoSource = vaccinationInfoSource;
    return this;
  }

   /**
   * Get vaccinationInfoSource
   * @return vaccinationInfoSource
  **/
  @Schema(description = "")
  public VaccinationInfoSource getVaccinationInfoSource() {
    return vaccinationInfoSource;
  }

  public void setVaccinationInfoSource(VaccinationInfoSource vaccinationInfoSource) {
    this.vaccinationInfoSource = vaccinationInfoSource;
  }

  public CaseDataDto vaccineName(Vaccine vaccineName) {
    this.vaccineName = vaccineName;
    return this;
  }

   /**
   * Get vaccineName
   * @return vaccineName
  **/
  @Schema(description = "")
  public Vaccine getVaccineName() {
    return vaccineName;
  }

  public void setVaccineName(Vaccine vaccineName) {
    this.vaccineName = vaccineName;
  }

  public CaseDataDto otherVaccineName(String otherVaccineName) {
    this.otherVaccineName = otherVaccineName;
    return this;
  }

   /**
   * Get otherVaccineName
   * @return otherVaccineName
  **/
  @Schema(description = "")
  public String getOtherVaccineName() {
    return otherVaccineName;
  }

  public void setOtherVaccineName(String otherVaccineName) {
    this.otherVaccineName = otherVaccineName;
  }

  public CaseDataDto vaccineManufacturer(VaccineManufacturer vaccineManufacturer) {
    this.vaccineManufacturer = vaccineManufacturer;
    return this;
  }

   /**
   * Get vaccineManufacturer
   * @return vaccineManufacturer
  **/
  @Schema(description = "")
  public VaccineManufacturer getVaccineManufacturer() {
    return vaccineManufacturer;
  }

  public void setVaccineManufacturer(VaccineManufacturer vaccineManufacturer) {
    this.vaccineManufacturer = vaccineManufacturer;
  }

  public CaseDataDto otherVaccineManufacturer(String otherVaccineManufacturer) {
    this.otherVaccineManufacturer = otherVaccineManufacturer;
    return this;
  }

   /**
   * Get otherVaccineManufacturer
   * @return otherVaccineManufacturer
  **/
  @Schema(description = "")
  public String getOtherVaccineManufacturer() {
    return otherVaccineManufacturer;
  }

  public void setOtherVaccineManufacturer(String otherVaccineManufacturer) {
    this.otherVaccineManufacturer = otherVaccineManufacturer;
  }

  public CaseDataDto vaccineInn(String vaccineInn) {
    this.vaccineInn = vaccineInn;
    return this;
  }

   /**
   * Get vaccineInn
   * @return vaccineInn
  **/
  @Schema(description = "")
  public String getVaccineInn() {
    return vaccineInn;
  }

  public void setVaccineInn(String vaccineInn) {
    this.vaccineInn = vaccineInn;
  }

  public CaseDataDto vaccineBatchNumber(String vaccineBatchNumber) {
    this.vaccineBatchNumber = vaccineBatchNumber;
    return this;
  }

   /**
   * Get vaccineBatchNumber
   * @return vaccineBatchNumber
  **/
  @Schema(description = "")
  public String getVaccineBatchNumber() {
    return vaccineBatchNumber;
  }

  public void setVaccineBatchNumber(String vaccineBatchNumber) {
    this.vaccineBatchNumber = vaccineBatchNumber;
  }

  public CaseDataDto vaccineUniiCode(String vaccineUniiCode) {
    this.vaccineUniiCode = vaccineUniiCode;
    return this;
  }

   /**
   * Get vaccineUniiCode
   * @return vaccineUniiCode
  **/
  @Schema(description = "")
  public String getVaccineUniiCode() {
    return vaccineUniiCode;
  }

  public void setVaccineUniiCode(String vaccineUniiCode) {
    this.vaccineUniiCode = vaccineUniiCode;
  }

  public CaseDataDto vaccineAtcCode(String vaccineAtcCode) {
    this.vaccineAtcCode = vaccineAtcCode;
    return this;
  }

   /**
   * Get vaccineAtcCode
   * @return vaccineAtcCode
  **/
  @Schema(description = "")
  public String getVaccineAtcCode() {
    return vaccineAtcCode;
  }

  public void setVaccineAtcCode(String vaccineAtcCode) {
    this.vaccineAtcCode = vaccineAtcCode;
  }

  public CaseDataDto vaccine(String vaccine) {
    this.vaccine = vaccine;
    return this;
  }

   /**
   * Get vaccine
   * @return vaccine
  **/
  @Schema(description = "")
  public String getVaccine() {
    return vaccine;
  }

  public void setVaccine(String vaccine) {
    this.vaccine = vaccine;
  }

  public CaseDataDto smallpoxVaccinationScar(YesNoUnknown smallpoxVaccinationScar) {
    this.smallpoxVaccinationScar = smallpoxVaccinationScar;
    return this;
  }

   /**
   * Get smallpoxVaccinationScar
   * @return smallpoxVaccinationScar
  **/
  @Schema(description = "")
  public YesNoUnknown getSmallpoxVaccinationScar() {
    return smallpoxVaccinationScar;
  }

  public void setSmallpoxVaccinationScar(YesNoUnknown smallpoxVaccinationScar) {
    this.smallpoxVaccinationScar = smallpoxVaccinationScar;
  }

  public CaseDataDto smallpoxVaccinationReceived(YesNoUnknown smallpoxVaccinationReceived) {
    this.smallpoxVaccinationReceived = smallpoxVaccinationReceived;
    return this;
  }

   /**
   * Get smallpoxVaccinationReceived
   * @return smallpoxVaccinationReceived
  **/
  @Schema(description = "")
  public YesNoUnknown getSmallpoxVaccinationReceived() {
    return smallpoxVaccinationReceived;
  }

  public void setSmallpoxVaccinationReceived(YesNoUnknown smallpoxVaccinationReceived) {
    this.smallpoxVaccinationReceived = smallpoxVaccinationReceived;
  }

  public CaseDataDto surveillanceOfficer(UserReferenceDto surveillanceOfficer) {
    this.surveillanceOfficer = surveillanceOfficer;
    return this;
  }

   /**
   * Get surveillanceOfficer
   * @return surveillanceOfficer
  **/
  @Schema(description = "")
  public UserReferenceDto getSurveillanceOfficer() {
    return surveillanceOfficer;
  }

  public void setSurveillanceOfficer(UserReferenceDto surveillanceOfficer) {
    this.surveillanceOfficer = surveillanceOfficer;
  }

  public CaseDataDto clinicianName(String clinicianName) {
    this.clinicianName = clinicianName;
    return this;
  }

   /**
   * Get clinicianName
   * @return clinicianName
  **/
  @Schema(description = "")
  public String getClinicianName() {
    return clinicianName;
  }

  public void setClinicianName(String clinicianName) {
    this.clinicianName = clinicianName;
  }

  public CaseDataDto clinicianPhone(String clinicianPhone) {
    this.clinicianPhone = clinicianPhone;
    return this;
  }

   /**
   * Get clinicianPhone
   * @return clinicianPhone
  **/
  @Schema(description = "")
  public String getClinicianPhone() {
    return clinicianPhone;
  }

  public void setClinicianPhone(String clinicianPhone) {
    this.clinicianPhone = clinicianPhone;
  }

  public CaseDataDto clinicianEmail(String clinicianEmail) {
    this.clinicianEmail = clinicianEmail;
    return this;
  }

   /**
   * Get clinicianEmail
   * @return clinicianEmail
  **/
  @Schema(description = "")
  public String getClinicianEmail() {
    return clinicianEmail;
  }

  public void setClinicianEmail(String clinicianEmail) {
    this.clinicianEmail = clinicianEmail;
  }

  public CaseDataDto notifyingClinic(HospitalWardType notifyingClinic) {
    this.notifyingClinic = notifyingClinic;
    return this;
  }

   /**
   * Get notifyingClinic
   * @return notifyingClinic
  **/
  @Schema(description = "")
  public HospitalWardType getNotifyingClinic() {
    return notifyingClinic;
  }

  public void setNotifyingClinic(HospitalWardType notifyingClinic) {
    this.notifyingClinic = notifyingClinic;
  }

  public CaseDataDto notifyingClinicDetails(String notifyingClinicDetails) {
    this.notifyingClinicDetails = notifyingClinicDetails;
    return this;
  }

   /**
   * Get notifyingClinicDetails
   * @return notifyingClinicDetails
  **/
  @Schema(description = "")
  public String getNotifyingClinicDetails() {
    return notifyingClinicDetails;
  }

  public void setNotifyingClinicDetails(String notifyingClinicDetails) {
    this.notifyingClinicDetails = notifyingClinicDetails;
  }

  public CaseDataDto caseOfficer(UserReferenceDto caseOfficer) {
    this.caseOfficer = caseOfficer;
    return this;
  }

   /**
   * Get caseOfficer
   * @return caseOfficer
  **/
  @Schema(description = "")
  public UserReferenceDto getCaseOfficer() {
    return caseOfficer;
  }

  public void setCaseOfficer(UserReferenceDto caseOfficer) {
    this.caseOfficer = caseOfficer;
  }

  public CaseDataDto reportLat(Double reportLat) {
    this.reportLat = reportLat;
    return this;
  }

   /**
   * Get reportLat
   * @return reportLat
  **/
  @Schema(description = "")
  public Double getReportLat() {
    return reportLat;
  }

  public void setReportLat(Double reportLat) {
    this.reportLat = reportLat;
  }

  public CaseDataDto reportLon(Double reportLon) {
    this.reportLon = reportLon;
    return this;
  }

   /**
   * Get reportLon
   * @return reportLon
  **/
  @Schema(description = "")
  public Double getReportLon() {
    return reportLon;
  }

  public void setReportLon(Double reportLon) {
    this.reportLon = reportLon;
  }

  public CaseDataDto reportLatLonAccuracy(Float reportLatLonAccuracy) {
    this.reportLatLonAccuracy = reportLatLonAccuracy;
    return this;
  }

   /**
   * Get reportLatLonAccuracy
   * @return reportLatLonAccuracy
  **/
  @Schema(description = "")
  public Float getReportLatLonAccuracy() {
    return reportLatLonAccuracy;
  }

  public void setReportLatLonAccuracy(Float reportLatLonAccuracy) {
    this.reportLatLonAccuracy = reportLatLonAccuracy;
  }

  public CaseDataDto hospitalization(HospitalizationDto hospitalization) {
    this.hospitalization = hospitalization;
    return this;
  }

   /**
   * Get hospitalization
   * @return hospitalization
  **/
  @Schema(description = "")
  public HospitalizationDto getHospitalization() {
    return hospitalization;
  }

  public void setHospitalization(HospitalizationDto hospitalization) {
    this.hospitalization = hospitalization;
  }

  public CaseDataDto symptoms(SymptomsDto symptoms) {
    this.symptoms = symptoms;
    return this;
  }

   /**
   * Get symptoms
   * @return symptoms
  **/
  @Schema(description = "")
  public SymptomsDto getSymptoms() {
    return symptoms;
  }

  public void setSymptoms(SymptomsDto symptoms) {
    this.symptoms = symptoms;
  }

  public CaseDataDto epiData(EpiDataDto epiData) {
    this.epiData = epiData;
    return this;
  }

   /**
   * Get epiData
   * @return epiData
  **/
  @Schema(description = "")
  public EpiDataDto getEpiData() {
    return epiData;
  }

  public void setEpiData(EpiDataDto epiData) {
    this.epiData = epiData;
  }

  public CaseDataDto therapy(TherapyDto therapy) {
    this.therapy = therapy;
    return this;
  }

   /**
   * Get therapy
   * @return therapy
  **/
  @Schema(description = "")
  public TherapyDto getTherapy() {
    return therapy;
  }

  public void setTherapy(TherapyDto therapy) {
    this.therapy = therapy;
  }

  public CaseDataDto clinicalCourse(ClinicalCourseDto clinicalCourse) {
    this.clinicalCourse = clinicalCourse;
    return this;
  }

   /**
   * Get clinicalCourse
   * @return clinicalCourse
  **/
  @Schema(description = "")
  public ClinicalCourseDto getClinicalCourse() {
    return clinicalCourse;
  }

  public void setClinicalCourse(ClinicalCourseDto clinicalCourse) {
    this.clinicalCourse = clinicalCourse;
  }

  public CaseDataDto maternalHistory(MaternalHistoryDto maternalHistory) {
    this.maternalHistory = maternalHistory;
    return this;
  }

   /**
   * Get maternalHistory
   * @return maternalHistory
  **/
  @Schema(description = "")
  public MaternalHistoryDto getMaternalHistory() {
    return maternalHistory;
  }

  public void setMaternalHistory(MaternalHistoryDto maternalHistory) {
    this.maternalHistory = maternalHistory;
  }

  public CaseDataDto creationVersion(String creationVersion) {
    this.creationVersion = creationVersion;
    return this;
  }

   /**
   * Get creationVersion
   * @return creationVersion
  **/
  @Schema(description = "")
  public String getCreationVersion() {
    return creationVersion;
  }

  public void setCreationVersion(String creationVersion) {
    this.creationVersion = creationVersion;
  }

  public CaseDataDto portHealthInfo(PortHealthInfoDto portHealthInfo) {
    this.portHealthInfo = portHealthInfo;
    return this;
  }

   /**
   * Get portHealthInfo
   * @return portHealthInfo
  **/
  @Schema(description = "")
  public PortHealthInfoDto getPortHealthInfo() {
    return portHealthInfo;
  }

  public void setPortHealthInfo(PortHealthInfoDto portHealthInfo) {
    this.portHealthInfo = portHealthInfo;
  }

  public CaseDataDto caseOrigin(CaseOrigin caseOrigin) {
    this.caseOrigin = caseOrigin;
    return this;
  }

   /**
   * Get caseOrigin
   * @return caseOrigin
  **/
  @Schema(description = "")
  public CaseOrigin getCaseOrigin() {
    return caseOrigin;
  }

  public void setCaseOrigin(CaseOrigin caseOrigin) {
    this.caseOrigin = caseOrigin;
  }

  public CaseDataDto pointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
    return this;
  }

   /**
   * Get pointOfEntry
   * @return pointOfEntry
  **/
  @Schema(description = "")
  public PointOfEntryReferenceDto getPointOfEntry() {
    return pointOfEntry;
  }

  public void setPointOfEntry(PointOfEntryReferenceDto pointOfEntry) {
    this.pointOfEntry = pointOfEntry;
  }

  public CaseDataDto pointOfEntryDetails(String pointOfEntryDetails) {
    this.pointOfEntryDetails = pointOfEntryDetails;
    return this;
  }

   /**
   * Get pointOfEntryDetails
   * @return pointOfEntryDetails
  **/
  @Schema(description = "")
  public String getPointOfEntryDetails() {
    return pointOfEntryDetails;
  }

  public void setPointOfEntryDetails(String pointOfEntryDetails) {
    this.pointOfEntryDetails = pointOfEntryDetails;
  }

  public CaseDataDto additionalDetails(String additionalDetails) {
    this.additionalDetails = additionalDetails;
    return this;
  }

   /**
   * Get additionalDetails
   * @return additionalDetails
  **/
  @Schema(description = "")
  public String getAdditionalDetails() {
    return additionalDetails;
  }

  public void setAdditionalDetails(String additionalDetails) {
    this.additionalDetails = additionalDetails;
  }

  public CaseDataDto externalID(String externalID) {
    this.externalID = externalID;
    return this;
  }

   /**
   * Get externalID
   * @return externalID
  **/
  @Schema(description = "")
  public String getExternalID() {
    return externalID;
  }

  public void setExternalID(String externalID) {
    this.externalID = externalID;
  }

  public CaseDataDto externalToken(String externalToken) {
    this.externalToken = externalToken;
    return this;
  }

   /**
   * Get externalToken
   * @return externalToken
  **/
  @Schema(description = "")
  public String getExternalToken() {
    return externalToken;
  }

  public void setExternalToken(String externalToken) {
    this.externalToken = externalToken;
  }

  public CaseDataDto sharedToCountry(Boolean sharedToCountry) {
    this.sharedToCountry = sharedToCountry;
    return this;
  }

   /**
   * Get sharedToCountry
   * @return sharedToCountry
  **/
  @Schema(description = "")
  public Boolean isSharedToCountry() {
    return sharedToCountry;
  }

  public void setSharedToCountry(Boolean sharedToCountry) {
    this.sharedToCountry = sharedToCountry;
  }

  public CaseDataDto nosocomialOutbreak(Boolean nosocomialOutbreak) {
    this.nosocomialOutbreak = nosocomialOutbreak;
    return this;
  }

   /**
   * Get nosocomialOutbreak
   * @return nosocomialOutbreak
  **/
  @Schema(description = "")
  public Boolean isNosocomialOutbreak() {
    return nosocomialOutbreak;
  }

  public void setNosocomialOutbreak(Boolean nosocomialOutbreak) {
    this.nosocomialOutbreak = nosocomialOutbreak;
  }

  public CaseDataDto infectionSetting(InfectionSetting infectionSetting) {
    this.infectionSetting = infectionSetting;
    return this;
  }

   /**
   * Get infectionSetting
   * @return infectionSetting
  **/
  @Schema(description = "")
  public InfectionSetting getInfectionSetting() {
    return infectionSetting;
  }

  public void setInfectionSetting(InfectionSetting infectionSetting) {
    this.infectionSetting = infectionSetting;
  }

  public CaseDataDto quarantine(QuarantineType quarantine) {
    this.quarantine = quarantine;
    return this;
  }

   /**
   * Get quarantine
   * @return quarantine
  **/
  @Schema(description = "")
  public QuarantineType getQuarantine() {
    return quarantine;
  }

  public void setQuarantine(QuarantineType quarantine) {
    this.quarantine = quarantine;
  }

  public CaseDataDto quarantineTypeDetails(String quarantineTypeDetails) {
    this.quarantineTypeDetails = quarantineTypeDetails;
    return this;
  }

   /**
   * Get quarantineTypeDetails
   * @return quarantineTypeDetails
  **/
  @Schema(description = "")
  public String getQuarantineTypeDetails() {
    return quarantineTypeDetails;
  }

  public void setQuarantineTypeDetails(String quarantineTypeDetails) {
    this.quarantineTypeDetails = quarantineTypeDetails;
  }

  public CaseDataDto quarantineFrom(Instant quarantineFrom) {
    this.quarantineFrom = quarantineFrom;
    return this;
  }

   /**
   * Get quarantineFrom
   * @return quarantineFrom
  **/
  @Schema(description = "")
  public Instant getQuarantineFrom() {
    return quarantineFrom;
  }

  public void setQuarantineFrom(Instant quarantineFrom) {
    this.quarantineFrom = quarantineFrom;
  }

  public CaseDataDto quarantineTo(Instant quarantineTo) {
    this.quarantineTo = quarantineTo;
    return this;
  }

   /**
   * Get quarantineTo
   * @return quarantineTo
  **/
  @Schema(description = "")
  public Instant getQuarantineTo() {
    return quarantineTo;
  }

  public void setQuarantineTo(Instant quarantineTo) {
    this.quarantineTo = quarantineTo;
  }

  public CaseDataDto quarantineHelpNeeded(String quarantineHelpNeeded) {
    this.quarantineHelpNeeded = quarantineHelpNeeded;
    return this;
  }

   /**
   * Get quarantineHelpNeeded
   * @return quarantineHelpNeeded
  **/
  @Schema(description = "")
  public String getQuarantineHelpNeeded() {
    return quarantineHelpNeeded;
  }

  public void setQuarantineHelpNeeded(String quarantineHelpNeeded) {
    this.quarantineHelpNeeded = quarantineHelpNeeded;
  }

  public CaseDataDto quarantineOrderedVerbally(Boolean quarantineOrderedVerbally) {
    this.quarantineOrderedVerbally = quarantineOrderedVerbally;
    return this;
  }

   /**
   * Get quarantineOrderedVerbally
   * @return quarantineOrderedVerbally
  **/
  @Schema(description = "")
  public Boolean isQuarantineOrderedVerbally() {
    return quarantineOrderedVerbally;
  }

  public void setQuarantineOrderedVerbally(Boolean quarantineOrderedVerbally) {
    this.quarantineOrderedVerbally = quarantineOrderedVerbally;
  }

  public CaseDataDto quarantineOrderedOfficialDocument(Boolean quarantineOrderedOfficialDocument) {
    this.quarantineOrderedOfficialDocument = quarantineOrderedOfficialDocument;
    return this;
  }

   /**
   * Get quarantineOrderedOfficialDocument
   * @return quarantineOrderedOfficialDocument
  **/
  @Schema(description = "")
  public Boolean isQuarantineOrderedOfficialDocument() {
    return quarantineOrderedOfficialDocument;
  }

  public void setQuarantineOrderedOfficialDocument(Boolean quarantineOrderedOfficialDocument) {
    this.quarantineOrderedOfficialDocument = quarantineOrderedOfficialDocument;
  }

  public CaseDataDto quarantineOrderedVerballyDate(Instant quarantineOrderedVerballyDate) {
    this.quarantineOrderedVerballyDate = quarantineOrderedVerballyDate;
    return this;
  }

   /**
   * Get quarantineOrderedVerballyDate
   * @return quarantineOrderedVerballyDate
  **/
  @Schema(description = "")
  public Instant getQuarantineOrderedVerballyDate() {
    return quarantineOrderedVerballyDate;
  }

  public void setQuarantineOrderedVerballyDate(Instant quarantineOrderedVerballyDate) {
    this.quarantineOrderedVerballyDate = quarantineOrderedVerballyDate;
  }

  public CaseDataDto quarantineOrderedOfficialDocumentDate(Instant quarantineOrderedOfficialDocumentDate) {
    this.quarantineOrderedOfficialDocumentDate = quarantineOrderedOfficialDocumentDate;
    return this;
  }

   /**
   * Get quarantineOrderedOfficialDocumentDate
   * @return quarantineOrderedOfficialDocumentDate
  **/
  @Schema(description = "")
  public Instant getQuarantineOrderedOfficialDocumentDate() {
    return quarantineOrderedOfficialDocumentDate;
  }

  public void setQuarantineOrderedOfficialDocumentDate(Instant quarantineOrderedOfficialDocumentDate) {
    this.quarantineOrderedOfficialDocumentDate = quarantineOrderedOfficialDocumentDate;
  }

  public CaseDataDto quarantineHomePossible(YesNoUnknown quarantineHomePossible) {
    this.quarantineHomePossible = quarantineHomePossible;
    return this;
  }

   /**
   * Get quarantineHomePossible
   * @return quarantineHomePossible
  **/
  @Schema(description = "")
  public YesNoUnknown getQuarantineHomePossible() {
    return quarantineHomePossible;
  }

  public void setQuarantineHomePossible(YesNoUnknown quarantineHomePossible) {
    this.quarantineHomePossible = quarantineHomePossible;
  }

  public CaseDataDto quarantineHomePossibleComment(String quarantineHomePossibleComment) {
    this.quarantineHomePossibleComment = quarantineHomePossibleComment;
    return this;
  }

   /**
   * Get quarantineHomePossibleComment
   * @return quarantineHomePossibleComment
  **/
  @Schema(description = "")
  public String getQuarantineHomePossibleComment() {
    return quarantineHomePossibleComment;
  }

  public void setQuarantineHomePossibleComment(String quarantineHomePossibleComment) {
    this.quarantineHomePossibleComment = quarantineHomePossibleComment;
  }

  public CaseDataDto quarantineHomeSupplyEnsured(YesNoUnknown quarantineHomeSupplyEnsured) {
    this.quarantineHomeSupplyEnsured = quarantineHomeSupplyEnsured;
    return this;
  }

   /**
   * Get quarantineHomeSupplyEnsured
   * @return quarantineHomeSupplyEnsured
  **/
  @Schema(description = "")
  public YesNoUnknown getQuarantineHomeSupplyEnsured() {
    return quarantineHomeSupplyEnsured;
  }

  public void setQuarantineHomeSupplyEnsured(YesNoUnknown quarantineHomeSupplyEnsured) {
    this.quarantineHomeSupplyEnsured = quarantineHomeSupplyEnsured;
  }

  public CaseDataDto quarantineHomeSupplyEnsuredComment(String quarantineHomeSupplyEnsuredComment) {
    this.quarantineHomeSupplyEnsuredComment = quarantineHomeSupplyEnsuredComment;
    return this;
  }

   /**
   * Get quarantineHomeSupplyEnsuredComment
   * @return quarantineHomeSupplyEnsuredComment
  **/
  @Schema(description = "")
  public String getQuarantineHomeSupplyEnsuredComment() {
    return quarantineHomeSupplyEnsuredComment;
  }

  public void setQuarantineHomeSupplyEnsuredComment(String quarantineHomeSupplyEnsuredComment) {
    this.quarantineHomeSupplyEnsuredComment = quarantineHomeSupplyEnsuredComment;
  }

  public CaseDataDto quarantineExtended(Boolean quarantineExtended) {
    this.quarantineExtended = quarantineExtended;
    return this;
  }

   /**
   * Get quarantineExtended
   * @return quarantineExtended
  **/
  @Schema(description = "")
  public Boolean isQuarantineExtended() {
    return quarantineExtended;
  }

  public void setQuarantineExtended(Boolean quarantineExtended) {
    this.quarantineExtended = quarantineExtended;
  }

  public CaseDataDto quarantineReduced(Boolean quarantineReduced) {
    this.quarantineReduced = quarantineReduced;
    return this;
  }

   /**
   * Get quarantineReduced
   * @return quarantineReduced
  **/
  @Schema(description = "")
  public Boolean isQuarantineReduced() {
    return quarantineReduced;
  }

  public void setQuarantineReduced(Boolean quarantineReduced) {
    this.quarantineReduced = quarantineReduced;
  }

  public CaseDataDto quarantineOfficialOrderSent(Boolean quarantineOfficialOrderSent) {
    this.quarantineOfficialOrderSent = quarantineOfficialOrderSent;
    return this;
  }

   /**
   * Get quarantineOfficialOrderSent
   * @return quarantineOfficialOrderSent
  **/
  @Schema(description = "")
  public Boolean isQuarantineOfficialOrderSent() {
    return quarantineOfficialOrderSent;
  }

  public void setQuarantineOfficialOrderSent(Boolean quarantineOfficialOrderSent) {
    this.quarantineOfficialOrderSent = quarantineOfficialOrderSent;
  }

  public CaseDataDto quarantineOfficialOrderSentDate(Instant quarantineOfficialOrderSentDate) {
    this.quarantineOfficialOrderSentDate = quarantineOfficialOrderSentDate;
    return this;
  }

   /**
   * Get quarantineOfficialOrderSentDate
   * @return quarantineOfficialOrderSentDate
  **/
  @Schema(description = "")
  public Instant getQuarantineOfficialOrderSentDate() {
    return quarantineOfficialOrderSentDate;
  }

  public void setQuarantineOfficialOrderSentDate(Instant quarantineOfficialOrderSentDate) {
    this.quarantineOfficialOrderSentDate = quarantineOfficialOrderSentDate;
  }

  public CaseDataDto postpartum(YesNoUnknown postpartum) {
    this.postpartum = postpartum;
    return this;
  }

   /**
   * Get postpartum
   * @return postpartum
  **/
  @Schema(description = "")
  public YesNoUnknown getPostpartum() {
    return postpartum;
  }

  public void setPostpartum(YesNoUnknown postpartum) {
    this.postpartum = postpartum;
  }

  public CaseDataDto trimester(Trimester trimester) {
    this.trimester = trimester;
    return this;
  }

   /**
   * Get trimester
   * @return trimester
  **/
  @Schema(description = "")
  public Trimester getTrimester() {
    return trimester;
  }

  public void setTrimester(Trimester trimester) {
    this.trimester = trimester;
  }

  public CaseDataDto followUpStatus(FollowUpStatus followUpStatus) {
    this.followUpStatus = followUpStatus;
    return this;
  }

   /**
   * Get followUpStatus
   * @return followUpStatus
  **/
  @Schema(description = "")
  public FollowUpStatus getFollowUpStatus() {
    return followUpStatus;
  }

  public void setFollowUpStatus(FollowUpStatus followUpStatus) {
    this.followUpStatus = followUpStatus;
  }

  public CaseDataDto followUpComment(String followUpComment) {
    this.followUpComment = followUpComment;
    return this;
  }

   /**
   * Get followUpComment
   * @return followUpComment
  **/
  @Schema(description = "")
  public String getFollowUpComment() {
    return followUpComment;
  }

  public void setFollowUpComment(String followUpComment) {
    this.followUpComment = followUpComment;
  }

  public CaseDataDto followUpUntil(Instant followUpUntil) {
    this.followUpUntil = followUpUntil;
    return this;
  }

   /**
   * Get followUpUntil
   * @return followUpUntil
  **/
  @Schema(description = "")
  public Instant getFollowUpUntil() {
    return followUpUntil;
  }

  public void setFollowUpUntil(Instant followUpUntil) {
    this.followUpUntil = followUpUntil;
  }

  public CaseDataDto overwriteFollowUpUntil(Boolean overwriteFollowUpUntil) {
    this.overwriteFollowUpUntil = overwriteFollowUpUntil;
    return this;
  }

   /**
   * Get overwriteFollowUpUntil
   * @return overwriteFollowUpUntil
  **/
  @Schema(description = "")
  public Boolean isOverwriteFollowUpUntil() {
    return overwriteFollowUpUntil;
  }

  public void setOverwriteFollowUpUntil(Boolean overwriteFollowUpUntil) {
    this.overwriteFollowUpUntil = overwriteFollowUpUntil;
  }

  public CaseDataDto sormasToSormasOriginInfo(SormasToSormasOriginInfoDto sormasToSormasOriginInfo) {
    this.sormasToSormasOriginInfo = sormasToSormasOriginInfo;
    return this;
  }

   /**
   * Get sormasToSormasOriginInfo
   * @return sormasToSormasOriginInfo
  **/
  @Schema(description = "")
  public SormasToSormasOriginInfoDto getSormasToSormasOriginInfo() {
    return sormasToSormasOriginInfo;
  }

  public void setSormasToSormasOriginInfo(SormasToSormasOriginInfoDto sormasToSormasOriginInfo) {
    this.sormasToSormasOriginInfo = sormasToSormasOriginInfo;
  }

  public CaseDataDto ownershipHandedOver(Boolean ownershipHandedOver) {
    this.ownershipHandedOver = ownershipHandedOver;
    return this;
  }

   /**
   * Get ownershipHandedOver
   * @return ownershipHandedOver
  **/
  @Schema(description = "")
  public Boolean isOwnershipHandedOver() {
    return ownershipHandedOver;
  }

  public void setOwnershipHandedOver(Boolean ownershipHandedOver) {
    this.ownershipHandedOver = ownershipHandedOver;
  }

  public CaseDataDto caseIdIsm(Integer caseIdIsm) {
    this.caseIdIsm = caseIdIsm;
    return this;
  }

   /**
   * Get caseIdIsm
   * @return caseIdIsm
  **/
  @Schema(description = "")
  public Integer getCaseIdIsm() {
    return caseIdIsm;
  }

  public void setCaseIdIsm(Integer caseIdIsm) {
    this.caseIdIsm = caseIdIsm;
  }

  public CaseDataDto contactTracingFirstContactType(ContactTracingContactType contactTracingFirstContactType) {
    this.contactTracingFirstContactType = contactTracingFirstContactType;
    return this;
  }

   /**
   * Get contactTracingFirstContactType
   * @return contactTracingFirstContactType
  **/
  @Schema(description = "")
  public ContactTracingContactType getContactTracingFirstContactType() {
    return contactTracingFirstContactType;
  }

  public void setContactTracingFirstContactType(ContactTracingContactType contactTracingFirstContactType) {
    this.contactTracingFirstContactType = contactTracingFirstContactType;
  }

  public CaseDataDto contactTracingFirstContactDate(Instant contactTracingFirstContactDate) {
    this.contactTracingFirstContactDate = contactTracingFirstContactDate;
    return this;
  }

   /**
   * Get contactTracingFirstContactDate
   * @return contactTracingFirstContactDate
  **/
  @Schema(description = "")
  public Instant getContactTracingFirstContactDate() {
    return contactTracingFirstContactDate;
  }

  public void setContactTracingFirstContactDate(Instant contactTracingFirstContactDate) {
    this.contactTracingFirstContactDate = contactTracingFirstContactDate;
  }

  public CaseDataDto wasInQuarantineBeforeIsolation(YesNoUnknown wasInQuarantineBeforeIsolation) {
    this.wasInQuarantineBeforeIsolation = wasInQuarantineBeforeIsolation;
    return this;
  }

   /**
   * Get wasInQuarantineBeforeIsolation
   * @return wasInQuarantineBeforeIsolation
  **/
  @Schema(description = "")
  public YesNoUnknown getWasInQuarantineBeforeIsolation() {
    return wasInQuarantineBeforeIsolation;
  }

  public void setWasInQuarantineBeforeIsolation(YesNoUnknown wasInQuarantineBeforeIsolation) {
    this.wasInQuarantineBeforeIsolation = wasInQuarantineBeforeIsolation;
  }

  public CaseDataDto quarantineReasonBeforeIsolation(QuarantineReason quarantineReasonBeforeIsolation) {
    this.quarantineReasonBeforeIsolation = quarantineReasonBeforeIsolation;
    return this;
  }

   /**
   * Get quarantineReasonBeforeIsolation
   * @return quarantineReasonBeforeIsolation
  **/
  @Schema(description = "")
  public QuarantineReason getQuarantineReasonBeforeIsolation() {
    return quarantineReasonBeforeIsolation;
  }

  public void setQuarantineReasonBeforeIsolation(QuarantineReason quarantineReasonBeforeIsolation) {
    this.quarantineReasonBeforeIsolation = quarantineReasonBeforeIsolation;
  }

  public CaseDataDto quarantineReasonBeforeIsolationDetails(String quarantineReasonBeforeIsolationDetails) {
    this.quarantineReasonBeforeIsolationDetails = quarantineReasonBeforeIsolationDetails;
    return this;
  }

   /**
   * Get quarantineReasonBeforeIsolationDetails
   * @return quarantineReasonBeforeIsolationDetails
  **/
  @Schema(description = "")
  public String getQuarantineReasonBeforeIsolationDetails() {
    return quarantineReasonBeforeIsolationDetails;
  }

  public void setQuarantineReasonBeforeIsolationDetails(String quarantineReasonBeforeIsolationDetails) {
    this.quarantineReasonBeforeIsolationDetails = quarantineReasonBeforeIsolationDetails;
  }

  public CaseDataDto endOfIsolationReason(EndOfIsolationReason endOfIsolationReason) {
    this.endOfIsolationReason = endOfIsolationReason;
    return this;
  }

   /**
   * Get endOfIsolationReason
   * @return endOfIsolationReason
  **/
  @Schema(description = "")
  public EndOfIsolationReason getEndOfIsolationReason() {
    return endOfIsolationReason;
  }

  public void setEndOfIsolationReason(EndOfIsolationReason endOfIsolationReason) {
    this.endOfIsolationReason = endOfIsolationReason;
  }

  public CaseDataDto endOfIsolationReasonDetails(String endOfIsolationReasonDetails) {
    this.endOfIsolationReasonDetails = endOfIsolationReasonDetails;
    return this;
  }

   /**
   * Get endOfIsolationReasonDetails
   * @return endOfIsolationReasonDetails
  **/
  @Schema(description = "")
  public String getEndOfIsolationReasonDetails() {
    return endOfIsolationReasonDetails;
  }

  public void setEndOfIsolationReasonDetails(String endOfIsolationReasonDetails) {
    this.endOfIsolationReasonDetails = endOfIsolationReasonDetails;
  }

  public CaseDataDto prohibitionToWork(YesNoUnknown prohibitionToWork) {
    this.prohibitionToWork = prohibitionToWork;
    return this;
  }

   /**
   * Get prohibitionToWork
   * @return prohibitionToWork
  **/
  @Schema(description = "")
  public YesNoUnknown getProhibitionToWork() {
    return prohibitionToWork;
  }

  public void setProhibitionToWork(YesNoUnknown prohibitionToWork) {
    this.prohibitionToWork = prohibitionToWork;
  }

  public CaseDataDto prohibitionToWorkFrom(Instant prohibitionToWorkFrom) {
    this.prohibitionToWorkFrom = prohibitionToWorkFrom;
    return this;
  }

   /**
   * Get prohibitionToWorkFrom
   * @return prohibitionToWorkFrom
  **/
  @Schema(description = "")
  public Instant getProhibitionToWorkFrom() {
    return prohibitionToWorkFrom;
  }

  public void setProhibitionToWorkFrom(Instant prohibitionToWorkFrom) {
    this.prohibitionToWorkFrom = prohibitionToWorkFrom;
  }

  public CaseDataDto prohibitionToWorkUntil(Instant prohibitionToWorkUntil) {
    this.prohibitionToWorkUntil = prohibitionToWorkUntil;
    return this;
  }

   /**
   * Get prohibitionToWorkUntil
   * @return prohibitionToWorkUntil
  **/
  @Schema(description = "")
  public Instant getProhibitionToWorkUntil() {
    return prohibitionToWorkUntil;
  }

  public void setProhibitionToWorkUntil(Instant prohibitionToWorkUntil) {
    this.prohibitionToWorkUntil = prohibitionToWorkUntil;
  }

  public CaseDataDto reInfection(YesNoUnknown reInfection) {
    this.reInfection = reInfection;
    return this;
  }

   /**
   * Get reInfection
   * @return reInfection
  **/
  @Schema(description = "")
  public YesNoUnknown getReInfection() {
    return reInfection;
  }

  public void setReInfection(YesNoUnknown reInfection) {
    this.reInfection = reInfection;
  }

  public CaseDataDto previousInfectionDate(Instant previousInfectionDate) {
    this.previousInfectionDate = previousInfectionDate;
    return this;
  }

   /**
   * Get previousInfectionDate
   * @return previousInfectionDate
  **/
  @Schema(description = "")
  public Instant getPreviousInfectionDate() {
    return previousInfectionDate;
  }

  public void setPreviousInfectionDate(Instant previousInfectionDate) {
    this.previousInfectionDate = previousInfectionDate;
  }

  public CaseDataDto reportingDistrict(DistrictReferenceDto reportingDistrict) {
    this.reportingDistrict = reportingDistrict;
    return this;
  }

   /**
   * Get reportingDistrict
   * @return reportingDistrict
  **/
  @Schema(description = "")
  public DistrictReferenceDto getReportingDistrict() {
    return reportingDistrict;
  }

  public void setReportingDistrict(DistrictReferenceDto reportingDistrict) {
    this.reportingDistrict = reportingDistrict;
  }

  public CaseDataDto bloodOrganOrTissueDonated(YesNoUnknown bloodOrganOrTissueDonated) {
    this.bloodOrganOrTissueDonated = bloodOrganOrTissueDonated;
    return this;
  }

   /**
   * Get bloodOrganOrTissueDonated
   * @return bloodOrganOrTissueDonated
  **/
  @Schema(description = "")
  public YesNoUnknown getBloodOrganOrTissueDonated() {
    return bloodOrganOrTissueDonated;
  }

  public void setBloodOrganOrTissueDonated(YesNoUnknown bloodOrganOrTissueDonated) {
    this.bloodOrganOrTissueDonated = bloodOrganOrTissueDonated;
  }

  public CaseDataDto notACaseReasonNegativeTest(Boolean notACaseReasonNegativeTest) {
    this.notACaseReasonNegativeTest = notACaseReasonNegativeTest;
    return this;
  }

   /**
   * Get notACaseReasonNegativeTest
   * @return notACaseReasonNegativeTest
  **/
  @Schema(description = "")
  public Boolean isNotACaseReasonNegativeTest() {
    return notACaseReasonNegativeTest;
  }

  public void setNotACaseReasonNegativeTest(Boolean notACaseReasonNegativeTest) {
    this.notACaseReasonNegativeTest = notACaseReasonNegativeTest;
  }

  public CaseDataDto notACaseReasonPhysicianInformation(Boolean notACaseReasonPhysicianInformation) {
    this.notACaseReasonPhysicianInformation = notACaseReasonPhysicianInformation;
    return this;
  }

   /**
   * Get notACaseReasonPhysicianInformation
   * @return notACaseReasonPhysicianInformation
  **/
  @Schema(description = "")
  public Boolean isNotACaseReasonPhysicianInformation() {
    return notACaseReasonPhysicianInformation;
  }

  public void setNotACaseReasonPhysicianInformation(Boolean notACaseReasonPhysicianInformation) {
    this.notACaseReasonPhysicianInformation = notACaseReasonPhysicianInformation;
  }

  public CaseDataDto notACaseReasonDifferentPathogen(Boolean notACaseReasonDifferentPathogen) {
    this.notACaseReasonDifferentPathogen = notACaseReasonDifferentPathogen;
    return this;
  }

   /**
   * Get notACaseReasonDifferentPathogen
   * @return notACaseReasonDifferentPathogen
  **/
  @Schema(description = "")
  public Boolean isNotACaseReasonDifferentPathogen() {
    return notACaseReasonDifferentPathogen;
  }

  public void setNotACaseReasonDifferentPathogen(Boolean notACaseReasonDifferentPathogen) {
    this.notACaseReasonDifferentPathogen = notACaseReasonDifferentPathogen;
  }

  public CaseDataDto notACaseReasonOther(Boolean notACaseReasonOther) {
    this.notACaseReasonOther = notACaseReasonOther;
    return this;
  }

   /**
   * Get notACaseReasonOther
   * @return notACaseReasonOther
  **/
  @Schema(description = "")
  public Boolean isNotACaseReasonOther() {
    return notACaseReasonOther;
  }

  public void setNotACaseReasonOther(Boolean notACaseReasonOther) {
    this.notACaseReasonOther = notACaseReasonOther;
  }

  public CaseDataDto notACaseReasonDetails(String notACaseReasonDetails) {
    this.notACaseReasonDetails = notACaseReasonDetails;
    return this;
  }

   /**
   * Get notACaseReasonDetails
   * @return notACaseReasonDetails
  **/
  @Schema(description = "")
  public String getNotACaseReasonDetails() {
    return notACaseReasonDetails;
  }

  public void setNotACaseReasonDetails(String notACaseReasonDetails) {
    this.notACaseReasonDetails = notACaseReasonDetails;
  }

  public CaseDataDto followUpStatusChangeDate(Instant followUpStatusChangeDate) {
    this.followUpStatusChangeDate = followUpStatusChangeDate;
    return this;
  }

   /**
   * Get followUpStatusChangeDate
   * @return followUpStatusChangeDate
  **/
  @Schema(description = "")
  public Instant getFollowUpStatusChangeDate() {
    return followUpStatusChangeDate;
  }

  public void setFollowUpStatusChangeDate(Instant followUpStatusChangeDate) {
    this.followUpStatusChangeDate = followUpStatusChangeDate;
  }

  public CaseDataDto followUpStatusChangeUser(UserReferenceDto followUpStatusChangeUser) {
    this.followUpStatusChangeUser = followUpStatusChangeUser;
    return this;
  }

   /**
   * Get followUpStatusChangeUser
   * @return followUpStatusChangeUser
  **/
  @Schema(description = "")
  public UserReferenceDto getFollowUpStatusChangeUser() {
    return followUpStatusChangeUser;
  }

  public void setFollowUpStatusChangeUser(UserReferenceDto followUpStatusChangeUser) {
    this.followUpStatusChangeUser = followUpStatusChangeUser;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseDataDto caseDataDto = (CaseDataDto) o;
    return Objects.equals(this.creationDate, caseDataDto.creationDate) &&
        Objects.equals(this.changeDate, caseDataDto.changeDate) &&
        Objects.equals(this.uuid, caseDataDto.uuid) &&
        Objects.equals(this.pseudonymized, caseDataDto.pseudonymized) &&
        Objects.equals(this.disease, caseDataDto.disease) &&
        Objects.equals(this.diseaseVariant, caseDataDto.diseaseVariant) &&
        Objects.equals(this.diseaseDetails, caseDataDto.diseaseDetails) &&
        Objects.equals(this.plagueType, caseDataDto.plagueType) &&
        Objects.equals(this.dengueFeverType, caseDataDto.dengueFeverType) &&
        Objects.equals(this.rabiesType, caseDataDto.rabiesType) &&
        Objects.equals(this.person, caseDataDto.person) &&
        Objects.equals(this.epidNumber, caseDataDto.epidNumber) &&
        Objects.equals(this.reportDate, caseDataDto.reportDate) &&
        Objects.equals(this.reportingUser, caseDataDto.reportingUser) &&
        Objects.equals(this.regionLevelDate, caseDataDto.regionLevelDate) &&
        Objects.equals(this.nationalLevelDate, caseDataDto.nationalLevelDate) &&
        Objects.equals(this.districtLevelDate, caseDataDto.districtLevelDate) &&
        Objects.equals(this.caseClassification, caseDataDto.caseClassification) &&
        Objects.equals(this.caseIdentificationSource, caseDataDto.caseIdentificationSource) &&
        Objects.equals(this.screeningType, caseDataDto.screeningType) &&
        Objects.equals(this.classificationUser, caseDataDto.classificationUser) &&
        Objects.equals(this.classificationDate, caseDataDto.classificationDate) &&
        Objects.equals(this.classificationComment, caseDataDto.classificationComment) &&
        Objects.equals(this.clinicalConfirmation, caseDataDto.clinicalConfirmation) &&
        Objects.equals(this.epidemiologicalConfirmation, caseDataDto.epidemiologicalConfirmation) &&
        Objects.equals(this.laboratoryDiagnosticConfirmation, caseDataDto.laboratoryDiagnosticConfirmation) &&
        Objects.equals(this.investigationStatus, caseDataDto.investigationStatus) &&
        Objects.equals(this.investigatedDate, caseDataDto.investigatedDate) &&
        Objects.equals(this.outcome, caseDataDto.outcome) &&
        Objects.equals(this.outcomeDate, caseDataDto.outcomeDate) &&
        Objects.equals(this.sequelae, caseDataDto.sequelae) &&
        Objects.equals(this.sequelaeDetails, caseDataDto.sequelaeDetails) &&
        Objects.equals(this.responsibleRegion, caseDataDto.responsibleRegion) &&
        Objects.equals(this.responsibleDistrict, caseDataDto.responsibleDistrict) &&
        Objects.equals(this.responsibleCommunity, caseDataDto.responsibleCommunity) &&
        Objects.equals(this.region, caseDataDto.region) &&
        Objects.equals(this.district, caseDataDto.district) &&
        Objects.equals(this.community, caseDataDto.community) &&
        Objects.equals(this.facilityType, caseDataDto.facilityType) &&
        Objects.equals(this.healthFacility, caseDataDto.healthFacility) &&
        Objects.equals(this.healthFacilityDetails, caseDataDto.healthFacilityDetails) &&
        Objects.equals(this.pregnant, caseDataDto.pregnant) &&
        Objects.equals(this.vaccination, caseDataDto.vaccination) &&
        Objects.equals(this.vaccinationDoses, caseDataDto.vaccinationDoses) &&
        Objects.equals(this.firstVaccinationDate, caseDataDto.firstVaccinationDate) &&
        Objects.equals(this.lastVaccinationDate, caseDataDto.lastVaccinationDate) &&
        Objects.equals(this.vaccinationInfoSource, caseDataDto.vaccinationInfoSource) &&
        Objects.equals(this.vaccineName, caseDataDto.vaccineName) &&
        Objects.equals(this.otherVaccineName, caseDataDto.otherVaccineName) &&
        Objects.equals(this.vaccineManufacturer, caseDataDto.vaccineManufacturer) &&
        Objects.equals(this.otherVaccineManufacturer, caseDataDto.otherVaccineManufacturer) &&
        Objects.equals(this.vaccineInn, caseDataDto.vaccineInn) &&
        Objects.equals(this.vaccineBatchNumber, caseDataDto.vaccineBatchNumber) &&
        Objects.equals(this.vaccineUniiCode, caseDataDto.vaccineUniiCode) &&
        Objects.equals(this.vaccineAtcCode, caseDataDto.vaccineAtcCode) &&
        Objects.equals(this.vaccine, caseDataDto.vaccine) &&
        Objects.equals(this.smallpoxVaccinationScar, caseDataDto.smallpoxVaccinationScar) &&
        Objects.equals(this.smallpoxVaccinationReceived, caseDataDto.smallpoxVaccinationReceived) &&
        Objects.equals(this.surveillanceOfficer, caseDataDto.surveillanceOfficer) &&
        Objects.equals(this.clinicianName, caseDataDto.clinicianName) &&
        Objects.equals(this.clinicianPhone, caseDataDto.clinicianPhone) &&
        Objects.equals(this.clinicianEmail, caseDataDto.clinicianEmail) &&
        Objects.equals(this.notifyingClinic, caseDataDto.notifyingClinic) &&
        Objects.equals(this.notifyingClinicDetails, caseDataDto.notifyingClinicDetails) &&
        Objects.equals(this.caseOfficer, caseDataDto.caseOfficer) &&
        Objects.equals(this.reportLat, caseDataDto.reportLat) &&
        Objects.equals(this.reportLon, caseDataDto.reportLon) &&
        Objects.equals(this.reportLatLonAccuracy, caseDataDto.reportLatLonAccuracy) &&
        Objects.equals(this.hospitalization, caseDataDto.hospitalization) &&
        Objects.equals(this.symptoms, caseDataDto.symptoms) &&
        Objects.equals(this.epiData, caseDataDto.epiData) &&
        Objects.equals(this.therapy, caseDataDto.therapy) &&
        Objects.equals(this.clinicalCourse, caseDataDto.clinicalCourse) &&
        Objects.equals(this.maternalHistory, caseDataDto.maternalHistory) &&
        Objects.equals(this.creationVersion, caseDataDto.creationVersion) &&
        Objects.equals(this.portHealthInfo, caseDataDto.portHealthInfo) &&
        Objects.equals(this.caseOrigin, caseDataDto.caseOrigin) &&
        Objects.equals(this.pointOfEntry, caseDataDto.pointOfEntry) &&
        Objects.equals(this.pointOfEntryDetails, caseDataDto.pointOfEntryDetails) &&
        Objects.equals(this.additionalDetails, caseDataDto.additionalDetails) &&
        Objects.equals(this.externalID, caseDataDto.externalID) &&
        Objects.equals(this.externalToken, caseDataDto.externalToken) &&
        Objects.equals(this.sharedToCountry, caseDataDto.sharedToCountry) &&
        Objects.equals(this.nosocomialOutbreak, caseDataDto.nosocomialOutbreak) &&
        Objects.equals(this.infectionSetting, caseDataDto.infectionSetting) &&
        Objects.equals(this.quarantine, caseDataDto.quarantine) &&
        Objects.equals(this.quarantineTypeDetails, caseDataDto.quarantineTypeDetails) &&
        Objects.equals(this.quarantineFrom, caseDataDto.quarantineFrom) &&
        Objects.equals(this.quarantineTo, caseDataDto.quarantineTo) &&
        Objects.equals(this.quarantineHelpNeeded, caseDataDto.quarantineHelpNeeded) &&
        Objects.equals(this.quarantineOrderedVerbally, caseDataDto.quarantineOrderedVerbally) &&
        Objects.equals(this.quarantineOrderedOfficialDocument, caseDataDto.quarantineOrderedOfficialDocument) &&
        Objects.equals(this.quarantineOrderedVerballyDate, caseDataDto.quarantineOrderedVerballyDate) &&
        Objects.equals(this.quarantineOrderedOfficialDocumentDate, caseDataDto.quarantineOrderedOfficialDocumentDate) &&
        Objects.equals(this.quarantineHomePossible, caseDataDto.quarantineHomePossible) &&
        Objects.equals(this.quarantineHomePossibleComment, caseDataDto.quarantineHomePossibleComment) &&
        Objects.equals(this.quarantineHomeSupplyEnsured, caseDataDto.quarantineHomeSupplyEnsured) &&
        Objects.equals(this.quarantineHomeSupplyEnsuredComment, caseDataDto.quarantineHomeSupplyEnsuredComment) &&
        Objects.equals(this.quarantineExtended, caseDataDto.quarantineExtended) &&
        Objects.equals(this.quarantineReduced, caseDataDto.quarantineReduced) &&
        Objects.equals(this.quarantineOfficialOrderSent, caseDataDto.quarantineOfficialOrderSent) &&
        Objects.equals(this.quarantineOfficialOrderSentDate, caseDataDto.quarantineOfficialOrderSentDate) &&
        Objects.equals(this.postpartum, caseDataDto.postpartum) &&
        Objects.equals(this.trimester, caseDataDto.trimester) &&
        Objects.equals(this.followUpStatus, caseDataDto.followUpStatus) &&
        Objects.equals(this.followUpComment, caseDataDto.followUpComment) &&
        Objects.equals(this.followUpUntil, caseDataDto.followUpUntil) &&
        Objects.equals(this.overwriteFollowUpUntil, caseDataDto.overwriteFollowUpUntil) &&
        Objects.equals(this.sormasToSormasOriginInfo, caseDataDto.sormasToSormasOriginInfo) &&
        Objects.equals(this.ownershipHandedOver, caseDataDto.ownershipHandedOver) &&
        Objects.equals(this.caseIdIsm, caseDataDto.caseIdIsm) &&
        Objects.equals(this.contactTracingFirstContactType, caseDataDto.contactTracingFirstContactType) &&
        Objects.equals(this.contactTracingFirstContactDate, caseDataDto.contactTracingFirstContactDate) &&
        Objects.equals(this.wasInQuarantineBeforeIsolation, caseDataDto.wasInQuarantineBeforeIsolation) &&
        Objects.equals(this.quarantineReasonBeforeIsolation, caseDataDto.quarantineReasonBeforeIsolation) &&
        Objects.equals(this.quarantineReasonBeforeIsolationDetails, caseDataDto.quarantineReasonBeforeIsolationDetails) &&
        Objects.equals(this.endOfIsolationReason, caseDataDto.endOfIsolationReason) &&
        Objects.equals(this.endOfIsolationReasonDetails, caseDataDto.endOfIsolationReasonDetails) &&
        Objects.equals(this.prohibitionToWork, caseDataDto.prohibitionToWork) &&
        Objects.equals(this.prohibitionToWorkFrom, caseDataDto.prohibitionToWorkFrom) &&
        Objects.equals(this.prohibitionToWorkUntil, caseDataDto.prohibitionToWorkUntil) &&
        Objects.equals(this.reInfection, caseDataDto.reInfection) &&
        Objects.equals(this.previousInfectionDate, caseDataDto.previousInfectionDate) &&
        Objects.equals(this.reportingDistrict, caseDataDto.reportingDistrict) &&
        Objects.equals(this.bloodOrganOrTissueDonated, caseDataDto.bloodOrganOrTissueDonated) &&
        Objects.equals(this.notACaseReasonNegativeTest, caseDataDto.notACaseReasonNegativeTest) &&
        Objects.equals(this.notACaseReasonPhysicianInformation, caseDataDto.notACaseReasonPhysicianInformation) &&
        Objects.equals(this.notACaseReasonDifferentPathogen, caseDataDto.notACaseReasonDifferentPathogen) &&
        Objects.equals(this.notACaseReasonOther, caseDataDto.notACaseReasonOther) &&
        Objects.equals(this.notACaseReasonDetails, caseDataDto.notACaseReasonDetails) &&
        Objects.equals(this.followUpStatusChangeDate, caseDataDto.followUpStatusChangeDate) &&
        Objects.equals(this.followUpStatusChangeUser, caseDataDto.followUpStatusChangeUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationDate, changeDate, uuid, pseudonymized, disease, diseaseVariant, diseaseDetails, plagueType, dengueFeverType, rabiesType, person, epidNumber, reportDate, reportingUser, regionLevelDate, nationalLevelDate, districtLevelDate, caseClassification, caseIdentificationSource, screeningType, classificationUser, classificationDate, classificationComment, clinicalConfirmation, epidemiologicalConfirmation, laboratoryDiagnosticConfirmation, investigationStatus, investigatedDate, outcome, outcomeDate, sequelae, sequelaeDetails, responsibleRegion, responsibleDistrict, responsibleCommunity, region, district, community, facilityType, healthFacility, healthFacilityDetails, pregnant, vaccination, vaccinationDoses, firstVaccinationDate, lastVaccinationDate, vaccinationInfoSource, vaccineName, otherVaccineName, vaccineManufacturer, otherVaccineManufacturer, vaccineInn, vaccineBatchNumber, vaccineUniiCode, vaccineAtcCode, vaccine, smallpoxVaccinationScar, smallpoxVaccinationReceived, surveillanceOfficer, clinicianName, clinicianPhone, clinicianEmail, notifyingClinic, notifyingClinicDetails, caseOfficer, reportLat, reportLon, reportLatLonAccuracy, hospitalization, symptoms, epiData, therapy, clinicalCourse, maternalHistory, creationVersion, portHealthInfo, caseOrigin, pointOfEntry, pointOfEntryDetails, additionalDetails, externalID, externalToken, sharedToCountry, nosocomialOutbreak, infectionSetting, quarantine, quarantineTypeDetails, quarantineFrom, quarantineTo, quarantineHelpNeeded, quarantineOrderedVerbally, quarantineOrderedOfficialDocument, quarantineOrderedVerballyDate, quarantineOrderedOfficialDocumentDate, quarantineHomePossible, quarantineHomePossibleComment, quarantineHomeSupplyEnsured, quarantineHomeSupplyEnsuredComment, quarantineExtended, quarantineReduced, quarantineOfficialOrderSent, quarantineOfficialOrderSentDate, postpartum, trimester, followUpStatus, followUpComment, followUpUntil, overwriteFollowUpUntil, sormasToSormasOriginInfo, ownershipHandedOver, caseIdIsm, contactTracingFirstContactType, contactTracingFirstContactDate, wasInQuarantineBeforeIsolation, quarantineReasonBeforeIsolation, quarantineReasonBeforeIsolationDetails, endOfIsolationReason, endOfIsolationReasonDetails, prohibitionToWork, prohibitionToWorkFrom, prohibitionToWorkUntil, reInfection, previousInfectionDate, reportingDistrict, bloodOrganOrTissueDonated, notACaseReasonNegativeTest, notACaseReasonPhysicianInformation, notACaseReasonDifferentPathogen, notACaseReasonOther, notACaseReasonDetails, followUpStatusChangeDate, followUpStatusChangeUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseDataDto {\n");
    
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    changeDate: ").append(toIndentedString(changeDate)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    pseudonymized: ").append(toIndentedString(pseudonymized)).append("\n");
    sb.append("    disease: ").append(toIndentedString(disease)).append("\n");
    sb.append("    diseaseVariant: ").append(toIndentedString(diseaseVariant)).append("\n");
    sb.append("    diseaseDetails: ").append(toIndentedString(diseaseDetails)).append("\n");
    sb.append("    plagueType: ").append(toIndentedString(plagueType)).append("\n");
    sb.append("    dengueFeverType: ").append(toIndentedString(dengueFeverType)).append("\n");
    sb.append("    rabiesType: ").append(toIndentedString(rabiesType)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    epidNumber: ").append(toIndentedString(epidNumber)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    reportingUser: ").append(toIndentedString(reportingUser)).append("\n");
    sb.append("    regionLevelDate: ").append(toIndentedString(regionLevelDate)).append("\n");
    sb.append("    nationalLevelDate: ").append(toIndentedString(nationalLevelDate)).append("\n");
    sb.append("    districtLevelDate: ").append(toIndentedString(districtLevelDate)).append("\n");
    sb.append("    caseClassification: ").append(toIndentedString(caseClassification)).append("\n");
    sb.append("    caseIdentificationSource: ").append(toIndentedString(caseIdentificationSource)).append("\n");
    sb.append("    screeningType: ").append(toIndentedString(screeningType)).append("\n");
    sb.append("    classificationUser: ").append(toIndentedString(classificationUser)).append("\n");
    sb.append("    classificationDate: ").append(toIndentedString(classificationDate)).append("\n");
    sb.append("    classificationComment: ").append(toIndentedString(classificationComment)).append("\n");
    sb.append("    clinicalConfirmation: ").append(toIndentedString(clinicalConfirmation)).append("\n");
    sb.append("    epidemiologicalConfirmation: ").append(toIndentedString(epidemiologicalConfirmation)).append("\n");
    sb.append("    laboratoryDiagnosticConfirmation: ").append(toIndentedString(laboratoryDiagnosticConfirmation)).append("\n");
    sb.append("    investigationStatus: ").append(toIndentedString(investigationStatus)).append("\n");
    sb.append("    investigatedDate: ").append(toIndentedString(investigatedDate)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    outcomeDate: ").append(toIndentedString(outcomeDate)).append("\n");
    sb.append("    sequelae: ").append(toIndentedString(sequelae)).append("\n");
    sb.append("    sequelaeDetails: ").append(toIndentedString(sequelaeDetails)).append("\n");
    sb.append("    responsibleRegion: ").append(toIndentedString(responsibleRegion)).append("\n");
    sb.append("    responsibleDistrict: ").append(toIndentedString(responsibleDistrict)).append("\n");
    sb.append("    responsibleCommunity: ").append(toIndentedString(responsibleCommunity)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    facilityType: ").append(toIndentedString(facilityType)).append("\n");
    sb.append("    healthFacility: ").append(toIndentedString(healthFacility)).append("\n");
    sb.append("    healthFacilityDetails: ").append(toIndentedString(healthFacilityDetails)).append("\n");
    sb.append("    pregnant: ").append(toIndentedString(pregnant)).append("\n");
    sb.append("    vaccination: ").append(toIndentedString(vaccination)).append("\n");
    sb.append("    vaccinationDoses: ").append(toIndentedString(vaccinationDoses)).append("\n");
    sb.append("    firstVaccinationDate: ").append(toIndentedString(firstVaccinationDate)).append("\n");
    sb.append("    lastVaccinationDate: ").append(toIndentedString(lastVaccinationDate)).append("\n");
    sb.append("    vaccinationInfoSource: ").append(toIndentedString(vaccinationInfoSource)).append("\n");
    sb.append("    vaccineName: ").append(toIndentedString(vaccineName)).append("\n");
    sb.append("    otherVaccineName: ").append(toIndentedString(otherVaccineName)).append("\n");
    sb.append("    vaccineManufacturer: ").append(toIndentedString(vaccineManufacturer)).append("\n");
    sb.append("    otherVaccineManufacturer: ").append(toIndentedString(otherVaccineManufacturer)).append("\n");
    sb.append("    vaccineInn: ").append(toIndentedString(vaccineInn)).append("\n");
    sb.append("    vaccineBatchNumber: ").append(toIndentedString(vaccineBatchNumber)).append("\n");
    sb.append("    vaccineUniiCode: ").append(toIndentedString(vaccineUniiCode)).append("\n");
    sb.append("    vaccineAtcCode: ").append(toIndentedString(vaccineAtcCode)).append("\n");
    sb.append("    vaccine: ").append(toIndentedString(vaccine)).append("\n");
    sb.append("    smallpoxVaccinationScar: ").append(toIndentedString(smallpoxVaccinationScar)).append("\n");
    sb.append("    smallpoxVaccinationReceived: ").append(toIndentedString(smallpoxVaccinationReceived)).append("\n");
    sb.append("    surveillanceOfficer: ").append(toIndentedString(surveillanceOfficer)).append("\n");
    sb.append("    clinicianName: ").append(toIndentedString(clinicianName)).append("\n");
    sb.append("    clinicianPhone: ").append(toIndentedString(clinicianPhone)).append("\n");
    sb.append("    clinicianEmail: ").append(toIndentedString(clinicianEmail)).append("\n");
    sb.append("    notifyingClinic: ").append(toIndentedString(notifyingClinic)).append("\n");
    sb.append("    notifyingClinicDetails: ").append(toIndentedString(notifyingClinicDetails)).append("\n");
    sb.append("    caseOfficer: ").append(toIndentedString(caseOfficer)).append("\n");
    sb.append("    reportLat: ").append(toIndentedString(reportLat)).append("\n");
    sb.append("    reportLon: ").append(toIndentedString(reportLon)).append("\n");
    sb.append("    reportLatLonAccuracy: ").append(toIndentedString(reportLatLonAccuracy)).append("\n");
    sb.append("    hospitalization: ").append(toIndentedString(hospitalization)).append("\n");
    sb.append("    symptoms: ").append(toIndentedString(symptoms)).append("\n");
    sb.append("    epiData: ").append(toIndentedString(epiData)).append("\n");
    sb.append("    therapy: ").append(toIndentedString(therapy)).append("\n");
    sb.append("    clinicalCourse: ").append(toIndentedString(clinicalCourse)).append("\n");
    sb.append("    maternalHistory: ").append(toIndentedString(maternalHistory)).append("\n");
    sb.append("    creationVersion: ").append(toIndentedString(creationVersion)).append("\n");
    sb.append("    portHealthInfo: ").append(toIndentedString(portHealthInfo)).append("\n");
    sb.append("    caseOrigin: ").append(toIndentedString(caseOrigin)).append("\n");
    sb.append("    pointOfEntry: ").append(toIndentedString(pointOfEntry)).append("\n");
    sb.append("    pointOfEntryDetails: ").append(toIndentedString(pointOfEntryDetails)).append("\n");
    sb.append("    additionalDetails: ").append(toIndentedString(additionalDetails)).append("\n");
    sb.append("    externalID: ").append(toIndentedString(externalID)).append("\n");
    sb.append("    externalToken: ").append(toIndentedString(externalToken)).append("\n");
    sb.append("    sharedToCountry: ").append(toIndentedString(sharedToCountry)).append("\n");
    sb.append("    nosocomialOutbreak: ").append(toIndentedString(nosocomialOutbreak)).append("\n");
    sb.append("    infectionSetting: ").append(toIndentedString(infectionSetting)).append("\n");
    sb.append("    quarantine: ").append(toIndentedString(quarantine)).append("\n");
    sb.append("    quarantineTypeDetails: ").append(toIndentedString(quarantineTypeDetails)).append("\n");
    sb.append("    quarantineFrom: ").append(toIndentedString(quarantineFrom)).append("\n");
    sb.append("    quarantineTo: ").append(toIndentedString(quarantineTo)).append("\n");
    sb.append("    quarantineHelpNeeded: ").append(toIndentedString(quarantineHelpNeeded)).append("\n");
    sb.append("    quarantineOrderedVerbally: ").append(toIndentedString(quarantineOrderedVerbally)).append("\n");
    sb.append("    quarantineOrderedOfficialDocument: ").append(toIndentedString(quarantineOrderedOfficialDocument)).append("\n");
    sb.append("    quarantineOrderedVerballyDate: ").append(toIndentedString(quarantineOrderedVerballyDate)).append("\n");
    sb.append("    quarantineOrderedOfficialDocumentDate: ").append(toIndentedString(quarantineOrderedOfficialDocumentDate)).append("\n");
    sb.append("    quarantineHomePossible: ").append(toIndentedString(quarantineHomePossible)).append("\n");
    sb.append("    quarantineHomePossibleComment: ").append(toIndentedString(quarantineHomePossibleComment)).append("\n");
    sb.append("    quarantineHomeSupplyEnsured: ").append(toIndentedString(quarantineHomeSupplyEnsured)).append("\n");
    sb.append("    quarantineHomeSupplyEnsuredComment: ").append(toIndentedString(quarantineHomeSupplyEnsuredComment)).append("\n");
    sb.append("    quarantineExtended: ").append(toIndentedString(quarantineExtended)).append("\n");
    sb.append("    quarantineReduced: ").append(toIndentedString(quarantineReduced)).append("\n");
    sb.append("    quarantineOfficialOrderSent: ").append(toIndentedString(quarantineOfficialOrderSent)).append("\n");
    sb.append("    quarantineOfficialOrderSentDate: ").append(toIndentedString(quarantineOfficialOrderSentDate)).append("\n");
    sb.append("    postpartum: ").append(toIndentedString(postpartum)).append("\n");
    sb.append("    trimester: ").append(toIndentedString(trimester)).append("\n");
    sb.append("    followUpStatus: ").append(toIndentedString(followUpStatus)).append("\n");
    sb.append("    followUpComment: ").append(toIndentedString(followUpComment)).append("\n");
    sb.append("    followUpUntil: ").append(toIndentedString(followUpUntil)).append("\n");
    sb.append("    overwriteFollowUpUntil: ").append(toIndentedString(overwriteFollowUpUntil)).append("\n");
    sb.append("    sormasToSormasOriginInfo: ").append(toIndentedString(sormasToSormasOriginInfo)).append("\n");
    sb.append("    ownershipHandedOver: ").append(toIndentedString(ownershipHandedOver)).append("\n");
    sb.append("    caseIdIsm: ").append(toIndentedString(caseIdIsm)).append("\n");
    sb.append("    contactTracingFirstContactType: ").append(toIndentedString(contactTracingFirstContactType)).append("\n");
    sb.append("    contactTracingFirstContactDate: ").append(toIndentedString(contactTracingFirstContactDate)).append("\n");
    sb.append("    wasInQuarantineBeforeIsolation: ").append(toIndentedString(wasInQuarantineBeforeIsolation)).append("\n");
    sb.append("    quarantineReasonBeforeIsolation: ").append(toIndentedString(quarantineReasonBeforeIsolation)).append("\n");
    sb.append("    quarantineReasonBeforeIsolationDetails: ").append(toIndentedString(quarantineReasonBeforeIsolationDetails)).append("\n");
    sb.append("    endOfIsolationReason: ").append(toIndentedString(endOfIsolationReason)).append("\n");
    sb.append("    endOfIsolationReasonDetails: ").append(toIndentedString(endOfIsolationReasonDetails)).append("\n");
    sb.append("    prohibitionToWork: ").append(toIndentedString(prohibitionToWork)).append("\n");
    sb.append("    prohibitionToWorkFrom: ").append(toIndentedString(prohibitionToWorkFrom)).append("\n");
    sb.append("    prohibitionToWorkUntil: ").append(toIndentedString(prohibitionToWorkUntil)).append("\n");
    sb.append("    reInfection: ").append(toIndentedString(reInfection)).append("\n");
    sb.append("    previousInfectionDate: ").append(toIndentedString(previousInfectionDate)).append("\n");
    sb.append("    reportingDistrict: ").append(toIndentedString(reportingDistrict)).append("\n");
    sb.append("    bloodOrganOrTissueDonated: ").append(toIndentedString(bloodOrganOrTissueDonated)).append("\n");
    sb.append("    notACaseReasonNegativeTest: ").append(toIndentedString(notACaseReasonNegativeTest)).append("\n");
    sb.append("    notACaseReasonPhysicianInformation: ").append(toIndentedString(notACaseReasonPhysicianInformation)).append("\n");
    sb.append("    notACaseReasonDifferentPathogen: ").append(toIndentedString(notACaseReasonDifferentPathogen)).append("\n");
    sb.append("    notACaseReasonOther: ").append(toIndentedString(notACaseReasonOther)).append("\n");
    sb.append("    notACaseReasonDetails: ").append(toIndentedString(notACaseReasonDetails)).append("\n");
    sb.append("    followUpStatusChangeDate: ").append(toIndentedString(followUpStatusChangeDate)).append("\n");
    sb.append("    followUpStatusChangeUser: ").append(toIndentedString(followUpStatusChangeUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
