server {
    server_name ${IRIS_CLIENT_DOMAIN};
    listen 443 ssl;

    ssl_certificate /etc/iris/${IRIS_CLIENT_DOMAIN_CERT};
    ssl_certificate_key /etc/iris/${IRIS_CLIENT_DOMAIN_CERT_KEY};

    # Proxy headers
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;

    # Proxy timeouts
    proxy_connect_timeout              10s;
    proxy_send_timeout                 30s;
    proxy_read_timeout                 30s;


    location / {
        proxy_pass                         http://iris-frontend:28080;
    }

    location /api/ {
        proxy_pass  http://iris-client:8092/;
        proxy_cookie_path / /api/;
    }

    # SECURITY
    # Strict Transport Security
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    # X Content Type Options
    add_header X-Content-Type-Options nosniff;
    # X Frame Options - no iframes allowed
    add_header X-Frame-Options DENY;
    # Content Security Policy - no iframes or external resources allowed
    add_header Content-Security-Policy "default-src 'self'; child-src 'none'; frame-ancestors 'none';";
    # X-XSS-Protection - legacy, should be covered by CSP
    add_header X-XSS-Protection "1; mode=block";
    # Referrer-Policy
    add_header Referrer-Policy 'strict-origin';

    #GZIP
    gzip on;
    gzip_static on;
    gzip_types text/css application/javascript image/vnd.microsoft.icon image/png image/svg+xml application/x-font-ttf application/x-font-opentype application/vnd.ms-fontobject;

    # CACHE
    location ~* \.(js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|woff|woff2|svg)$ {
        proxy_pass                         http://iris-frontend:28080;
        expires 1d;
        add_header Pragma "private";
        add_header Cache-Control "private";
    }

    # CORS
    set $cors_origin "";
    set $cors_cred   "";
    set $cors_header "";
    set $cors_method "";
    set $cors_maxage "";
    if ( $http_origin ~* ((https:\/\/iris.staging.iris-gateway\.de|https:\/\/client.dev.iris-gateway\.de|http:\/\/localhost:8080|http:\/\/localhost:8081)$)) {
            set $cors_origin $http_origin;
            set $cors_cred   true;
            set $cors_header $http_access_control_request_headers;
            set $cors_method $http_access_control_request_method;
            set $cors_maxage "86400";
    }

    # "always" keyword is required to also set access-control headers in case of error responses.
    # Otherwise errors like 403 will not be forwarded by nginx and instead
    add_header Access-Control-Allow-Origin      $cors_origin    always;
    add_header Access-Control-Allow-Credentials $cors_cred      always;
    add_header Access-Control-Allow-Headers     $cors_header    always;
    add_header Access-Control-Allow-Methods     $cors_method    always;
    add_header Access-Control-Max-Age           $cors_maxage    always;
    add_header Vary                             origin          always;

    # preflight requests
    if ($request_method = OPTIONS) {
        return 204;
    }
}

