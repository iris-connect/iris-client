########################################################
# Intended for deployments at the health departments
#
# Provides IRIS client BFF and frontend together with an NGINX. Uses an externally provided postgres database.
# IRIS frontend over NGINX: port = 443
########################################################
version: "3.4"
services:
  # IRIS Client backend for frontend
  iris-client:
    image: inoeg/iris-client-bff:1.0
    expose:
      - 8092
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      EPS_CLIENT_EPS_CLIENT_URL: https://eps:5556/jsonrpc
      EPS_CLIENT_PROXY_CLIENT_URL: https://private-proxy-eps:7766/jsonrpc
      PROXY_SERVICE_EPS_NAME: ${PROXY_OP}
      PROXY_SERVICE_TARGET_SUBDOMAIN: proxy.test-gesundheitsamt.de
      SECURITY_AUTH_DB_ADMIN_USER_NAME:
      SECURITY_AUTH_DB_ADMIN_USER_PASSWORD:
      SECURITY_JWT_JWT_SHARED_SECRET:
    restart: unless-stopped

  # IRIS Client Frontend for users
  iris-frontend:
    image: inoeg/iris-client-frontend:1.0
    expose:
      - 28080
    environment:
      SORMAS_SIDECAR_BASE_URL: /api
      LOCAL_CONTACT_PERSON_NAME:
      LOCAL_CONTACT_PERSON_MAIL:
      LOCAL_CONTACT_PERSON_PHONE:
    restart: unless-stopped
    depends_on:
      - iris-client

  # Endpoint server to communicate with Apps and IRIS Connect central services
  eps:
    image: inoeg/eps:v0.0.4
    expose:
      - 4446
      - 5556
    depends_on:
      - iris-client
    volumes:
      - ./conf/eps:/app/settings
    environment:
      EPS_SETTINGS: "settings/roles/hd"
      EPS_OP:
      EPS_CLIENT_CERT:
      EPS_CLIENT_CERT_KEY:
      EPS_SD_ENDPOINT:
      HTTPS_PROXY:
      TRUSTED_CA_CRT:
    command: ["--level", "debug", "server", "run"]

  # Proxy for inbound connections.
  private-proxy:
    image: inoeg/proxy:v0.0.4
    expose:
      - 5545
      - 8877
    volumes:
      - ./conf/proxy:/app/settings
      - proxy_db_iris:/app/db
    environment:
      PROXY_SETTINGS: settings/roles/private-proxy
      PROXY_OP:
      PROXY_CLIENT_CERT:
      PROXY_CLIENT_CERT_KEY:
      HTTPS_PROXY:
      TRUSTED_CA_CRT:
    command: ["--level", "trace", "run", "private"]

  private-proxy-eps:
    image: inoeg/eps:v0.0.4
    expose:
      - 7766
      - 7776
    volumes:
      - ./conf/proxy:/app/settings
    environment:
      EPS_SETTINGS: settings/roles/private-proxy-eps
      PROXY_OP:
      PROXY_CLIENT_CERT:
      PROXY_CLIENT_CERT_KEY:
      EPS_SD_ENDPOINT:
      HTTPS_PROXY:
      TRUSTED_CA_CRT:
    command: ["--level", "trace", "server", "run"]

  # Reverse Proxy
  nginx:
    image: inoeg/iris-client-nginx:1.0
    ports:
      - 443:443
    environment:
      IRIS_CLIENT_DOMAIN:
      IRIS_CLIENT_DOMAIN_CERT:
      IRIS_CLIENT_DOMAIN_CERT_KEY:
    volumes:
      - ./conf/nginx:/etc/iris
    depends_on:
      - iris-client
      - iris-frontend

  # Watchtower for auto-updates
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# for Docker on Windows hosts - untested!
# https://stackoverflow.com/questions/57466568/how-do-you-mount-the-docker-socket-on-windows
#      - //var/run/docker.sock://var/run/docker.sock
    environment:
      TZ: Europe/Berlin
      WATCHTOWER_SCHEDULE: 0 0 3 * * *
      WATCHTOWER_MONITOR_ONLY: true
    depends_on:
      - nginx

volumes:
  proxy_db_iris:
